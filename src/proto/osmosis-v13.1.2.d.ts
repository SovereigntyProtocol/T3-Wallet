import * as $protobuf from "protobufjs";
/** Namespace osmosis. */
export namespace osmosis {

    /** Namespace epochs. */
    namespace epochs {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls EpochInfos.
                 * @param request QueryEpochsInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryEpochsInfoResponse
                 */
                public epochInfos(request: osmosis.epochs.v1beta1.IQueryEpochsInfoRequest, callback: osmosis.epochs.v1beta1.Query.EpochInfosCallback): void;

                /**
                 * Calls EpochInfos.
                 * @param request QueryEpochsInfoRequest message or plain object
                 * @returns Promise
                 */
                public epochInfos(request: osmosis.epochs.v1beta1.IQueryEpochsInfoRequest): Promise<osmosis.epochs.v1beta1.QueryEpochsInfoResponse>;

                /**
                 * Calls CurrentEpoch.
                 * @param request QueryCurrentEpochRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCurrentEpochResponse
                 */
                public currentEpoch(request: osmosis.epochs.v1beta1.IQueryCurrentEpochRequest, callback: osmosis.epochs.v1beta1.Query.CurrentEpochCallback): void;

                /**
                 * Calls CurrentEpoch.
                 * @param request QueryCurrentEpochRequest message or plain object
                 * @returns Promise
                 */
                public currentEpoch(request: osmosis.epochs.v1beta1.IQueryCurrentEpochRequest): Promise<osmosis.epochs.v1beta1.QueryCurrentEpochResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.epochs.v1beta1.Query#epochInfos}.
                 * @param error Error, if any
                 * @param [response] QueryEpochsInfoResponse
                 */
                type EpochInfosCallback = (error: (Error|null), response?: osmosis.epochs.v1beta1.QueryEpochsInfoResponse) => void;

                /**
                 * Callback as used by {@link osmosis.epochs.v1beta1.Query#currentEpoch}.
                 * @param error Error, if any
                 * @param [response] QueryCurrentEpochResponse
                 */
                type CurrentEpochCallback = (error: (Error|null), response?: osmosis.epochs.v1beta1.QueryCurrentEpochResponse) => void;
            }

            /** Properties of a QueryEpochsInfoRequest. */
            interface IQueryEpochsInfoRequest {
            }

            /** Represents a QueryEpochsInfoRequest. */
            class QueryEpochsInfoRequest implements IQueryEpochsInfoRequest {

                /**
                 * Constructs a new QueryEpochsInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.epochs.v1beta1.IQueryEpochsInfoRequest);

                /**
                 * Encodes the specified QueryEpochsInfoRequest message. Does not implicitly {@link osmosis.epochs.v1beta1.QueryEpochsInfoRequest.verify|verify} messages.
                 * @param message QueryEpochsInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.epochs.v1beta1.IQueryEpochsInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEpochsInfoRequest message, length delimited. Does not implicitly {@link osmosis.epochs.v1beta1.QueryEpochsInfoRequest.verify|verify} messages.
                 * @param message QueryEpochsInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.epochs.v1beta1.IQueryEpochsInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEpochsInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEpochsInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.epochs.v1beta1.QueryEpochsInfoRequest;

                /**
                 * Decodes a QueryEpochsInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEpochsInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.epochs.v1beta1.QueryEpochsInfoRequest;

                /**
                 * Verifies a QueryEpochsInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEpochsInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEpochsInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.epochs.v1beta1.QueryEpochsInfoRequest;

                /**
                 * Creates a plain object from a QueryEpochsInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryEpochsInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.epochs.v1beta1.QueryEpochsInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEpochsInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryEpochsInfoResponse. */
            interface IQueryEpochsInfoResponse {

                /** QueryEpochsInfoResponse epochs */
                epochs?: (osmosis.epochs.v1beta1.IEpochInfo[]|null);
            }

            /** Represents a QueryEpochsInfoResponse. */
            class QueryEpochsInfoResponse implements IQueryEpochsInfoResponse {

                /**
                 * Constructs a new QueryEpochsInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.epochs.v1beta1.IQueryEpochsInfoResponse);

                /** QueryEpochsInfoResponse epochs. */
                public epochs: osmosis.epochs.v1beta1.IEpochInfo[];

                /**
                 * Encodes the specified QueryEpochsInfoResponse message. Does not implicitly {@link osmosis.epochs.v1beta1.QueryEpochsInfoResponse.verify|verify} messages.
                 * @param message QueryEpochsInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.epochs.v1beta1.IQueryEpochsInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEpochsInfoResponse message, length delimited. Does not implicitly {@link osmosis.epochs.v1beta1.QueryEpochsInfoResponse.verify|verify} messages.
                 * @param message QueryEpochsInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.epochs.v1beta1.IQueryEpochsInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEpochsInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEpochsInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.epochs.v1beta1.QueryEpochsInfoResponse;

                /**
                 * Decodes a QueryEpochsInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEpochsInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.epochs.v1beta1.QueryEpochsInfoResponse;

                /**
                 * Verifies a QueryEpochsInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEpochsInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEpochsInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.epochs.v1beta1.QueryEpochsInfoResponse;

                /**
                 * Creates a plain object from a QueryEpochsInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryEpochsInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.epochs.v1beta1.QueryEpochsInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEpochsInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCurrentEpochRequest. */
            interface IQueryCurrentEpochRequest {

                /** QueryCurrentEpochRequest identifier */
                identifier?: (string|null);
            }

            /** Represents a QueryCurrentEpochRequest. */
            class QueryCurrentEpochRequest implements IQueryCurrentEpochRequest {

                /**
                 * Constructs a new QueryCurrentEpochRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.epochs.v1beta1.IQueryCurrentEpochRequest);

                /** QueryCurrentEpochRequest identifier. */
                public identifier: string;

                /**
                 * Encodes the specified QueryCurrentEpochRequest message. Does not implicitly {@link osmosis.epochs.v1beta1.QueryCurrentEpochRequest.verify|verify} messages.
                 * @param message QueryCurrentEpochRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.epochs.v1beta1.IQueryCurrentEpochRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentEpochRequest message, length delimited. Does not implicitly {@link osmosis.epochs.v1beta1.QueryCurrentEpochRequest.verify|verify} messages.
                 * @param message QueryCurrentEpochRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.epochs.v1beta1.IQueryCurrentEpochRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentEpochRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentEpochRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.epochs.v1beta1.QueryCurrentEpochRequest;

                /**
                 * Decodes a QueryCurrentEpochRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentEpochRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.epochs.v1beta1.QueryCurrentEpochRequest;

                /**
                 * Verifies a QueryCurrentEpochRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentEpochRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentEpochRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.epochs.v1beta1.QueryCurrentEpochRequest;

                /**
                 * Creates a plain object from a QueryCurrentEpochRequest message. Also converts values to other types if specified.
                 * @param message QueryCurrentEpochRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.epochs.v1beta1.QueryCurrentEpochRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentEpochRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCurrentEpochResponse. */
            interface IQueryCurrentEpochResponse {

                /** QueryCurrentEpochResponse current_epoch */
                current_epoch?: (Long|null);
            }

            /** Represents a QueryCurrentEpochResponse. */
            class QueryCurrentEpochResponse implements IQueryCurrentEpochResponse {

                /**
                 * Constructs a new QueryCurrentEpochResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.epochs.v1beta1.IQueryCurrentEpochResponse);

                /** QueryCurrentEpochResponse current_epoch. */
                public current_epoch: Long;

                /**
                 * Encodes the specified QueryCurrentEpochResponse message. Does not implicitly {@link osmosis.epochs.v1beta1.QueryCurrentEpochResponse.verify|verify} messages.
                 * @param message QueryCurrentEpochResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.epochs.v1beta1.IQueryCurrentEpochResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCurrentEpochResponse message, length delimited. Does not implicitly {@link osmosis.epochs.v1beta1.QueryCurrentEpochResponse.verify|verify} messages.
                 * @param message QueryCurrentEpochResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.epochs.v1beta1.IQueryCurrentEpochResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCurrentEpochResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCurrentEpochResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.epochs.v1beta1.QueryCurrentEpochResponse;

                /**
                 * Decodes a QueryCurrentEpochResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCurrentEpochResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.epochs.v1beta1.QueryCurrentEpochResponse;

                /**
                 * Verifies a QueryCurrentEpochResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCurrentEpochResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCurrentEpochResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.epochs.v1beta1.QueryCurrentEpochResponse;

                /**
                 * Creates a plain object from a QueryCurrentEpochResponse message. Also converts values to other types if specified.
                 * @param message QueryCurrentEpochResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.epochs.v1beta1.QueryCurrentEpochResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCurrentEpochResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an EpochInfo. */
            interface IEpochInfo {

                /** EpochInfo identifier */
                identifier?: (string|null);

                /** EpochInfo start_time */
                start_time?: (google.protobuf.ITimestamp|null);

                /** EpochInfo duration */
                duration?: (google.protobuf.IDuration|null);

                /** EpochInfo current_epoch */
                current_epoch?: (Long|null);

                /** EpochInfo current_epoch_start_time */
                current_epoch_start_time?: (google.protobuf.ITimestamp|null);

                /** EpochInfo epoch_counting_started */
                epoch_counting_started?: (boolean|null);

                /** EpochInfo current_epoch_start_height */
                current_epoch_start_height?: (Long|null);
            }

            /** Represents an EpochInfo. */
            class EpochInfo implements IEpochInfo {

                /**
                 * Constructs a new EpochInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.epochs.v1beta1.IEpochInfo);

                /** EpochInfo identifier. */
                public identifier: string;

                /** EpochInfo start_time. */
                public start_time?: (google.protobuf.ITimestamp|null);

                /** EpochInfo duration. */
                public duration?: (google.protobuf.IDuration|null);

                /** EpochInfo current_epoch. */
                public current_epoch: Long;

                /** EpochInfo current_epoch_start_time. */
                public current_epoch_start_time?: (google.protobuf.ITimestamp|null);

                /** EpochInfo epoch_counting_started. */
                public epoch_counting_started: boolean;

                /** EpochInfo current_epoch_start_height. */
                public current_epoch_start_height: Long;

                /**
                 * Encodes the specified EpochInfo message. Does not implicitly {@link osmosis.epochs.v1beta1.EpochInfo.verify|verify} messages.
                 * @param message EpochInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.epochs.v1beta1.IEpochInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EpochInfo message, length delimited. Does not implicitly {@link osmosis.epochs.v1beta1.EpochInfo.verify|verify} messages.
                 * @param message EpochInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.epochs.v1beta1.IEpochInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EpochInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EpochInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.epochs.v1beta1.EpochInfo;

                /**
                 * Decodes an EpochInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EpochInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.epochs.v1beta1.EpochInfo;

                /**
                 * Verifies an EpochInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EpochInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EpochInfo
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.epochs.v1beta1.EpochInfo;

                /**
                 * Creates a plain object from an EpochInfo message. Also converts values to other types if specified.
                 * @param message EpochInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.epochs.v1beta1.EpochInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EpochInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState epochs */
                epochs?: (osmosis.epochs.v1beta1.IEpochInfo[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.epochs.v1beta1.IGenesisState);

                /** GenesisState epochs. */
                public epochs: osmosis.epochs.v1beta1.IEpochInfo[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.epochs.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.epochs.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.epochs.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.epochs.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.epochs.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.epochs.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.epochs.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.epochs.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace gamm. */
    namespace gamm {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a SmoothWeightChangeParams. */
            interface ISmoothWeightChangeParams {

                /** SmoothWeightChangeParams start_time */
                start_time?: (google.protobuf.ITimestamp|null);

                /** SmoothWeightChangeParams duration */
                duration?: (google.protobuf.IDuration|null);

                /** SmoothWeightChangeParams initial_pool_weights */
                initial_pool_weights?: (osmosis.gamm.v1beta1.IPoolAsset[]|null);

                /** SmoothWeightChangeParams target_pool_weights */
                target_pool_weights?: (osmosis.gamm.v1beta1.IPoolAsset[]|null);
            }

            /** Represents a SmoothWeightChangeParams. */
            class SmoothWeightChangeParams implements ISmoothWeightChangeParams {

                /**
                 * Constructs a new SmoothWeightChangeParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.ISmoothWeightChangeParams);

                /** SmoothWeightChangeParams start_time. */
                public start_time?: (google.protobuf.ITimestamp|null);

                /** SmoothWeightChangeParams duration. */
                public duration?: (google.protobuf.IDuration|null);

                /** SmoothWeightChangeParams initial_pool_weights. */
                public initial_pool_weights: osmosis.gamm.v1beta1.IPoolAsset[];

                /** SmoothWeightChangeParams target_pool_weights. */
                public target_pool_weights: osmosis.gamm.v1beta1.IPoolAsset[];

                /**
                 * Encodes the specified SmoothWeightChangeParams message. Does not implicitly {@link osmosis.gamm.v1beta1.SmoothWeightChangeParams.verify|verify} messages.
                 * @param message SmoothWeightChangeParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.ISmoothWeightChangeParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SmoothWeightChangeParams message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.SmoothWeightChangeParams.verify|verify} messages.
                 * @param message SmoothWeightChangeParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.ISmoothWeightChangeParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SmoothWeightChangeParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SmoothWeightChangeParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.SmoothWeightChangeParams;

                /**
                 * Decodes a SmoothWeightChangeParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SmoothWeightChangeParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.SmoothWeightChangeParams;

                /**
                 * Verifies a SmoothWeightChangeParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SmoothWeightChangeParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SmoothWeightChangeParams
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.SmoothWeightChangeParams;

                /**
                 * Creates a plain object from a SmoothWeightChangeParams message. Also converts values to other types if specified.
                 * @param message SmoothWeightChangeParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.SmoothWeightChangeParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SmoothWeightChangeParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PoolParams. */
            interface IPoolParams {

                /** PoolParams swap_fee */
                swap_fee?: (string|null);

                /** PoolParams exit_fee */
                exit_fee?: (string|null);

                /** PoolParams smooth_weight_change_params */
                smooth_weight_change_params?: (osmosis.gamm.v1beta1.ISmoothWeightChangeParams|null);
            }

            /** Represents a PoolParams. */
            class PoolParams implements IPoolParams {

                /**
                 * Constructs a new PoolParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IPoolParams);

                /** PoolParams swap_fee. */
                public swap_fee: string;

                /** PoolParams exit_fee. */
                public exit_fee: string;

                /** PoolParams smooth_weight_change_params. */
                public smooth_weight_change_params?: (osmosis.gamm.v1beta1.ISmoothWeightChangeParams|null);

                /**
                 * Encodes the specified PoolParams message. Does not implicitly {@link osmosis.gamm.v1beta1.PoolParams.verify|verify} messages.
                 * @param message PoolParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IPoolParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PoolParams message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.PoolParams.verify|verify} messages.
                 * @param message PoolParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IPoolParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PoolParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PoolParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.PoolParams;

                /**
                 * Decodes a PoolParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PoolParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.PoolParams;

                /**
                 * Verifies a PoolParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PoolParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PoolParams
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.PoolParams;

                /**
                 * Creates a plain object from a PoolParams message. Also converts values to other types if specified.
                 * @param message PoolParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.PoolParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PoolParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PoolAsset. */
            interface IPoolAsset {

                /** PoolAsset token */
                token?: (cosmos.base.v1beta1.ICoin|null);

                /** PoolAsset weight */
                weight?: (string|null);
            }

            /** Represents a PoolAsset. */
            class PoolAsset implements IPoolAsset {

                /**
                 * Constructs a new PoolAsset.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IPoolAsset);

                /** PoolAsset token. */
                public token?: (cosmos.base.v1beta1.ICoin|null);

                /** PoolAsset weight. */
                public weight: string;

                /**
                 * Encodes the specified PoolAsset message. Does not implicitly {@link osmosis.gamm.v1beta1.PoolAsset.verify|verify} messages.
                 * @param message PoolAsset message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IPoolAsset, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PoolAsset message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.PoolAsset.verify|verify} messages.
                 * @param message PoolAsset message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IPoolAsset, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PoolAsset message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PoolAsset
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.PoolAsset;

                /**
                 * Decodes a PoolAsset message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PoolAsset
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.PoolAsset;

                /**
                 * Verifies a PoolAsset message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PoolAsset message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PoolAsset
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.PoolAsset;

                /**
                 * Creates a plain object from a PoolAsset message. Also converts values to other types if specified.
                 * @param message PoolAsset
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.PoolAsset, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PoolAsset to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Pool. */
            interface IPool {

                /** Pool address */
                address?: (string|null);

                /** Pool id */
                id?: (Long|null);

                /** Pool pool_params */
                pool_params?: (osmosis.gamm.v1beta1.IPoolParams|null);

                /** Pool future_pool_governor */
                future_pool_governor?: (string|null);

                /** Pool total_shares */
                total_shares?: (cosmos.base.v1beta1.ICoin|null);

                /** Pool pool_assets */
                pool_assets?: (osmosis.gamm.v1beta1.IPoolAsset[]|null);

                /** Pool total_weight */
                total_weight?: (string|null);
            }

            /** Represents a Pool. */
            class Pool implements IPool {

                /**
                 * Constructs a new Pool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IPool);

                /** Pool address. */
                public address: string;

                /** Pool id. */
                public id: Long;

                /** Pool pool_params. */
                public pool_params?: (osmosis.gamm.v1beta1.IPoolParams|null);

                /** Pool future_pool_governor. */
                public future_pool_governor: string;

                /** Pool total_shares. */
                public total_shares?: (cosmos.base.v1beta1.ICoin|null);

                /** Pool pool_assets. */
                public pool_assets: osmosis.gamm.v1beta1.IPoolAsset[];

                /** Pool total_weight. */
                public total_weight: string;

                /**
                 * Encodes the specified Pool message. Does not implicitly {@link osmosis.gamm.v1beta1.Pool.verify|verify} messages.
                 * @param message Pool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Pool message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.Pool.verify|verify} messages.
                 * @param message Pool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Pool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Pool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.Pool;

                /**
                 * Decodes a Pool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Pool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.Pool;

                /**
                 * Verifies a Pool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Pool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Pool
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.Pool;

                /**
                 * Creates a plain object from a Pool message. Also converts values to other types if specified.
                 * @param message Pool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.Pool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Pool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls JoinPool.
                 * @param request MsgJoinPool message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgJoinPoolResponse
                 */
                public joinPool(request: osmosis.gamm.v1beta1.IMsgJoinPool, callback: osmosis.gamm.v1beta1.Msg.JoinPoolCallback): void;

                /**
                 * Calls JoinPool.
                 * @param request MsgJoinPool message or plain object
                 * @returns Promise
                 */
                public joinPool(request: osmosis.gamm.v1beta1.IMsgJoinPool): Promise<osmosis.gamm.v1beta1.MsgJoinPoolResponse>;

                /**
                 * Calls ExitPool.
                 * @param request MsgExitPool message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgExitPoolResponse
                 */
                public exitPool(request: osmosis.gamm.v1beta1.IMsgExitPool, callback: osmosis.gamm.v1beta1.Msg.ExitPoolCallback): void;

                /**
                 * Calls ExitPool.
                 * @param request MsgExitPool message or plain object
                 * @returns Promise
                 */
                public exitPool(request: osmosis.gamm.v1beta1.IMsgExitPool): Promise<osmosis.gamm.v1beta1.MsgExitPoolResponse>;

                /**
                 * Calls SwapExactAmountIn.
                 * @param request MsgSwapExactAmountIn message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSwapExactAmountInResponse
                 */
                public swapExactAmountIn(request: osmosis.gamm.v1beta1.IMsgSwapExactAmountIn, callback: osmosis.gamm.v1beta1.Msg.SwapExactAmountInCallback): void;

                /**
                 * Calls SwapExactAmountIn.
                 * @param request MsgSwapExactAmountIn message or plain object
                 * @returns Promise
                 */
                public swapExactAmountIn(request: osmosis.gamm.v1beta1.IMsgSwapExactAmountIn): Promise<osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse>;

                /**
                 * Calls SwapExactAmountOut.
                 * @param request MsgSwapExactAmountOut message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSwapExactAmountOutResponse
                 */
                public swapExactAmountOut(request: osmosis.gamm.v1beta1.IMsgSwapExactAmountOut, callback: osmosis.gamm.v1beta1.Msg.SwapExactAmountOutCallback): void;

                /**
                 * Calls SwapExactAmountOut.
                 * @param request MsgSwapExactAmountOut message or plain object
                 * @returns Promise
                 */
                public swapExactAmountOut(request: osmosis.gamm.v1beta1.IMsgSwapExactAmountOut): Promise<osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse>;

                /**
                 * Calls JoinSwapExternAmountIn.
                 * @param request MsgJoinSwapExternAmountIn message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgJoinSwapExternAmountInResponse
                 */
                public joinSwapExternAmountIn(request: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountIn, callback: osmosis.gamm.v1beta1.Msg.JoinSwapExternAmountInCallback): void;

                /**
                 * Calls JoinSwapExternAmountIn.
                 * @param request MsgJoinSwapExternAmountIn message or plain object
                 * @returns Promise
                 */
                public joinSwapExternAmountIn(request: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountIn): Promise<osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse>;

                /**
                 * Calls JoinSwapShareAmountOut.
                 * @param request MsgJoinSwapShareAmountOut message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgJoinSwapShareAmountOutResponse
                 */
                public joinSwapShareAmountOut(request: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOut, callback: osmosis.gamm.v1beta1.Msg.JoinSwapShareAmountOutCallback): void;

                /**
                 * Calls JoinSwapShareAmountOut.
                 * @param request MsgJoinSwapShareAmountOut message or plain object
                 * @returns Promise
                 */
                public joinSwapShareAmountOut(request: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOut): Promise<osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse>;

                /**
                 * Calls ExitSwapExternAmountOut.
                 * @param request MsgExitSwapExternAmountOut message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgExitSwapExternAmountOutResponse
                 */
                public exitSwapExternAmountOut(request: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOut, callback: osmosis.gamm.v1beta1.Msg.ExitSwapExternAmountOutCallback): void;

                /**
                 * Calls ExitSwapExternAmountOut.
                 * @param request MsgExitSwapExternAmountOut message or plain object
                 * @returns Promise
                 */
                public exitSwapExternAmountOut(request: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOut): Promise<osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse>;

                /**
                 * Calls ExitSwapShareAmountIn.
                 * @param request MsgExitSwapShareAmountIn message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgExitSwapShareAmountInResponse
                 */
                public exitSwapShareAmountIn(request: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountIn, callback: osmosis.gamm.v1beta1.Msg.ExitSwapShareAmountInCallback): void;

                /**
                 * Calls ExitSwapShareAmountIn.
                 * @param request MsgExitSwapShareAmountIn message or plain object
                 * @returns Promise
                 */
                public exitSwapShareAmountIn(request: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountIn): Promise<osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#joinPool}.
                 * @param error Error, if any
                 * @param [response] MsgJoinPoolResponse
                 */
                type JoinPoolCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgJoinPoolResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#exitPool}.
                 * @param error Error, if any
                 * @param [response] MsgExitPoolResponse
                 */
                type ExitPoolCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgExitPoolResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#swapExactAmountIn}.
                 * @param error Error, if any
                 * @param [response] MsgSwapExactAmountInResponse
                 */
                type SwapExactAmountInCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#swapExactAmountOut}.
                 * @param error Error, if any
                 * @param [response] MsgSwapExactAmountOutResponse
                 */
                type SwapExactAmountOutCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#joinSwapExternAmountIn}.
                 * @param error Error, if any
                 * @param [response] MsgJoinSwapExternAmountInResponse
                 */
                type JoinSwapExternAmountInCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#joinSwapShareAmountOut}.
                 * @param error Error, if any
                 * @param [response] MsgJoinSwapShareAmountOutResponse
                 */
                type JoinSwapShareAmountOutCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#exitSwapExternAmountOut}.
                 * @param error Error, if any
                 * @param [response] MsgExitSwapExternAmountOutResponse
                 */
                type ExitSwapExternAmountOutCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Msg#exitSwapShareAmountIn}.
                 * @param error Error, if any
                 * @param [response] MsgExitSwapShareAmountInResponse
                 */
                type ExitSwapShareAmountInCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse) => void;
            }

            /** Properties of a MsgJoinPool. */
            interface IMsgJoinPool {

                /** MsgJoinPool sender */
                sender?: (string|null);

                /** MsgJoinPool pool_id */
                pool_id?: (Long|null);

                /** MsgJoinPool share_out_amount */
                share_out_amount?: (string|null);

                /** MsgJoinPool token_in_maxs */
                token_in_maxs?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgJoinPool. */
            class MsgJoinPool implements IMsgJoinPool {

                /**
                 * Constructs a new MsgJoinPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgJoinPool);

                /** MsgJoinPool sender. */
                public sender: string;

                /** MsgJoinPool pool_id. */
                public pool_id: Long;

                /** MsgJoinPool share_out_amount. */
                public share_out_amount: string;

                /** MsgJoinPool token_in_maxs. */
                public token_in_maxs: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgJoinPool message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinPool.verify|verify} messages.
                 * @param message MsgJoinPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgJoinPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgJoinPool message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinPool.verify|verify} messages.
                 * @param message MsgJoinPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgJoinPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgJoinPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgJoinPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgJoinPool;

                /**
                 * Decodes a MsgJoinPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgJoinPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgJoinPool;

                /**
                 * Verifies a MsgJoinPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgJoinPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgJoinPool
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgJoinPool;

                /**
                 * Creates a plain object from a MsgJoinPool message. Also converts values to other types if specified.
                 * @param message MsgJoinPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgJoinPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgJoinPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgJoinPoolResponse. */
            interface IMsgJoinPoolResponse {

                /** MsgJoinPoolResponse share_out_amount */
                share_out_amount?: (string|null);

                /** MsgJoinPoolResponse token_in */
                token_in?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgJoinPoolResponse. */
            class MsgJoinPoolResponse implements IMsgJoinPoolResponse {

                /**
                 * Constructs a new MsgJoinPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgJoinPoolResponse);

                /** MsgJoinPoolResponse share_out_amount. */
                public share_out_amount: string;

                /** MsgJoinPoolResponse token_in. */
                public token_in: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgJoinPoolResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinPoolResponse.verify|verify} messages.
                 * @param message MsgJoinPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgJoinPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgJoinPoolResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinPoolResponse.verify|verify} messages.
                 * @param message MsgJoinPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgJoinPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgJoinPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgJoinPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgJoinPoolResponse;

                /**
                 * Decodes a MsgJoinPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgJoinPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgJoinPoolResponse;

                /**
                 * Verifies a MsgJoinPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgJoinPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgJoinPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgJoinPoolResponse;

                /**
                 * Creates a plain object from a MsgJoinPoolResponse message. Also converts values to other types if specified.
                 * @param message MsgJoinPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgJoinPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgJoinPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExitPool. */
            interface IMsgExitPool {

                /** MsgExitPool sender */
                sender?: (string|null);

                /** MsgExitPool pool_id */
                pool_id?: (Long|null);

                /** MsgExitPool share_in_amount */
                share_in_amount?: (string|null);

                /** MsgExitPool token_out_mins */
                token_out_mins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgExitPool. */
            class MsgExitPool implements IMsgExitPool {

                /**
                 * Constructs a new MsgExitPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgExitPool);

                /** MsgExitPool sender. */
                public sender: string;

                /** MsgExitPool pool_id. */
                public pool_id: Long;

                /** MsgExitPool share_in_amount. */
                public share_in_amount: string;

                /** MsgExitPool token_out_mins. */
                public token_out_mins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgExitPool message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitPool.verify|verify} messages.
                 * @param message MsgExitPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgExitPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExitPool message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitPool.verify|verify} messages.
                 * @param message MsgExitPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgExitPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExitPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExitPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgExitPool;

                /**
                 * Decodes a MsgExitPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExitPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgExitPool;

                /**
                 * Verifies a MsgExitPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExitPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExitPool
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgExitPool;

                /**
                 * Creates a plain object from a MsgExitPool message. Also converts values to other types if specified.
                 * @param message MsgExitPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgExitPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExitPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExitPoolResponse. */
            interface IMsgExitPoolResponse {

                /** MsgExitPoolResponse token_out */
                token_out?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a MsgExitPoolResponse. */
            class MsgExitPoolResponse implements IMsgExitPoolResponse {

                /**
                 * Constructs a new MsgExitPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgExitPoolResponse);

                /** MsgExitPoolResponse token_out. */
                public token_out: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified MsgExitPoolResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitPoolResponse.verify|verify} messages.
                 * @param message MsgExitPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgExitPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExitPoolResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitPoolResponse.verify|verify} messages.
                 * @param message MsgExitPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgExitPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExitPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExitPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgExitPoolResponse;

                /**
                 * Decodes a MsgExitPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExitPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgExitPoolResponse;

                /**
                 * Verifies a MsgExitPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExitPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExitPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgExitPoolResponse;

                /**
                 * Creates a plain object from a MsgExitPoolResponse message. Also converts values to other types if specified.
                 * @param message MsgExitPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgExitPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExitPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SwapAmountInRoute. */
            interface ISwapAmountInRoute {

                /** SwapAmountInRoute pool_id */
                pool_id?: (Long|null);

                /** SwapAmountInRoute token_out_denom */
                token_out_denom?: (string|null);
            }

            /** Represents a SwapAmountInRoute. */
            class SwapAmountInRoute implements ISwapAmountInRoute {

                /**
                 * Constructs a new SwapAmountInRoute.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.ISwapAmountInRoute);

                /** SwapAmountInRoute pool_id. */
                public pool_id: Long;

                /** SwapAmountInRoute token_out_denom. */
                public token_out_denom: string;

                /**
                 * Encodes the specified SwapAmountInRoute message. Does not implicitly {@link osmosis.gamm.v1beta1.SwapAmountInRoute.verify|verify} messages.
                 * @param message SwapAmountInRoute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.ISwapAmountInRoute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SwapAmountInRoute message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.SwapAmountInRoute.verify|verify} messages.
                 * @param message SwapAmountInRoute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.ISwapAmountInRoute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SwapAmountInRoute message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SwapAmountInRoute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.SwapAmountInRoute;

                /**
                 * Decodes a SwapAmountInRoute message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SwapAmountInRoute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.SwapAmountInRoute;

                /**
                 * Verifies a SwapAmountInRoute message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SwapAmountInRoute message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SwapAmountInRoute
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.SwapAmountInRoute;

                /**
                 * Creates a plain object from a SwapAmountInRoute message. Also converts values to other types if specified.
                 * @param message SwapAmountInRoute
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.SwapAmountInRoute, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SwapAmountInRoute to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSwapExactAmountIn. */
            interface IMsgSwapExactAmountIn {

                /** MsgSwapExactAmountIn sender */
                sender?: (string|null);

                /** MsgSwapExactAmountIn routes */
                routes?: (osmosis.gamm.v1beta1.ISwapAmountInRoute[]|null);

                /** MsgSwapExactAmountIn token_in */
                token_in?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgSwapExactAmountIn token_out_min_amount */
                token_out_min_amount?: (string|null);
            }

            /** Represents a MsgSwapExactAmountIn. */
            class MsgSwapExactAmountIn implements IMsgSwapExactAmountIn {

                /**
                 * Constructs a new MsgSwapExactAmountIn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgSwapExactAmountIn);

                /** MsgSwapExactAmountIn sender. */
                public sender: string;

                /** MsgSwapExactAmountIn routes. */
                public routes: osmosis.gamm.v1beta1.ISwapAmountInRoute[];

                /** MsgSwapExactAmountIn token_in. */
                public token_in?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgSwapExactAmountIn token_out_min_amount. */
                public token_out_min_amount: string;

                /**
                 * Encodes the specified MsgSwapExactAmountIn message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountIn.verify|verify} messages.
                 * @param message MsgSwapExactAmountIn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountIn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSwapExactAmountIn message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountIn.verify|verify} messages.
                 * @param message MsgSwapExactAmountIn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountIn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSwapExactAmountIn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSwapExactAmountIn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgSwapExactAmountIn;

                /**
                 * Decodes a MsgSwapExactAmountIn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSwapExactAmountIn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgSwapExactAmountIn;

                /**
                 * Verifies a MsgSwapExactAmountIn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSwapExactAmountIn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSwapExactAmountIn
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgSwapExactAmountIn;

                /**
                 * Creates a plain object from a MsgSwapExactAmountIn message. Also converts values to other types if specified.
                 * @param message MsgSwapExactAmountIn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgSwapExactAmountIn, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSwapExactAmountIn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSwapExactAmountInResponse. */
            interface IMsgSwapExactAmountInResponse {

                /** MsgSwapExactAmountInResponse token_out_amount */
                token_out_amount?: (string|null);
            }

            /** Represents a MsgSwapExactAmountInResponse. */
            class MsgSwapExactAmountInResponse implements IMsgSwapExactAmountInResponse {

                /**
                 * Constructs a new MsgSwapExactAmountInResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgSwapExactAmountInResponse);

                /** MsgSwapExactAmountInResponse token_out_amount. */
                public token_out_amount: string;

                /**
                 * Encodes the specified MsgSwapExactAmountInResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.verify|verify} messages.
                 * @param message MsgSwapExactAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSwapExactAmountInResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.verify|verify} messages.
                 * @param message MsgSwapExactAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSwapExactAmountInResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSwapExactAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse;

                /**
                 * Decodes a MsgSwapExactAmountInResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSwapExactAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse;

                /**
                 * Verifies a MsgSwapExactAmountInResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSwapExactAmountInResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSwapExactAmountInResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse;

                /**
                 * Creates a plain object from a MsgSwapExactAmountInResponse message. Also converts values to other types if specified.
                 * @param message MsgSwapExactAmountInResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSwapExactAmountInResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SwapAmountOutRoute. */
            interface ISwapAmountOutRoute {

                /** SwapAmountOutRoute pool_id */
                pool_id?: (Long|null);

                /** SwapAmountOutRoute token_in_denom */
                token_in_denom?: (string|null);
            }

            /** Represents a SwapAmountOutRoute. */
            class SwapAmountOutRoute implements ISwapAmountOutRoute {

                /**
                 * Constructs a new SwapAmountOutRoute.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.ISwapAmountOutRoute);

                /** SwapAmountOutRoute pool_id. */
                public pool_id: Long;

                /** SwapAmountOutRoute token_in_denom. */
                public token_in_denom: string;

                /**
                 * Encodes the specified SwapAmountOutRoute message. Does not implicitly {@link osmosis.gamm.v1beta1.SwapAmountOutRoute.verify|verify} messages.
                 * @param message SwapAmountOutRoute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.ISwapAmountOutRoute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SwapAmountOutRoute message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.SwapAmountOutRoute.verify|verify} messages.
                 * @param message SwapAmountOutRoute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.ISwapAmountOutRoute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SwapAmountOutRoute message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SwapAmountOutRoute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.SwapAmountOutRoute;

                /**
                 * Decodes a SwapAmountOutRoute message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SwapAmountOutRoute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.SwapAmountOutRoute;

                /**
                 * Verifies a SwapAmountOutRoute message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SwapAmountOutRoute message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SwapAmountOutRoute
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.SwapAmountOutRoute;

                /**
                 * Creates a plain object from a SwapAmountOutRoute message. Also converts values to other types if specified.
                 * @param message SwapAmountOutRoute
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.SwapAmountOutRoute, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SwapAmountOutRoute to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSwapExactAmountOut. */
            interface IMsgSwapExactAmountOut {

                /** MsgSwapExactAmountOut sender */
                sender?: (string|null);

                /** MsgSwapExactAmountOut routes */
                routes?: (osmosis.gamm.v1beta1.ISwapAmountOutRoute[]|null);

                /** MsgSwapExactAmountOut token_in_max_amount */
                token_in_max_amount?: (string|null);

                /** MsgSwapExactAmountOut token_out */
                token_out?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgSwapExactAmountOut. */
            class MsgSwapExactAmountOut implements IMsgSwapExactAmountOut {

                /**
                 * Constructs a new MsgSwapExactAmountOut.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgSwapExactAmountOut);

                /** MsgSwapExactAmountOut sender. */
                public sender: string;

                /** MsgSwapExactAmountOut routes. */
                public routes: osmosis.gamm.v1beta1.ISwapAmountOutRoute[];

                /** MsgSwapExactAmountOut token_in_max_amount. */
                public token_in_max_amount: string;

                /** MsgSwapExactAmountOut token_out. */
                public token_out?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgSwapExactAmountOut message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountOut.verify|verify} messages.
                 * @param message MsgSwapExactAmountOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSwapExactAmountOut message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountOut.verify|verify} messages.
                 * @param message MsgSwapExactAmountOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSwapExactAmountOut message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSwapExactAmountOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgSwapExactAmountOut;

                /**
                 * Decodes a MsgSwapExactAmountOut message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSwapExactAmountOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgSwapExactAmountOut;

                /**
                 * Verifies a MsgSwapExactAmountOut message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSwapExactAmountOut message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSwapExactAmountOut
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgSwapExactAmountOut;

                /**
                 * Creates a plain object from a MsgSwapExactAmountOut message. Also converts values to other types if specified.
                 * @param message MsgSwapExactAmountOut
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgSwapExactAmountOut, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSwapExactAmountOut to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSwapExactAmountOutResponse. */
            interface IMsgSwapExactAmountOutResponse {

                /** MsgSwapExactAmountOutResponse token_in_amount */
                token_in_amount?: (string|null);
            }

            /** Represents a MsgSwapExactAmountOutResponse. */
            class MsgSwapExactAmountOutResponse implements IMsgSwapExactAmountOutResponse {

                /**
                 * Constructs a new MsgSwapExactAmountOutResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgSwapExactAmountOutResponse);

                /** MsgSwapExactAmountOutResponse token_in_amount. */
                public token_in_amount: string;

                /**
                 * Encodes the specified MsgSwapExactAmountOutResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.verify|verify} messages.
                 * @param message MsgSwapExactAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSwapExactAmountOutResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.verify|verify} messages.
                 * @param message MsgSwapExactAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgSwapExactAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSwapExactAmountOutResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSwapExactAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse;

                /**
                 * Decodes a MsgSwapExactAmountOutResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSwapExactAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse;

                /**
                 * Verifies a MsgSwapExactAmountOutResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSwapExactAmountOutResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSwapExactAmountOutResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse;

                /**
                 * Creates a plain object from a MsgSwapExactAmountOutResponse message. Also converts values to other types if specified.
                 * @param message MsgSwapExactAmountOutResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSwapExactAmountOutResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgJoinSwapExternAmountIn. */
            interface IMsgJoinSwapExternAmountIn {

                /** MsgJoinSwapExternAmountIn sender */
                sender?: (string|null);

                /** MsgJoinSwapExternAmountIn pool_id */
                pool_id?: (Long|null);

                /** MsgJoinSwapExternAmountIn token_in */
                token_in?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgJoinSwapExternAmountIn share_out_min_amount */
                share_out_min_amount?: (string|null);
            }

            /** Represents a MsgJoinSwapExternAmountIn. */
            class MsgJoinSwapExternAmountIn implements IMsgJoinSwapExternAmountIn {

                /**
                 * Constructs a new MsgJoinSwapExternAmountIn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountIn);

                /** MsgJoinSwapExternAmountIn sender. */
                public sender: string;

                /** MsgJoinSwapExternAmountIn pool_id. */
                public pool_id: Long;

                /** MsgJoinSwapExternAmountIn token_in. */
                public token_in?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgJoinSwapExternAmountIn share_out_min_amount. */
                public share_out_min_amount: string;

                /**
                 * Encodes the specified MsgJoinSwapExternAmountIn message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.verify|verify} messages.
                 * @param message MsgJoinSwapExternAmountIn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountIn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgJoinSwapExternAmountIn message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.verify|verify} messages.
                 * @param message MsgJoinSwapExternAmountIn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountIn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgJoinSwapExternAmountIn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgJoinSwapExternAmountIn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn;

                /**
                 * Decodes a MsgJoinSwapExternAmountIn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgJoinSwapExternAmountIn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn;

                /**
                 * Verifies a MsgJoinSwapExternAmountIn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgJoinSwapExternAmountIn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgJoinSwapExternAmountIn
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn;

                /**
                 * Creates a plain object from a MsgJoinSwapExternAmountIn message. Also converts values to other types if specified.
                 * @param message MsgJoinSwapExternAmountIn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgJoinSwapExternAmountIn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgJoinSwapExternAmountInResponse. */
            interface IMsgJoinSwapExternAmountInResponse {

                /** MsgJoinSwapExternAmountInResponse share_out_amount */
                share_out_amount?: (string|null);
            }

            /** Represents a MsgJoinSwapExternAmountInResponse. */
            class MsgJoinSwapExternAmountInResponse implements IMsgJoinSwapExternAmountInResponse {

                /**
                 * Constructs a new MsgJoinSwapExternAmountInResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountInResponse);

                /** MsgJoinSwapExternAmountInResponse share_out_amount. */
                public share_out_amount: string;

                /**
                 * Encodes the specified MsgJoinSwapExternAmountInResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.verify|verify} messages.
                 * @param message MsgJoinSwapExternAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgJoinSwapExternAmountInResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.verify|verify} messages.
                 * @param message MsgJoinSwapExternAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgJoinSwapExternAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgJoinSwapExternAmountInResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgJoinSwapExternAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse;

                /**
                 * Decodes a MsgJoinSwapExternAmountInResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgJoinSwapExternAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse;

                /**
                 * Verifies a MsgJoinSwapExternAmountInResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgJoinSwapExternAmountInResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgJoinSwapExternAmountInResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse;

                /**
                 * Creates a plain object from a MsgJoinSwapExternAmountInResponse message. Also converts values to other types if specified.
                 * @param message MsgJoinSwapExternAmountInResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgJoinSwapExternAmountInResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgJoinSwapShareAmountOut. */
            interface IMsgJoinSwapShareAmountOut {

                /** MsgJoinSwapShareAmountOut sender */
                sender?: (string|null);

                /** MsgJoinSwapShareAmountOut pool_id */
                pool_id?: (Long|null);

                /** MsgJoinSwapShareAmountOut token_in_denom */
                token_in_denom?: (string|null);

                /** MsgJoinSwapShareAmountOut share_out_amount */
                share_out_amount?: (string|null);

                /** MsgJoinSwapShareAmountOut token_in_max_amount */
                token_in_max_amount?: (string|null);
            }

            /** Represents a MsgJoinSwapShareAmountOut. */
            class MsgJoinSwapShareAmountOut implements IMsgJoinSwapShareAmountOut {

                /**
                 * Constructs a new MsgJoinSwapShareAmountOut.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOut);

                /** MsgJoinSwapShareAmountOut sender. */
                public sender: string;

                /** MsgJoinSwapShareAmountOut pool_id. */
                public pool_id: Long;

                /** MsgJoinSwapShareAmountOut token_in_denom. */
                public token_in_denom: string;

                /** MsgJoinSwapShareAmountOut share_out_amount. */
                public share_out_amount: string;

                /** MsgJoinSwapShareAmountOut token_in_max_amount. */
                public token_in_max_amount: string;

                /**
                 * Encodes the specified MsgJoinSwapShareAmountOut message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.verify|verify} messages.
                 * @param message MsgJoinSwapShareAmountOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgJoinSwapShareAmountOut message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.verify|verify} messages.
                 * @param message MsgJoinSwapShareAmountOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgJoinSwapShareAmountOut message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgJoinSwapShareAmountOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut;

                /**
                 * Decodes a MsgJoinSwapShareAmountOut message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgJoinSwapShareAmountOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut;

                /**
                 * Verifies a MsgJoinSwapShareAmountOut message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgJoinSwapShareAmountOut message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgJoinSwapShareAmountOut
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut;

                /**
                 * Creates a plain object from a MsgJoinSwapShareAmountOut message. Also converts values to other types if specified.
                 * @param message MsgJoinSwapShareAmountOut
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgJoinSwapShareAmountOut to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgJoinSwapShareAmountOutResponse. */
            interface IMsgJoinSwapShareAmountOutResponse {

                /** MsgJoinSwapShareAmountOutResponse token_in_amount */
                token_in_amount?: (string|null);
            }

            /** Represents a MsgJoinSwapShareAmountOutResponse. */
            class MsgJoinSwapShareAmountOutResponse implements IMsgJoinSwapShareAmountOutResponse {

                /**
                 * Constructs a new MsgJoinSwapShareAmountOutResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOutResponse);

                /** MsgJoinSwapShareAmountOutResponse token_in_amount. */
                public token_in_amount: string;

                /**
                 * Encodes the specified MsgJoinSwapShareAmountOutResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.verify|verify} messages.
                 * @param message MsgJoinSwapShareAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgJoinSwapShareAmountOutResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.verify|verify} messages.
                 * @param message MsgJoinSwapShareAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgJoinSwapShareAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgJoinSwapShareAmountOutResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgJoinSwapShareAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse;

                /**
                 * Decodes a MsgJoinSwapShareAmountOutResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgJoinSwapShareAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse;

                /**
                 * Verifies a MsgJoinSwapShareAmountOutResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgJoinSwapShareAmountOutResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgJoinSwapShareAmountOutResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse;

                /**
                 * Creates a plain object from a MsgJoinSwapShareAmountOutResponse message. Also converts values to other types if specified.
                 * @param message MsgJoinSwapShareAmountOutResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgJoinSwapShareAmountOutResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExitSwapShareAmountIn. */
            interface IMsgExitSwapShareAmountIn {

                /** MsgExitSwapShareAmountIn sender */
                sender?: (string|null);

                /** MsgExitSwapShareAmountIn pool_id */
                pool_id?: (Long|null);

                /** MsgExitSwapShareAmountIn token_out_denom */
                token_out_denom?: (string|null);

                /** MsgExitSwapShareAmountIn share_in_amount */
                share_in_amount?: (string|null);

                /** MsgExitSwapShareAmountIn token_out_min_amount */
                token_out_min_amount?: (string|null);
            }

            /** Represents a MsgExitSwapShareAmountIn. */
            class MsgExitSwapShareAmountIn implements IMsgExitSwapShareAmountIn {

                /**
                 * Constructs a new MsgExitSwapShareAmountIn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountIn);

                /** MsgExitSwapShareAmountIn sender. */
                public sender: string;

                /** MsgExitSwapShareAmountIn pool_id. */
                public pool_id: Long;

                /** MsgExitSwapShareAmountIn token_out_denom. */
                public token_out_denom: string;

                /** MsgExitSwapShareAmountIn share_in_amount. */
                public share_in_amount: string;

                /** MsgExitSwapShareAmountIn token_out_min_amount. */
                public token_out_min_amount: string;

                /**
                 * Encodes the specified MsgExitSwapShareAmountIn message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.verify|verify} messages.
                 * @param message MsgExitSwapShareAmountIn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountIn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExitSwapShareAmountIn message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.verify|verify} messages.
                 * @param message MsgExitSwapShareAmountIn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountIn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExitSwapShareAmountIn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExitSwapShareAmountIn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn;

                /**
                 * Decodes a MsgExitSwapShareAmountIn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExitSwapShareAmountIn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn;

                /**
                 * Verifies a MsgExitSwapShareAmountIn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExitSwapShareAmountIn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExitSwapShareAmountIn
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn;

                /**
                 * Creates a plain object from a MsgExitSwapShareAmountIn message. Also converts values to other types if specified.
                 * @param message MsgExitSwapShareAmountIn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExitSwapShareAmountIn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExitSwapShareAmountInResponse. */
            interface IMsgExitSwapShareAmountInResponse {

                /** MsgExitSwapShareAmountInResponse token_out_amount */
                token_out_amount?: (string|null);
            }

            /** Represents a MsgExitSwapShareAmountInResponse. */
            class MsgExitSwapShareAmountInResponse implements IMsgExitSwapShareAmountInResponse {

                /**
                 * Constructs a new MsgExitSwapShareAmountInResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountInResponse);

                /** MsgExitSwapShareAmountInResponse token_out_amount. */
                public token_out_amount: string;

                /**
                 * Encodes the specified MsgExitSwapShareAmountInResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.verify|verify} messages.
                 * @param message MsgExitSwapShareAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExitSwapShareAmountInResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.verify|verify} messages.
                 * @param message MsgExitSwapShareAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgExitSwapShareAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExitSwapShareAmountInResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExitSwapShareAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse;

                /**
                 * Decodes a MsgExitSwapShareAmountInResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExitSwapShareAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse;

                /**
                 * Verifies a MsgExitSwapShareAmountInResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExitSwapShareAmountInResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExitSwapShareAmountInResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse;

                /**
                 * Creates a plain object from a MsgExitSwapShareAmountInResponse message. Also converts values to other types if specified.
                 * @param message MsgExitSwapShareAmountInResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExitSwapShareAmountInResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExitSwapExternAmountOut. */
            interface IMsgExitSwapExternAmountOut {

                /** MsgExitSwapExternAmountOut sender */
                sender?: (string|null);

                /** MsgExitSwapExternAmountOut pool_id */
                pool_id?: (Long|null);

                /** MsgExitSwapExternAmountOut token_out */
                token_out?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgExitSwapExternAmountOut share_in_max_amount */
                share_in_max_amount?: (string|null);
            }

            /** Represents a MsgExitSwapExternAmountOut. */
            class MsgExitSwapExternAmountOut implements IMsgExitSwapExternAmountOut {

                /**
                 * Constructs a new MsgExitSwapExternAmountOut.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOut);

                /** MsgExitSwapExternAmountOut sender. */
                public sender: string;

                /** MsgExitSwapExternAmountOut pool_id. */
                public pool_id: Long;

                /** MsgExitSwapExternAmountOut token_out. */
                public token_out?: (cosmos.base.v1beta1.ICoin|null);

                /** MsgExitSwapExternAmountOut share_in_max_amount. */
                public share_in_max_amount: string;

                /**
                 * Encodes the specified MsgExitSwapExternAmountOut message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.verify|verify} messages.
                 * @param message MsgExitSwapExternAmountOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExitSwapExternAmountOut message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.verify|verify} messages.
                 * @param message MsgExitSwapExternAmountOut message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOut, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExitSwapExternAmountOut message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExitSwapExternAmountOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut;

                /**
                 * Decodes a MsgExitSwapExternAmountOut message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExitSwapExternAmountOut
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut;

                /**
                 * Verifies a MsgExitSwapExternAmountOut message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExitSwapExternAmountOut message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExitSwapExternAmountOut
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut;

                /**
                 * Creates a plain object from a MsgExitSwapExternAmountOut message. Also converts values to other types if specified.
                 * @param message MsgExitSwapExternAmountOut
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExitSwapExternAmountOut to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgExitSwapExternAmountOutResponse. */
            interface IMsgExitSwapExternAmountOutResponse {

                /** MsgExitSwapExternAmountOutResponse share_in_amount */
                share_in_amount?: (string|null);
            }

            /** Represents a MsgExitSwapExternAmountOutResponse. */
            class MsgExitSwapExternAmountOutResponse implements IMsgExitSwapExternAmountOutResponse {

                /**
                 * Constructs a new MsgExitSwapExternAmountOutResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOutResponse);

                /** MsgExitSwapExternAmountOutResponse share_in_amount. */
                public share_in_amount: string;

                /**
                 * Encodes the specified MsgExitSwapExternAmountOutResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.verify|verify} messages.
                 * @param message MsgExitSwapExternAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgExitSwapExternAmountOutResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.verify|verify} messages.
                 * @param message MsgExitSwapExternAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IMsgExitSwapExternAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgExitSwapExternAmountOutResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgExitSwapExternAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse;

                /**
                 * Decodes a MsgExitSwapExternAmountOutResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgExitSwapExternAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse;

                /**
                 * Verifies a MsgExitSwapExternAmountOutResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgExitSwapExternAmountOutResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgExitSwapExternAmountOutResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse;

                /**
                 * Creates a plain object from a MsgExitSwapExternAmountOutResponse message. Also converts values to other types if specified.
                 * @param message MsgExitSwapExternAmountOutResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgExitSwapExternAmountOutResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Pools.
                 * @param request QueryPoolsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPoolsResponse
                 */
                public pools(request: osmosis.gamm.v1beta1.IQueryPoolsRequest, callback: osmosis.gamm.v1beta1.Query.PoolsCallback): void;

                /**
                 * Calls Pools.
                 * @param request QueryPoolsRequest message or plain object
                 * @returns Promise
                 */
                public pools(request: osmosis.gamm.v1beta1.IQueryPoolsRequest): Promise<osmosis.gamm.v1beta1.QueryPoolsResponse>;

                /**
                 * Calls NumPools.
                 * @param request QueryNumPoolsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryNumPoolsResponse
                 */
                public numPools(request: osmosis.gamm.v1beta1.IQueryNumPoolsRequest, callback: osmosis.gamm.v1beta1.Query.NumPoolsCallback): void;

                /**
                 * Calls NumPools.
                 * @param request QueryNumPoolsRequest message or plain object
                 * @returns Promise
                 */
                public numPools(request: osmosis.gamm.v1beta1.IQueryNumPoolsRequest): Promise<osmosis.gamm.v1beta1.QueryNumPoolsResponse>;

                /**
                 * Calls TotalLiquidity.
                 * @param request QueryTotalLiquidityRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTotalLiquidityResponse
                 */
                public totalLiquidity(request: osmosis.gamm.v1beta1.IQueryTotalLiquidityRequest, callback: osmosis.gamm.v1beta1.Query.TotalLiquidityCallback): void;

                /**
                 * Calls TotalLiquidity.
                 * @param request QueryTotalLiquidityRequest message or plain object
                 * @returns Promise
                 */
                public totalLiquidity(request: osmosis.gamm.v1beta1.IQueryTotalLiquidityRequest): Promise<osmosis.gamm.v1beta1.QueryTotalLiquidityResponse>;

                /**
                 * Calls PoolsWithFilter.
                 * @param request QueryPoolsWithFilterRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPoolsWithFilterResponse
                 */
                public poolsWithFilter(request: osmosis.gamm.v1beta1.IQueryPoolsWithFilterRequest, callback: osmosis.gamm.v1beta1.Query.PoolsWithFilterCallback): void;

                /**
                 * Calls PoolsWithFilter.
                 * @param request QueryPoolsWithFilterRequest message or plain object
                 * @returns Promise
                 */
                public poolsWithFilter(request: osmosis.gamm.v1beta1.IQueryPoolsWithFilterRequest): Promise<osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse>;

                /**
                 * Calls Pool.
                 * @param request QueryPoolRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPoolResponse
                 */
                public pool(request: osmosis.gamm.v1beta1.IQueryPoolRequest, callback: osmosis.gamm.v1beta1.Query.PoolCallback): void;

                /**
                 * Calls Pool.
                 * @param request QueryPoolRequest message or plain object
                 * @returns Promise
                 */
                public pool(request: osmosis.gamm.v1beta1.IQueryPoolRequest): Promise<osmosis.gamm.v1beta1.QueryPoolResponse>;

                /**
                 * Calls PoolType.
                 * @param request QueryPoolTypeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPoolTypeResponse
                 */
                public poolType(request: osmosis.gamm.v1beta1.IQueryPoolTypeRequest, callback: osmosis.gamm.v1beta1.Query.PoolTypeCallback): void;

                /**
                 * Calls PoolType.
                 * @param request QueryPoolTypeRequest message or plain object
                 * @returns Promise
                 */
                public poolType(request: osmosis.gamm.v1beta1.IQueryPoolTypeRequest): Promise<osmosis.gamm.v1beta1.QueryPoolTypeResponse>;

                /**
                 * Calls CalcJoinPoolNoSwapShares.
                 * @param request QueryCalcJoinPoolNoSwapSharesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCalcJoinPoolNoSwapSharesResponse
                 */
                public calcJoinPoolNoSwapShares(request: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesRequest, callback: osmosis.gamm.v1beta1.Query.CalcJoinPoolNoSwapSharesCallback): void;

                /**
                 * Calls CalcJoinPoolNoSwapShares.
                 * @param request QueryCalcJoinPoolNoSwapSharesRequest message or plain object
                 * @returns Promise
                 */
                public calcJoinPoolNoSwapShares(request: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesRequest): Promise<osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse>;

                /**
                 * Calls CalcJoinPoolShares.
                 * @param request QueryCalcJoinPoolSharesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCalcJoinPoolSharesResponse
                 */
                public calcJoinPoolShares(request: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesRequest, callback: osmosis.gamm.v1beta1.Query.CalcJoinPoolSharesCallback): void;

                /**
                 * Calls CalcJoinPoolShares.
                 * @param request QueryCalcJoinPoolSharesRequest message or plain object
                 * @returns Promise
                 */
                public calcJoinPoolShares(request: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesRequest): Promise<osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse>;

                /**
                 * Calls CalcExitPoolCoinsFromShares.
                 * @param request QueryCalcExitPoolCoinsFromSharesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryCalcExitPoolCoinsFromSharesResponse
                 */
                public calcExitPoolCoinsFromShares(request: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesRequest, callback: osmosis.gamm.v1beta1.Query.CalcExitPoolCoinsFromSharesCallback): void;

                /**
                 * Calls CalcExitPoolCoinsFromShares.
                 * @param request QueryCalcExitPoolCoinsFromSharesRequest message or plain object
                 * @returns Promise
                 */
                public calcExitPoolCoinsFromShares(request: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesRequest): Promise<osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse>;

                /**
                 * Calls PoolParams.
                 * @param request QueryPoolParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryPoolParamsResponse
                 */
                public poolParams(request: osmosis.gamm.v1beta1.IQueryPoolParamsRequest, callback: osmosis.gamm.v1beta1.Query.PoolParamsCallback): void;

                /**
                 * Calls PoolParams.
                 * @param request QueryPoolParamsRequest message or plain object
                 * @returns Promise
                 */
                public poolParams(request: osmosis.gamm.v1beta1.IQueryPoolParamsRequest): Promise<osmosis.gamm.v1beta1.QueryPoolParamsResponse>;

                /**
                 * Calls TotalPoolLiquidity.
                 * @param request QueryTotalPoolLiquidityRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTotalPoolLiquidityResponse
                 */
                public totalPoolLiquidity(request: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityRequest, callback: osmosis.gamm.v1beta1.Query.TotalPoolLiquidityCallback): void;

                /**
                 * Calls TotalPoolLiquidity.
                 * @param request QueryTotalPoolLiquidityRequest message or plain object
                 * @returns Promise
                 */
                public totalPoolLiquidity(request: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityRequest): Promise<osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse>;

                /**
                 * Calls TotalShares.
                 * @param request QueryTotalSharesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryTotalSharesResponse
                 */
                public totalShares(request: osmosis.gamm.v1beta1.IQueryTotalSharesRequest, callback: osmosis.gamm.v1beta1.Query.TotalSharesCallback): void;

                /**
                 * Calls TotalShares.
                 * @param request QueryTotalSharesRequest message or plain object
                 * @returns Promise
                 */
                public totalShares(request: osmosis.gamm.v1beta1.IQueryTotalSharesRequest): Promise<osmosis.gamm.v1beta1.QueryTotalSharesResponse>;

                /**
                 * Calls SpotPrice.
                 * @param request QuerySpotPriceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySpotPriceResponse
                 */
                public spotPrice(request: osmosis.gamm.v1beta1.IQuerySpotPriceRequest, callback: osmosis.gamm.v1beta1.Query.SpotPriceCallback): void;

                /**
                 * Calls SpotPrice.
                 * @param request QuerySpotPriceRequest message or plain object
                 * @returns Promise
                 */
                public spotPrice(request: osmosis.gamm.v1beta1.IQuerySpotPriceRequest): Promise<osmosis.gamm.v1beta1.QuerySpotPriceResponse>;

                /**
                 * Calls EstimateSwapExactAmountIn.
                 * @param request QuerySwapExactAmountInRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySwapExactAmountInResponse
                 */
                public estimateSwapExactAmountIn(request: osmosis.gamm.v1beta1.IQuerySwapExactAmountInRequest, callback: osmosis.gamm.v1beta1.Query.EstimateSwapExactAmountInCallback): void;

                /**
                 * Calls EstimateSwapExactAmountIn.
                 * @param request QuerySwapExactAmountInRequest message or plain object
                 * @returns Promise
                 */
                public estimateSwapExactAmountIn(request: osmosis.gamm.v1beta1.IQuerySwapExactAmountInRequest): Promise<osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse>;

                /**
                 * Calls EstimateSwapExactAmountOut.
                 * @param request QuerySwapExactAmountOutRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySwapExactAmountOutResponse
                 */
                public estimateSwapExactAmountOut(request: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutRequest, callback: osmosis.gamm.v1beta1.Query.EstimateSwapExactAmountOutCallback): void;

                /**
                 * Calls EstimateSwapExactAmountOut.
                 * @param request QuerySwapExactAmountOutRequest message or plain object
                 * @returns Promise
                 */
                public estimateSwapExactAmountOut(request: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutRequest): Promise<osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#pools}.
                 * @param error Error, if any
                 * @param [response] QueryPoolsResponse
                 */
                type PoolsCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryPoolsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#numPools}.
                 * @param error Error, if any
                 * @param [response] QueryNumPoolsResponse
                 */
                type NumPoolsCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryNumPoolsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#totalLiquidity}.
                 * @param error Error, if any
                 * @param [response] QueryTotalLiquidityResponse
                 */
                type TotalLiquidityCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryTotalLiquidityResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#poolsWithFilter}.
                 * @param error Error, if any
                 * @param [response] QueryPoolsWithFilterResponse
                 */
                type PoolsWithFilterCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#pool}.
                 * @param error Error, if any
                 * @param [response] QueryPoolResponse
                 */
                type PoolCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryPoolResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#poolType}.
                 * @param error Error, if any
                 * @param [response] QueryPoolTypeResponse
                 */
                type PoolTypeCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryPoolTypeResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#calcJoinPoolNoSwapShares}.
                 * @param error Error, if any
                 * @param [response] QueryCalcJoinPoolNoSwapSharesResponse
                 */
                type CalcJoinPoolNoSwapSharesCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#calcJoinPoolShares}.
                 * @param error Error, if any
                 * @param [response] QueryCalcJoinPoolSharesResponse
                 */
                type CalcJoinPoolSharesCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#calcExitPoolCoinsFromShares}.
                 * @param error Error, if any
                 * @param [response] QueryCalcExitPoolCoinsFromSharesResponse
                 */
                type CalcExitPoolCoinsFromSharesCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#poolParams}.
                 * @param error Error, if any
                 * @param [response] QueryPoolParamsResponse
                 */
                type PoolParamsCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryPoolParamsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#totalPoolLiquidity}.
                 * @param error Error, if any
                 * @param [response] QueryTotalPoolLiquidityResponse
                 */
                type TotalPoolLiquidityCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#totalShares}.
                 * @param error Error, if any
                 * @param [response] QueryTotalSharesResponse
                 */
                type TotalSharesCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QueryTotalSharesResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#spotPrice}.
                 * @param error Error, if any
                 * @param [response] QuerySpotPriceResponse
                 */
                type SpotPriceCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QuerySpotPriceResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#estimateSwapExactAmountIn}.
                 * @param error Error, if any
                 * @param [response] QuerySwapExactAmountInResponse
                 */
                type EstimateSwapExactAmountInCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse) => void;

                /**
                 * Callback as used by {@link osmosis.gamm.v1beta1.Query#estimateSwapExactAmountOut}.
                 * @param error Error, if any
                 * @param [response] QuerySwapExactAmountOutResponse
                 */
                type EstimateSwapExactAmountOutCallback = (error: (Error|null), response?: osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse) => void;
            }

            /** Properties of a QueryPoolRequest. */
            interface IQueryPoolRequest {

                /** QueryPoolRequest pool_id */
                pool_id?: (Long|null);
            }

            /** Represents a QueryPoolRequest. */
            class QueryPoolRequest implements IQueryPoolRequest {

                /**
                 * Constructs a new QueryPoolRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolRequest);

                /** QueryPoolRequest pool_id. */
                public pool_id: Long;

                /**
                 * Encodes the specified QueryPoolRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolRequest.verify|verify} messages.
                 * @param message QueryPoolRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolRequest.verify|verify} messages.
                 * @param message QueryPoolRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolRequest;

                /**
                 * Decodes a QueryPoolRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolRequest;

                /**
                 * Verifies a QueryPoolRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolRequest;

                /**
                 * Creates a plain object from a QueryPoolRequest message. Also converts values to other types if specified.
                 * @param message QueryPoolRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolResponse. */
            interface IQueryPoolResponse {

                /** QueryPoolResponse pool */
                pool?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryPoolResponse. */
            class QueryPoolResponse implements IQueryPoolResponse {

                /**
                 * Constructs a new QueryPoolResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolResponse);

                /** QueryPoolResponse pool. */
                public pool?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryPoolResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolResponse.verify|verify} messages.
                 * @param message QueryPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolResponse.verify|verify} messages.
                 * @param message QueryPoolResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolResponse;

                /**
                 * Decodes a QueryPoolResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolResponse;

                /**
                 * Verifies a QueryPoolResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolResponse;

                /**
                 * Creates a plain object from a QueryPoolResponse message. Also converts values to other types if specified.
                 * @param message QueryPoolResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolsRequest. */
            interface IQueryPoolsRequest {

                /** QueryPoolsRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryPoolsRequest. */
            class QueryPoolsRequest implements IQueryPoolsRequest {

                /**
                 * Constructs a new QueryPoolsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolsRequest);

                /** QueryPoolsRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryPoolsRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsRequest.verify|verify} messages.
                 * @param message QueryPoolsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolsRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsRequest.verify|verify} messages.
                 * @param message QueryPoolsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolsRequest;

                /**
                 * Decodes a QueryPoolsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolsRequest;

                /**
                 * Verifies a QueryPoolsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolsRequest;

                /**
                 * Creates a plain object from a QueryPoolsRequest message. Also converts values to other types if specified.
                 * @param message QueryPoolsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolsResponse. */
            interface IQueryPoolsResponse {

                /** QueryPoolsResponse pools */
                pools?: (google.protobuf.IAny[]|null);

                /** QueryPoolsResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryPoolsResponse. */
            class QueryPoolsResponse implements IQueryPoolsResponse {

                /**
                 * Constructs a new QueryPoolsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolsResponse);

                /** QueryPoolsResponse pools. */
                public pools: google.protobuf.IAny[];

                /** QueryPoolsResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryPoolsResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsResponse.verify|verify} messages.
                 * @param message QueryPoolsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolsResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsResponse.verify|verify} messages.
                 * @param message QueryPoolsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolsResponse;

                /**
                 * Decodes a QueryPoolsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolsResponse;

                /**
                 * Verifies a QueryPoolsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolsResponse;

                /**
                 * Creates a plain object from a QueryPoolsResponse message. Also converts values to other types if specified.
                 * @param message QueryPoolsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryNumPoolsRequest. */
            interface IQueryNumPoolsRequest {
            }

            /** Represents a QueryNumPoolsRequest. */
            class QueryNumPoolsRequest implements IQueryNumPoolsRequest {

                /**
                 * Constructs a new QueryNumPoolsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryNumPoolsRequest);

                /**
                 * Encodes the specified QueryNumPoolsRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryNumPoolsRequest.verify|verify} messages.
                 * @param message QueryNumPoolsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryNumPoolsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryNumPoolsRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryNumPoolsRequest.verify|verify} messages.
                 * @param message QueryNumPoolsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryNumPoolsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryNumPoolsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryNumPoolsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryNumPoolsRequest;

                /**
                 * Decodes a QueryNumPoolsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryNumPoolsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryNumPoolsRequest;

                /**
                 * Verifies a QueryNumPoolsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryNumPoolsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryNumPoolsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryNumPoolsRequest;

                /**
                 * Creates a plain object from a QueryNumPoolsRequest message. Also converts values to other types if specified.
                 * @param message QueryNumPoolsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryNumPoolsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryNumPoolsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryNumPoolsResponse. */
            interface IQueryNumPoolsResponse {

                /** QueryNumPoolsResponse num_pools */
                num_pools?: (Long|null);
            }

            /** Represents a QueryNumPoolsResponse. */
            class QueryNumPoolsResponse implements IQueryNumPoolsResponse {

                /**
                 * Constructs a new QueryNumPoolsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryNumPoolsResponse);

                /** QueryNumPoolsResponse num_pools. */
                public num_pools: Long;

                /**
                 * Encodes the specified QueryNumPoolsResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryNumPoolsResponse.verify|verify} messages.
                 * @param message QueryNumPoolsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryNumPoolsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryNumPoolsResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryNumPoolsResponse.verify|verify} messages.
                 * @param message QueryNumPoolsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryNumPoolsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryNumPoolsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryNumPoolsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryNumPoolsResponse;

                /**
                 * Decodes a QueryNumPoolsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryNumPoolsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryNumPoolsResponse;

                /**
                 * Verifies a QueryNumPoolsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryNumPoolsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryNumPoolsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryNumPoolsResponse;

                /**
                 * Creates a plain object from a QueryNumPoolsResponse message. Also converts values to other types if specified.
                 * @param message QueryNumPoolsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryNumPoolsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryNumPoolsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolTypeRequest. */
            interface IQueryPoolTypeRequest {

                /** QueryPoolTypeRequest pool_id */
                pool_id?: (Long|null);
            }

            /** Represents a QueryPoolTypeRequest. */
            class QueryPoolTypeRequest implements IQueryPoolTypeRequest {

                /**
                 * Constructs a new QueryPoolTypeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolTypeRequest);

                /** QueryPoolTypeRequest pool_id. */
                public pool_id: Long;

                /**
                 * Encodes the specified QueryPoolTypeRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolTypeRequest.verify|verify} messages.
                 * @param message QueryPoolTypeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolTypeRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolTypeRequest.verify|verify} messages.
                 * @param message QueryPoolTypeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolTypeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolTypeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolTypeRequest;

                /**
                 * Decodes a QueryPoolTypeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolTypeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolTypeRequest;

                /**
                 * Verifies a QueryPoolTypeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolTypeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolTypeRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolTypeRequest;

                /**
                 * Creates a plain object from a QueryPoolTypeRequest message. Also converts values to other types if specified.
                 * @param message QueryPoolTypeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolTypeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolTypeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolTypeResponse. */
            interface IQueryPoolTypeResponse {

                /** QueryPoolTypeResponse pool_type */
                pool_type?: (string|null);
            }

            /** Represents a QueryPoolTypeResponse. */
            class QueryPoolTypeResponse implements IQueryPoolTypeResponse {

                /**
                 * Constructs a new QueryPoolTypeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolTypeResponse);

                /** QueryPoolTypeResponse pool_type. */
                public pool_type: string;

                /**
                 * Encodes the specified QueryPoolTypeResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolTypeResponse.verify|verify} messages.
                 * @param message QueryPoolTypeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolTypeResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolTypeResponse.verify|verify} messages.
                 * @param message QueryPoolTypeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolTypeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolTypeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolTypeResponse;

                /**
                 * Decodes a QueryPoolTypeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolTypeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolTypeResponse;

                /**
                 * Verifies a QueryPoolTypeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolTypeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolTypeResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolTypeResponse;

                /**
                 * Creates a plain object from a QueryPoolTypeResponse message. Also converts values to other types if specified.
                 * @param message QueryPoolTypeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolTypeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolTypeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCalcJoinPoolSharesRequest. */
            interface IQueryCalcJoinPoolSharesRequest {

                /** QueryCalcJoinPoolSharesRequest pool_id */
                pool_id?: (Long|null);

                /** QueryCalcJoinPoolSharesRequest tokens_in */
                tokens_in?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryCalcJoinPoolSharesRequest. */
            class QueryCalcJoinPoolSharesRequest implements IQueryCalcJoinPoolSharesRequest {

                /**
                 * Constructs a new QueryCalcJoinPoolSharesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesRequest);

                /** QueryCalcJoinPoolSharesRequest pool_id. */
                public pool_id: Long;

                /** QueryCalcJoinPoolSharesRequest tokens_in. */
                public tokens_in: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryCalcJoinPoolSharesRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest.verify|verify} messages.
                 * @param message QueryCalcJoinPoolSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCalcJoinPoolSharesRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest.verify|verify} messages.
                 * @param message QueryCalcJoinPoolSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCalcJoinPoolSharesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCalcJoinPoolSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest;

                /**
                 * Decodes a QueryCalcJoinPoolSharesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCalcJoinPoolSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest;

                /**
                 * Verifies a QueryCalcJoinPoolSharesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCalcJoinPoolSharesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCalcJoinPoolSharesRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest;

                /**
                 * Creates a plain object from a QueryCalcJoinPoolSharesRequest message. Also converts values to other types if specified.
                 * @param message QueryCalcJoinPoolSharesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCalcJoinPoolSharesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCalcJoinPoolSharesResponse. */
            interface IQueryCalcJoinPoolSharesResponse {

                /** QueryCalcJoinPoolSharesResponse share_out_amount */
                share_out_amount?: (string|null);

                /** QueryCalcJoinPoolSharesResponse tokens_out */
                tokens_out?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryCalcJoinPoolSharesResponse. */
            class QueryCalcJoinPoolSharesResponse implements IQueryCalcJoinPoolSharesResponse {

                /**
                 * Constructs a new QueryCalcJoinPoolSharesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesResponse);

                /** QueryCalcJoinPoolSharesResponse share_out_amount. */
                public share_out_amount: string;

                /** QueryCalcJoinPoolSharesResponse tokens_out. */
                public tokens_out: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryCalcJoinPoolSharesResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse.verify|verify} messages.
                 * @param message QueryCalcJoinPoolSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCalcJoinPoolSharesResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse.verify|verify} messages.
                 * @param message QueryCalcJoinPoolSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCalcJoinPoolSharesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCalcJoinPoolSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse;

                /**
                 * Decodes a QueryCalcJoinPoolSharesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCalcJoinPoolSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse;

                /**
                 * Verifies a QueryCalcJoinPoolSharesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCalcJoinPoolSharesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCalcJoinPoolSharesResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse;

                /**
                 * Creates a plain object from a QueryCalcJoinPoolSharesResponse message. Also converts values to other types if specified.
                 * @param message QueryCalcJoinPoolSharesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCalcJoinPoolSharesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCalcExitPoolCoinsFromSharesRequest. */
            interface IQueryCalcExitPoolCoinsFromSharesRequest {

                /** QueryCalcExitPoolCoinsFromSharesRequest pool_id */
                pool_id?: (Long|null);

                /** QueryCalcExitPoolCoinsFromSharesRequest share_in_amount */
                share_in_amount?: (string|null);
            }

            /** Represents a QueryCalcExitPoolCoinsFromSharesRequest. */
            class QueryCalcExitPoolCoinsFromSharesRequest implements IQueryCalcExitPoolCoinsFromSharesRequest {

                /**
                 * Constructs a new QueryCalcExitPoolCoinsFromSharesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesRequest);

                /** QueryCalcExitPoolCoinsFromSharesRequest pool_id. */
                public pool_id: Long;

                /** QueryCalcExitPoolCoinsFromSharesRequest share_in_amount. */
                public share_in_amount: string;

                /**
                 * Encodes the specified QueryCalcExitPoolCoinsFromSharesRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest.verify|verify} messages.
                 * @param message QueryCalcExitPoolCoinsFromSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCalcExitPoolCoinsFromSharesRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest.verify|verify} messages.
                 * @param message QueryCalcExitPoolCoinsFromSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCalcExitPoolCoinsFromSharesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCalcExitPoolCoinsFromSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest;

                /**
                 * Decodes a QueryCalcExitPoolCoinsFromSharesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCalcExitPoolCoinsFromSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest;

                /**
                 * Verifies a QueryCalcExitPoolCoinsFromSharesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCalcExitPoolCoinsFromSharesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCalcExitPoolCoinsFromSharesRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest;

                /**
                 * Creates a plain object from a QueryCalcExitPoolCoinsFromSharesRequest message. Also converts values to other types if specified.
                 * @param message QueryCalcExitPoolCoinsFromSharesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCalcExitPoolCoinsFromSharesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCalcExitPoolCoinsFromSharesResponse. */
            interface IQueryCalcExitPoolCoinsFromSharesResponse {

                /** QueryCalcExitPoolCoinsFromSharesResponse tokens_out */
                tokens_out?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryCalcExitPoolCoinsFromSharesResponse. */
            class QueryCalcExitPoolCoinsFromSharesResponse implements IQueryCalcExitPoolCoinsFromSharesResponse {

                /**
                 * Constructs a new QueryCalcExitPoolCoinsFromSharesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesResponse);

                /** QueryCalcExitPoolCoinsFromSharesResponse tokens_out. */
                public tokens_out: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryCalcExitPoolCoinsFromSharesResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse.verify|verify} messages.
                 * @param message QueryCalcExitPoolCoinsFromSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCalcExitPoolCoinsFromSharesResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse.verify|verify} messages.
                 * @param message QueryCalcExitPoolCoinsFromSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryCalcExitPoolCoinsFromSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCalcExitPoolCoinsFromSharesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCalcExitPoolCoinsFromSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse;

                /**
                 * Decodes a QueryCalcExitPoolCoinsFromSharesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCalcExitPoolCoinsFromSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse;

                /**
                 * Verifies a QueryCalcExitPoolCoinsFromSharesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCalcExitPoolCoinsFromSharesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCalcExitPoolCoinsFromSharesResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse;

                /**
                 * Creates a plain object from a QueryCalcExitPoolCoinsFromSharesResponse message. Also converts values to other types if specified.
                 * @param message QueryCalcExitPoolCoinsFromSharesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCalcExitPoolCoinsFromSharesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolParamsRequest. */
            interface IQueryPoolParamsRequest {

                /** QueryPoolParamsRequest pool_id */
                pool_id?: (Long|null);
            }

            /** Represents a QueryPoolParamsRequest. */
            class QueryPoolParamsRequest implements IQueryPoolParamsRequest {

                /**
                 * Constructs a new QueryPoolParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolParamsRequest);

                /** QueryPoolParamsRequest pool_id. */
                public pool_id: Long;

                /**
                 * Encodes the specified QueryPoolParamsRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolParamsRequest.verify|verify} messages.
                 * @param message QueryPoolParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolParamsRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolParamsRequest.verify|verify} messages.
                 * @param message QueryPoolParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolParamsRequest;

                /**
                 * Decodes a QueryPoolParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolParamsRequest;

                /**
                 * Verifies a QueryPoolParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolParamsRequest;

                /**
                 * Creates a plain object from a QueryPoolParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryPoolParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolParamsResponse. */
            interface IQueryPoolParamsResponse {

                /** QueryPoolParamsResponse params */
                params?: (google.protobuf.IAny|null);
            }

            /** Represents a QueryPoolParamsResponse. */
            class QueryPoolParamsResponse implements IQueryPoolParamsResponse {

                /**
                 * Constructs a new QueryPoolParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolParamsResponse);

                /** QueryPoolParamsResponse params. */
                public params?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified QueryPoolParamsResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolParamsResponse.verify|verify} messages.
                 * @param message QueryPoolParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolParamsResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolParamsResponse.verify|verify} messages.
                 * @param message QueryPoolParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolParamsResponse;

                /**
                 * Decodes a QueryPoolParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolParamsResponse;

                /**
                 * Verifies a QueryPoolParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolParamsResponse;

                /**
                 * Creates a plain object from a QueryPoolParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryPoolParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalPoolLiquidityRequest. */
            interface IQueryTotalPoolLiquidityRequest {

                /** QueryTotalPoolLiquidityRequest pool_id */
                pool_id?: (Long|null);
            }

            /** Represents a QueryTotalPoolLiquidityRequest. */
            class QueryTotalPoolLiquidityRequest implements IQueryTotalPoolLiquidityRequest {

                /**
                 * Constructs a new QueryTotalPoolLiquidityRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityRequest);

                /** QueryTotalPoolLiquidityRequest pool_id. */
                public pool_id: Long;

                /**
                 * Encodes the specified QueryTotalPoolLiquidityRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest.verify|verify} messages.
                 * @param message QueryTotalPoolLiquidityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalPoolLiquidityRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest.verify|verify} messages.
                 * @param message QueryTotalPoolLiquidityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalPoolLiquidityRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalPoolLiquidityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest;

                /**
                 * Decodes a QueryTotalPoolLiquidityRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalPoolLiquidityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest;

                /**
                 * Verifies a QueryTotalPoolLiquidityRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalPoolLiquidityRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalPoolLiquidityRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest;

                /**
                 * Creates a plain object from a QueryTotalPoolLiquidityRequest message. Also converts values to other types if specified.
                 * @param message QueryTotalPoolLiquidityRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalPoolLiquidityRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalPoolLiquidityResponse. */
            interface IQueryTotalPoolLiquidityResponse {

                /** QueryTotalPoolLiquidityResponse liquidity */
                liquidity?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryTotalPoolLiquidityResponse. */
            class QueryTotalPoolLiquidityResponse implements IQueryTotalPoolLiquidityResponse {

                /**
                 * Constructs a new QueryTotalPoolLiquidityResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityResponse);

                /** QueryTotalPoolLiquidityResponse liquidity. */
                public liquidity: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryTotalPoolLiquidityResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse.verify|verify} messages.
                 * @param message QueryTotalPoolLiquidityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalPoolLiquidityResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse.verify|verify} messages.
                 * @param message QueryTotalPoolLiquidityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryTotalPoolLiquidityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalPoolLiquidityResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalPoolLiquidityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse;

                /**
                 * Decodes a QueryTotalPoolLiquidityResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalPoolLiquidityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse;

                /**
                 * Verifies a QueryTotalPoolLiquidityResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalPoolLiquidityResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalPoolLiquidityResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse;

                /**
                 * Creates a plain object from a QueryTotalPoolLiquidityResponse message. Also converts values to other types if specified.
                 * @param message QueryTotalPoolLiquidityResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalPoolLiquidityResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalSharesRequest. */
            interface IQueryTotalSharesRequest {

                /** QueryTotalSharesRequest pool_id */
                pool_id?: (Long|null);
            }

            /** Represents a QueryTotalSharesRequest. */
            class QueryTotalSharesRequest implements IQueryTotalSharesRequest {

                /**
                 * Constructs a new QueryTotalSharesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryTotalSharesRequest);

                /** QueryTotalSharesRequest pool_id. */
                public pool_id: Long;

                /**
                 * Encodes the specified QueryTotalSharesRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalSharesRequest.verify|verify} messages.
                 * @param message QueryTotalSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryTotalSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalSharesRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalSharesRequest.verify|verify} messages.
                 * @param message QueryTotalSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryTotalSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalSharesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryTotalSharesRequest;

                /**
                 * Decodes a QueryTotalSharesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryTotalSharesRequest;

                /**
                 * Verifies a QueryTotalSharesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalSharesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalSharesRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryTotalSharesRequest;

                /**
                 * Creates a plain object from a QueryTotalSharesRequest message. Also converts values to other types if specified.
                 * @param message QueryTotalSharesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryTotalSharesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalSharesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalSharesResponse. */
            interface IQueryTotalSharesResponse {

                /** QueryTotalSharesResponse total_shares */
                total_shares?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a QueryTotalSharesResponse. */
            class QueryTotalSharesResponse implements IQueryTotalSharesResponse {

                /**
                 * Constructs a new QueryTotalSharesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryTotalSharesResponse);

                /** QueryTotalSharesResponse total_shares. */
                public total_shares?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified QueryTotalSharesResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalSharesResponse.verify|verify} messages.
                 * @param message QueryTotalSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryTotalSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalSharesResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalSharesResponse.verify|verify} messages.
                 * @param message QueryTotalSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryTotalSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalSharesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryTotalSharesResponse;

                /**
                 * Decodes a QueryTotalSharesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryTotalSharesResponse;

                /**
                 * Verifies a QueryTotalSharesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalSharesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalSharesResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryTotalSharesResponse;

                /**
                 * Creates a plain object from a QueryTotalSharesResponse message. Also converts values to other types if specified.
                 * @param message QueryTotalSharesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryTotalSharesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalSharesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCalcJoinPoolNoSwapSharesRequest. */
            interface IQueryCalcJoinPoolNoSwapSharesRequest {

                /** QueryCalcJoinPoolNoSwapSharesRequest pool_id */
                pool_id?: (Long|null);

                /** QueryCalcJoinPoolNoSwapSharesRequest tokens_in */
                tokens_in?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryCalcJoinPoolNoSwapSharesRequest. */
            class QueryCalcJoinPoolNoSwapSharesRequest implements IQueryCalcJoinPoolNoSwapSharesRequest {

                /**
                 * Constructs a new QueryCalcJoinPoolNoSwapSharesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesRequest);

                /** QueryCalcJoinPoolNoSwapSharesRequest pool_id. */
                public pool_id: Long;

                /** QueryCalcJoinPoolNoSwapSharesRequest tokens_in. */
                public tokens_in: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryCalcJoinPoolNoSwapSharesRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest.verify|verify} messages.
                 * @param message QueryCalcJoinPoolNoSwapSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCalcJoinPoolNoSwapSharesRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest.verify|verify} messages.
                 * @param message QueryCalcJoinPoolNoSwapSharesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCalcJoinPoolNoSwapSharesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCalcJoinPoolNoSwapSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest;

                /**
                 * Decodes a QueryCalcJoinPoolNoSwapSharesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCalcJoinPoolNoSwapSharesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest;

                /**
                 * Verifies a QueryCalcJoinPoolNoSwapSharesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCalcJoinPoolNoSwapSharesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCalcJoinPoolNoSwapSharesRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest;

                /**
                 * Creates a plain object from a QueryCalcJoinPoolNoSwapSharesRequest message. Also converts values to other types if specified.
                 * @param message QueryCalcJoinPoolNoSwapSharesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCalcJoinPoolNoSwapSharesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryCalcJoinPoolNoSwapSharesResponse. */
            interface IQueryCalcJoinPoolNoSwapSharesResponse {

                /** QueryCalcJoinPoolNoSwapSharesResponse tokens_out */
                tokens_out?: (cosmos.base.v1beta1.ICoin[]|null);

                /** QueryCalcJoinPoolNoSwapSharesResponse shares_out */
                shares_out?: (string|null);
            }

            /** Represents a QueryCalcJoinPoolNoSwapSharesResponse. */
            class QueryCalcJoinPoolNoSwapSharesResponse implements IQueryCalcJoinPoolNoSwapSharesResponse {

                /**
                 * Constructs a new QueryCalcJoinPoolNoSwapSharesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesResponse);

                /** QueryCalcJoinPoolNoSwapSharesResponse tokens_out. */
                public tokens_out: cosmos.base.v1beta1.ICoin[];

                /** QueryCalcJoinPoolNoSwapSharesResponse shares_out. */
                public shares_out: string;

                /**
                 * Encodes the specified QueryCalcJoinPoolNoSwapSharesResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse.verify|verify} messages.
                 * @param message QueryCalcJoinPoolNoSwapSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryCalcJoinPoolNoSwapSharesResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse.verify|verify} messages.
                 * @param message QueryCalcJoinPoolNoSwapSharesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryCalcJoinPoolNoSwapSharesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryCalcJoinPoolNoSwapSharesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryCalcJoinPoolNoSwapSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse;

                /**
                 * Decodes a QueryCalcJoinPoolNoSwapSharesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryCalcJoinPoolNoSwapSharesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse;

                /**
                 * Verifies a QueryCalcJoinPoolNoSwapSharesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryCalcJoinPoolNoSwapSharesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryCalcJoinPoolNoSwapSharesResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse;

                /**
                 * Creates a plain object from a QueryCalcJoinPoolNoSwapSharesResponse message. Also converts values to other types if specified.
                 * @param message QueryCalcJoinPoolNoSwapSharesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryCalcJoinPoolNoSwapSharesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotPriceRequest. */
            interface IQuerySpotPriceRequest {

                /** QuerySpotPriceRequest pool_id */
                pool_id?: (Long|null);

                /** QuerySpotPriceRequest base_asset_denom */
                base_asset_denom?: (string|null);

                /** QuerySpotPriceRequest quote_asset_denom */
                quote_asset_denom?: (string|null);
            }

            /** Represents a QuerySpotPriceRequest. */
            class QuerySpotPriceRequest implements IQuerySpotPriceRequest {

                /**
                 * Constructs a new QuerySpotPriceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQuerySpotPriceRequest);

                /** QuerySpotPriceRequest pool_id. */
                public pool_id: Long;

                /** QuerySpotPriceRequest base_asset_denom. */
                public base_asset_denom: string;

                /** QuerySpotPriceRequest quote_asset_denom. */
                public quote_asset_denom: string;

                /**
                 * Encodes the specified QuerySpotPriceRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySpotPriceRequest.verify|verify} messages.
                 * @param message QuerySpotPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQuerySpotPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotPriceRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySpotPriceRequest.verify|verify} messages.
                 * @param message QuerySpotPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQuerySpotPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotPriceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QuerySpotPriceRequest;

                /**
                 * Decodes a QuerySpotPriceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QuerySpotPriceRequest;

                /**
                 * Verifies a QuerySpotPriceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotPriceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotPriceRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QuerySpotPriceRequest;

                /**
                 * Creates a plain object from a QuerySpotPriceRequest message. Also converts values to other types if specified.
                 * @param message QuerySpotPriceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QuerySpotPriceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotPriceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolsWithFilterRequest. */
            interface IQueryPoolsWithFilterRequest {

                /** QueryPoolsWithFilterRequest min_liquidity */
                min_liquidity?: (cosmos.base.v1beta1.ICoin[]|null);

                /** QueryPoolsWithFilterRequest pool_type */
                pool_type?: (string|null);

                /** QueryPoolsWithFilterRequest pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
            }

            /** Represents a QueryPoolsWithFilterRequest. */
            class QueryPoolsWithFilterRequest implements IQueryPoolsWithFilterRequest {

                /**
                 * Constructs a new QueryPoolsWithFilterRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolsWithFilterRequest);

                /** QueryPoolsWithFilterRequest min_liquidity. */
                public min_liquidity: cosmos.base.v1beta1.ICoin[];

                /** QueryPoolsWithFilterRequest pool_type. */
                public pool_type: string;

                /** QueryPoolsWithFilterRequest pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                /**
                 * Encodes the specified QueryPoolsWithFilterRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest.verify|verify} messages.
                 * @param message QueryPoolsWithFilterRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolsWithFilterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolsWithFilterRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest.verify|verify} messages.
                 * @param message QueryPoolsWithFilterRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolsWithFilterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolsWithFilterRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolsWithFilterRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest;

                /**
                 * Decodes a QueryPoolsWithFilterRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolsWithFilterRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest;

                /**
                 * Verifies a QueryPoolsWithFilterRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolsWithFilterRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolsWithFilterRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest;

                /**
                 * Creates a plain object from a QueryPoolsWithFilterRequest message. Also converts values to other types if specified.
                 * @param message QueryPoolsWithFilterRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolsWithFilterRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryPoolsWithFilterResponse. */
            interface IQueryPoolsWithFilterResponse {

                /** QueryPoolsWithFilterResponse pools */
                pools?: (google.protobuf.IAny[]|null);

                /** QueryPoolsWithFilterResponse pagination */
                pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
            }

            /** Represents a QueryPoolsWithFilterResponse. */
            class QueryPoolsWithFilterResponse implements IQueryPoolsWithFilterResponse {

                /**
                 * Constructs a new QueryPoolsWithFilterResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryPoolsWithFilterResponse);

                /** QueryPoolsWithFilterResponse pools. */
                public pools: google.protobuf.IAny[];

                /** QueryPoolsWithFilterResponse pagination. */
                public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                /**
                 * Encodes the specified QueryPoolsWithFilterResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse.verify|verify} messages.
                 * @param message QueryPoolsWithFilterResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryPoolsWithFilterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryPoolsWithFilterResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse.verify|verify} messages.
                 * @param message QueryPoolsWithFilterResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryPoolsWithFilterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryPoolsWithFilterResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryPoolsWithFilterResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse;

                /**
                 * Decodes a QueryPoolsWithFilterResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryPoolsWithFilterResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse;

                /**
                 * Verifies a QueryPoolsWithFilterResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryPoolsWithFilterResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryPoolsWithFilterResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse;

                /**
                 * Creates a plain object from a QueryPoolsWithFilterResponse message. Also converts values to other types if specified.
                 * @param message QueryPoolsWithFilterResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryPoolsWithFilterResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotPriceResponse. */
            interface IQuerySpotPriceResponse {

                /** QuerySpotPriceResponse spot_price */
                spot_price?: (string|null);
            }

            /** Represents a QuerySpotPriceResponse. */
            class QuerySpotPriceResponse implements IQuerySpotPriceResponse {

                /**
                 * Constructs a new QuerySpotPriceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQuerySpotPriceResponse);

                /** QuerySpotPriceResponse spot_price. */
                public spot_price: string;

                /**
                 * Encodes the specified QuerySpotPriceResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySpotPriceResponse.verify|verify} messages.
                 * @param message QuerySpotPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQuerySpotPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotPriceResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySpotPriceResponse.verify|verify} messages.
                 * @param message QuerySpotPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQuerySpotPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotPriceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QuerySpotPriceResponse;

                /**
                 * Decodes a QuerySpotPriceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QuerySpotPriceResponse;

                /**
                 * Verifies a QuerySpotPriceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotPriceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotPriceResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QuerySpotPriceResponse;

                /**
                 * Creates a plain object from a QuerySpotPriceResponse message. Also converts values to other types if specified.
                 * @param message QuerySpotPriceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QuerySpotPriceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotPriceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySwapExactAmountInRequest. */
            interface IQuerySwapExactAmountInRequest {

                /** QuerySwapExactAmountInRequest sender */
                sender?: (string|null);

                /** QuerySwapExactAmountInRequest pool_id */
                pool_id?: (Long|null);

                /** QuerySwapExactAmountInRequest token_in */
                token_in?: (string|null);

                /** QuerySwapExactAmountInRequest routes */
                routes?: (osmosis.gamm.v1beta1.ISwapAmountInRoute[]|null);
            }

            /** Represents a QuerySwapExactAmountInRequest. */
            class QuerySwapExactAmountInRequest implements IQuerySwapExactAmountInRequest {

                /**
                 * Constructs a new QuerySwapExactAmountInRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQuerySwapExactAmountInRequest);

                /** QuerySwapExactAmountInRequest sender. */
                public sender: string;

                /** QuerySwapExactAmountInRequest pool_id. */
                public pool_id: Long;

                /** QuerySwapExactAmountInRequest token_in. */
                public token_in: string;

                /** QuerySwapExactAmountInRequest routes. */
                public routes: osmosis.gamm.v1beta1.ISwapAmountInRoute[];

                /**
                 * Encodes the specified QuerySwapExactAmountInRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest.verify|verify} messages.
                 * @param message QuerySwapExactAmountInRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountInRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySwapExactAmountInRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest.verify|verify} messages.
                 * @param message QuerySwapExactAmountInRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountInRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySwapExactAmountInRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySwapExactAmountInRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest;

                /**
                 * Decodes a QuerySwapExactAmountInRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySwapExactAmountInRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest;

                /**
                 * Verifies a QuerySwapExactAmountInRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySwapExactAmountInRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySwapExactAmountInRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest;

                /**
                 * Creates a plain object from a QuerySwapExactAmountInRequest message. Also converts values to other types if specified.
                 * @param message QuerySwapExactAmountInRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySwapExactAmountInRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySwapExactAmountInResponse. */
            interface IQuerySwapExactAmountInResponse {

                /** QuerySwapExactAmountInResponse token_out_amount */
                token_out_amount?: (string|null);
            }

            /** Represents a QuerySwapExactAmountInResponse. */
            class QuerySwapExactAmountInResponse implements IQuerySwapExactAmountInResponse {

                /**
                 * Constructs a new QuerySwapExactAmountInResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQuerySwapExactAmountInResponse);

                /** QuerySwapExactAmountInResponse token_out_amount. */
                public token_out_amount: string;

                /**
                 * Encodes the specified QuerySwapExactAmountInResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse.verify|verify} messages.
                 * @param message QuerySwapExactAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySwapExactAmountInResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse.verify|verify} messages.
                 * @param message QuerySwapExactAmountInResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountInResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySwapExactAmountInResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySwapExactAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse;

                /**
                 * Decodes a QuerySwapExactAmountInResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySwapExactAmountInResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse;

                /**
                 * Verifies a QuerySwapExactAmountInResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySwapExactAmountInResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySwapExactAmountInResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse;

                /**
                 * Creates a plain object from a QuerySwapExactAmountInResponse message. Also converts values to other types if specified.
                 * @param message QuerySwapExactAmountInResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySwapExactAmountInResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySwapExactAmountOutRequest. */
            interface IQuerySwapExactAmountOutRequest {

                /** QuerySwapExactAmountOutRequest sender */
                sender?: (string|null);

                /** QuerySwapExactAmountOutRequest pool_id */
                pool_id?: (Long|null);

                /** QuerySwapExactAmountOutRequest routes */
                routes?: (osmosis.gamm.v1beta1.ISwapAmountOutRoute[]|null);

                /** QuerySwapExactAmountOutRequest token_out */
                token_out?: (string|null);
            }

            /** Represents a QuerySwapExactAmountOutRequest. */
            class QuerySwapExactAmountOutRequest implements IQuerySwapExactAmountOutRequest {

                /**
                 * Constructs a new QuerySwapExactAmountOutRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutRequest);

                /** QuerySwapExactAmountOutRequest sender. */
                public sender: string;

                /** QuerySwapExactAmountOutRequest pool_id. */
                public pool_id: Long;

                /** QuerySwapExactAmountOutRequest routes. */
                public routes: osmosis.gamm.v1beta1.ISwapAmountOutRoute[];

                /** QuerySwapExactAmountOutRequest token_out. */
                public token_out: string;

                /**
                 * Encodes the specified QuerySwapExactAmountOutRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest.verify|verify} messages.
                 * @param message QuerySwapExactAmountOutRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySwapExactAmountOutRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest.verify|verify} messages.
                 * @param message QuerySwapExactAmountOutRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySwapExactAmountOutRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySwapExactAmountOutRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest;

                /**
                 * Decodes a QuerySwapExactAmountOutRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySwapExactAmountOutRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest;

                /**
                 * Verifies a QuerySwapExactAmountOutRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySwapExactAmountOutRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySwapExactAmountOutRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest;

                /**
                 * Creates a plain object from a QuerySwapExactAmountOutRequest message. Also converts values to other types if specified.
                 * @param message QuerySwapExactAmountOutRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySwapExactAmountOutRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySwapExactAmountOutResponse. */
            interface IQuerySwapExactAmountOutResponse {

                /** QuerySwapExactAmountOutResponse token_in_amount */
                token_in_amount?: (string|null);
            }

            /** Represents a QuerySwapExactAmountOutResponse. */
            class QuerySwapExactAmountOutResponse implements IQuerySwapExactAmountOutResponse {

                /**
                 * Constructs a new QuerySwapExactAmountOutResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutResponse);

                /** QuerySwapExactAmountOutResponse token_in_amount. */
                public token_in_amount: string;

                /**
                 * Encodes the specified QuerySwapExactAmountOutResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse.verify|verify} messages.
                 * @param message QuerySwapExactAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySwapExactAmountOutResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse.verify|verify} messages.
                 * @param message QuerySwapExactAmountOutResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQuerySwapExactAmountOutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySwapExactAmountOutResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySwapExactAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse;

                /**
                 * Decodes a QuerySwapExactAmountOutResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySwapExactAmountOutResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse;

                /**
                 * Verifies a QuerySwapExactAmountOutResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySwapExactAmountOutResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySwapExactAmountOutResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse;

                /**
                 * Creates a plain object from a QuerySwapExactAmountOutResponse message. Also converts values to other types if specified.
                 * @param message QuerySwapExactAmountOutResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySwapExactAmountOutResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalLiquidityRequest. */
            interface IQueryTotalLiquidityRequest {
            }

            /** Represents a QueryTotalLiquidityRequest. */
            class QueryTotalLiquidityRequest implements IQueryTotalLiquidityRequest {

                /**
                 * Constructs a new QueryTotalLiquidityRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryTotalLiquidityRequest);

                /**
                 * Encodes the specified QueryTotalLiquidityRequest message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalLiquidityRequest.verify|verify} messages.
                 * @param message QueryTotalLiquidityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryTotalLiquidityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalLiquidityRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalLiquidityRequest.verify|verify} messages.
                 * @param message QueryTotalLiquidityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryTotalLiquidityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalLiquidityRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalLiquidityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryTotalLiquidityRequest;

                /**
                 * Decodes a QueryTotalLiquidityRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalLiquidityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryTotalLiquidityRequest;

                /**
                 * Verifies a QueryTotalLiquidityRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalLiquidityRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalLiquidityRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryTotalLiquidityRequest;

                /**
                 * Creates a plain object from a QueryTotalLiquidityRequest message. Also converts values to other types if specified.
                 * @param message QueryTotalLiquidityRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryTotalLiquidityRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalLiquidityRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryTotalLiquidityResponse. */
            interface IQueryTotalLiquidityResponse {

                /** QueryTotalLiquidityResponse liquidity */
                liquidity?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a QueryTotalLiquidityResponse. */
            class QueryTotalLiquidityResponse implements IQueryTotalLiquidityResponse {

                /**
                 * Constructs a new QueryTotalLiquidityResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IQueryTotalLiquidityResponse);

                /** QueryTotalLiquidityResponse liquidity. */
                public liquidity: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified QueryTotalLiquidityResponse message. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalLiquidityResponse.verify|verify} messages.
                 * @param message QueryTotalLiquidityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IQueryTotalLiquidityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryTotalLiquidityResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.QueryTotalLiquidityResponse.verify|verify} messages.
                 * @param message QueryTotalLiquidityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IQueryTotalLiquidityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryTotalLiquidityResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryTotalLiquidityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.QueryTotalLiquidityResponse;

                /**
                 * Decodes a QueryTotalLiquidityResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryTotalLiquidityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.QueryTotalLiquidityResponse;

                /**
                 * Verifies a QueryTotalLiquidityResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryTotalLiquidityResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryTotalLiquidityResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.QueryTotalLiquidityResponse;

                /**
                 * Creates a plain object from a QueryTotalLiquidityResponse message. Also converts values to other types if specified.
                 * @param message QueryTotalLiquidityResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.QueryTotalLiquidityResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryTotalLiquidityResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params pool_creation_fee */
                pool_creation_fee?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IParams);

                /** Params pool_creation_fee. */
                public pool_creation_fee: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Params message. Does not implicitly {@link osmosis.gamm.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState pools */
                pools?: (google.protobuf.IAny[]|null);

                /** GenesisState next_pool_number */
                next_pool_number?: (Long|null);

                /** GenesisState params */
                params?: (osmosis.gamm.v1beta1.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v1beta1.IGenesisState);

                /** GenesisState pools. */
                public pools: google.protobuf.IAny[];

                /** GenesisState next_pool_number. */
                public next_pool_number: Long;

                /** GenesisState params. */
                public params?: (osmosis.gamm.v1beta1.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.gamm.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.gamm.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace poolmodels. */
        namespace poolmodels {

            /** Namespace balancer. */
            namespace balancer {

                /** Namespace v1beta1. */
                namespace v1beta1 {

                    /** Represents a Msg */
                    class Msg extends $protobuf.rpc.Service {

                        /**
                         * Constructs a new Msg service.
                         * @param rpcImpl RPC implementation
                         * @param [requestDelimited=false] Whether requests are length-delimited
                         * @param [responseDelimited=false] Whether responses are length-delimited
                         */
                        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                        /**
                         * Calls CreateBalancerPool.
                         * @param request MsgCreateBalancerPool message or plain object
                         * @param callback Node-style callback called with the error, if any, and MsgCreateBalancerPoolResponse
                         */
                        public createBalancerPool(request: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPool, callback: osmosis.gamm.poolmodels.balancer.v1beta1.Msg.CreateBalancerPoolCallback): void;

                        /**
                         * Calls CreateBalancerPool.
                         * @param request MsgCreateBalancerPool message or plain object
                         * @returns Promise
                         */
                        public createBalancerPool(request: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPool): Promise<osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse>;
                    }

                    namespace Msg {

                        /**
                         * Callback as used by {@link osmosis.gamm.poolmodels.balancer.v1beta1.Msg#createBalancerPool}.
                         * @param error Error, if any
                         * @param [response] MsgCreateBalancerPoolResponse
                         */
                        type CreateBalancerPoolCallback = (error: (Error|null), response?: osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse) => void;
                    }

                    /** Properties of a MsgCreateBalancerPool. */
                    interface IMsgCreateBalancerPool {

                        /** MsgCreateBalancerPool sender */
                        sender?: (string|null);

                        /** MsgCreateBalancerPool pool_params */
                        pool_params?: (osmosis.gamm.v1beta1.IPoolParams|null);

                        /** MsgCreateBalancerPool pool_assets */
                        pool_assets?: (osmosis.gamm.v1beta1.IPoolAsset[]|null);

                        /** MsgCreateBalancerPool future_pool_governor */
                        future_pool_governor?: (string|null);
                    }

                    /** Represents a MsgCreateBalancerPool. */
                    class MsgCreateBalancerPool implements IMsgCreateBalancerPool {

                        /**
                         * Constructs a new MsgCreateBalancerPool.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPool);

                        /** MsgCreateBalancerPool sender. */
                        public sender: string;

                        /** MsgCreateBalancerPool pool_params. */
                        public pool_params?: (osmosis.gamm.v1beta1.IPoolParams|null);

                        /** MsgCreateBalancerPool pool_assets. */
                        public pool_assets: osmosis.gamm.v1beta1.IPoolAsset[];

                        /** MsgCreateBalancerPool future_pool_governor. */
                        public future_pool_governor: string;

                        /**
                         * Encodes the specified MsgCreateBalancerPool message. Does not implicitly {@link osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool.verify|verify} messages.
                         * @param message MsgCreateBalancerPool message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPool, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgCreateBalancerPool message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool.verify|verify} messages.
                         * @param message MsgCreateBalancerPool message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPool, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgCreateBalancerPool message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgCreateBalancerPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool;

                        /**
                         * Decodes a MsgCreateBalancerPool message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgCreateBalancerPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool;

                        /**
                         * Verifies a MsgCreateBalancerPool message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgCreateBalancerPool message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgCreateBalancerPool
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool;

                        /**
                         * Creates a plain object from a MsgCreateBalancerPool message. Also converts values to other types if specified.
                         * @param message MsgCreateBalancerPool
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgCreateBalancerPool to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a MsgCreateBalancerPoolResponse. */
                    interface IMsgCreateBalancerPoolResponse {

                        /** MsgCreateBalancerPoolResponse pool_id */
                        pool_id?: (Long|null);
                    }

                    /** Represents a MsgCreateBalancerPoolResponse. */
                    class MsgCreateBalancerPoolResponse implements IMsgCreateBalancerPoolResponse {

                        /**
                         * Constructs a new MsgCreateBalancerPoolResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPoolResponse);

                        /** MsgCreateBalancerPoolResponse pool_id. */
                        public pool_id: Long;

                        /**
                         * Encodes the specified MsgCreateBalancerPoolResponse message. Does not implicitly {@link osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse.verify|verify} messages.
                         * @param message MsgCreateBalancerPoolResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgCreateBalancerPoolResponse message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse.verify|verify} messages.
                         * @param message MsgCreateBalancerPoolResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.balancer.v1beta1.IMsgCreateBalancerPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgCreateBalancerPoolResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgCreateBalancerPoolResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse;

                        /**
                         * Decodes a MsgCreateBalancerPoolResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgCreateBalancerPoolResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse;

                        /**
                         * Verifies a MsgCreateBalancerPoolResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgCreateBalancerPoolResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgCreateBalancerPoolResponse
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse;

                        /**
                         * Creates a plain object from a MsgCreateBalancerPoolResponse message. Also converts values to other types if specified.
                         * @param message MsgCreateBalancerPoolResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgCreateBalancerPoolResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            /** Namespace stableswap. */
            namespace stableswap {

                /** Namespace v1beta1. */
                namespace v1beta1 {

                    /** Represents a Msg */
                    class Msg extends $protobuf.rpc.Service {

                        /**
                         * Constructs a new Msg service.
                         * @param rpcImpl RPC implementation
                         * @param [requestDelimited=false] Whether requests are length-delimited
                         * @param [responseDelimited=false] Whether responses are length-delimited
                         */
                        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                        /**
                         * Calls CreateStableswapPool.
                         * @param request MsgCreateStableswapPool message or plain object
                         * @param callback Node-style callback called with the error, if any, and MsgCreateStableswapPoolResponse
                         */
                        public createStableswapPool(request: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPool, callback: osmosis.gamm.poolmodels.stableswap.v1beta1.Msg.CreateStableswapPoolCallback): void;

                        /**
                         * Calls CreateStableswapPool.
                         * @param request MsgCreateStableswapPool message or plain object
                         * @returns Promise
                         */
                        public createStableswapPool(request: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPool): Promise<osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse>;

                        /**
                         * Calls StableSwapAdjustScalingFactors.
                         * @param request MsgStableSwapAdjustScalingFactors message or plain object
                         * @param callback Node-style callback called with the error, if any, and MsgStableSwapAdjustScalingFactorsResponse
                         */
                        public stableSwapAdjustScalingFactors(request: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactors, callback: osmosis.gamm.poolmodels.stableswap.v1beta1.Msg.StableSwapAdjustScalingFactorsCallback): void;

                        /**
                         * Calls StableSwapAdjustScalingFactors.
                         * @param request MsgStableSwapAdjustScalingFactors message or plain object
                         * @returns Promise
                         */
                        public stableSwapAdjustScalingFactors(request: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactors): Promise<osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse>;
                    }

                    namespace Msg {

                        /**
                         * Callback as used by {@link osmosis.gamm.poolmodels.stableswap.v1beta1.Msg#createStableswapPool}.
                         * @param error Error, if any
                         * @param [response] MsgCreateStableswapPoolResponse
                         */
                        type CreateStableswapPoolCallback = (error: (Error|null), response?: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse) => void;

                        /**
                         * Callback as used by {@link osmosis.gamm.poolmodels.stableswap.v1beta1.Msg#stableSwapAdjustScalingFactors}.
                         * @param error Error, if any
                         * @param [response] MsgStableSwapAdjustScalingFactorsResponse
                         */
                        type StableSwapAdjustScalingFactorsCallback = (error: (Error|null), response?: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse) => void;
                    }

                    /** Properties of a MsgCreateStableswapPool. */
                    interface IMsgCreateStableswapPool {

                        /** MsgCreateStableswapPool sender */
                        sender?: (string|null);

                        /** MsgCreateStableswapPool pool_params */
                        pool_params?: (osmosis.gamm.poolmodels.stableswap.v1beta1.IPoolParams|null);

                        /** MsgCreateStableswapPool initial_pool_liquidity */
                        initial_pool_liquidity?: (cosmos.base.v1beta1.ICoin[]|null);

                        /** MsgCreateStableswapPool scaling_factors */
                        scaling_factors?: (Long[]|null);

                        /** MsgCreateStableswapPool future_pool_governor */
                        future_pool_governor?: (string|null);

                        /** MsgCreateStableswapPool scaling_factor_controller */
                        scaling_factor_controller?: (string|null);
                    }

                    /** Represents a MsgCreateStableswapPool. */
                    class MsgCreateStableswapPool implements IMsgCreateStableswapPool {

                        /**
                         * Constructs a new MsgCreateStableswapPool.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPool);

                        /** MsgCreateStableswapPool sender. */
                        public sender: string;

                        /** MsgCreateStableswapPool pool_params. */
                        public pool_params?: (osmosis.gamm.poolmodels.stableswap.v1beta1.IPoolParams|null);

                        /** MsgCreateStableswapPool initial_pool_liquidity. */
                        public initial_pool_liquidity: cosmos.base.v1beta1.ICoin[];

                        /** MsgCreateStableswapPool scaling_factors. */
                        public scaling_factors: Long[];

                        /** MsgCreateStableswapPool future_pool_governor. */
                        public future_pool_governor: string;

                        /** MsgCreateStableswapPool scaling_factor_controller. */
                        public scaling_factor_controller: string;

                        /**
                         * Encodes the specified MsgCreateStableswapPool message. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.verify|verify} messages.
                         * @param message MsgCreateStableswapPool message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPool, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgCreateStableswapPool message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.verify|verify} messages.
                         * @param message MsgCreateStableswapPool message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPool, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgCreateStableswapPool message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgCreateStableswapPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool;

                        /**
                         * Decodes a MsgCreateStableswapPool message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgCreateStableswapPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool;

                        /**
                         * Verifies a MsgCreateStableswapPool message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgCreateStableswapPool message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgCreateStableswapPool
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool;

                        /**
                         * Creates a plain object from a MsgCreateStableswapPool message. Also converts values to other types if specified.
                         * @param message MsgCreateStableswapPool
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgCreateStableswapPool to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a MsgCreateStableswapPoolResponse. */
                    interface IMsgCreateStableswapPoolResponse {

                        /** MsgCreateStableswapPoolResponse pool_id */
                        pool_id?: (Long|null);
                    }

                    /** Represents a MsgCreateStableswapPoolResponse. */
                    class MsgCreateStableswapPoolResponse implements IMsgCreateStableswapPoolResponse {

                        /**
                         * Constructs a new MsgCreateStableswapPoolResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPoolResponse);

                        /** MsgCreateStableswapPoolResponse pool_id. */
                        public pool_id: Long;

                        /**
                         * Encodes the specified MsgCreateStableswapPoolResponse message. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.verify|verify} messages.
                         * @param message MsgCreateStableswapPoolResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgCreateStableswapPoolResponse message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.verify|verify} messages.
                         * @param message MsgCreateStableswapPoolResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgCreateStableswapPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgCreateStableswapPoolResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgCreateStableswapPoolResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse;

                        /**
                         * Decodes a MsgCreateStableswapPoolResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgCreateStableswapPoolResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse;

                        /**
                         * Verifies a MsgCreateStableswapPoolResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgCreateStableswapPoolResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgCreateStableswapPoolResponse
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse;

                        /**
                         * Creates a plain object from a MsgCreateStableswapPoolResponse message. Also converts values to other types if specified.
                         * @param message MsgCreateStableswapPoolResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgCreateStableswapPoolResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a MsgStableSwapAdjustScalingFactors. */
                    interface IMsgStableSwapAdjustScalingFactors {

                        /** MsgStableSwapAdjustScalingFactors sender */
                        sender?: (string|null);

                        /** MsgStableSwapAdjustScalingFactors pool_id */
                        pool_id?: (Long|null);

                        /** MsgStableSwapAdjustScalingFactors scaling_factors */
                        scaling_factors?: (Long[]|null);
                    }

                    /** Represents a MsgStableSwapAdjustScalingFactors. */
                    class MsgStableSwapAdjustScalingFactors implements IMsgStableSwapAdjustScalingFactors {

                        /**
                         * Constructs a new MsgStableSwapAdjustScalingFactors.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactors);

                        /** MsgStableSwapAdjustScalingFactors sender. */
                        public sender: string;

                        /** MsgStableSwapAdjustScalingFactors pool_id. */
                        public pool_id: Long;

                        /** MsgStableSwapAdjustScalingFactors scaling_factors. */
                        public scaling_factors: Long[];

                        /**
                         * Encodes the specified MsgStableSwapAdjustScalingFactors message. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.verify|verify} messages.
                         * @param message MsgStableSwapAdjustScalingFactors message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactors, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgStableSwapAdjustScalingFactors message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.verify|verify} messages.
                         * @param message MsgStableSwapAdjustScalingFactors message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactors, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgStableSwapAdjustScalingFactors message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgStableSwapAdjustScalingFactors
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors;

                        /**
                         * Decodes a MsgStableSwapAdjustScalingFactors message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgStableSwapAdjustScalingFactors
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors;

                        /**
                         * Verifies a MsgStableSwapAdjustScalingFactors message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgStableSwapAdjustScalingFactors message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgStableSwapAdjustScalingFactors
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors;

                        /**
                         * Creates a plain object from a MsgStableSwapAdjustScalingFactors message. Also converts values to other types if specified.
                         * @param message MsgStableSwapAdjustScalingFactors
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgStableSwapAdjustScalingFactors to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a MsgStableSwapAdjustScalingFactorsResponse. */
                    interface IMsgStableSwapAdjustScalingFactorsResponse {
                    }

                    /** Represents a MsgStableSwapAdjustScalingFactorsResponse. */
                    class MsgStableSwapAdjustScalingFactorsResponse implements IMsgStableSwapAdjustScalingFactorsResponse {

                        /**
                         * Constructs a new MsgStableSwapAdjustScalingFactorsResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactorsResponse);

                        /**
                         * Encodes the specified MsgStableSwapAdjustScalingFactorsResponse message. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse.verify|verify} messages.
                         * @param message MsgStableSwapAdjustScalingFactorsResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgStableSwapAdjustScalingFactorsResponse message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse.verify|verify} messages.
                         * @param message MsgStableSwapAdjustScalingFactorsResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IMsgStableSwapAdjustScalingFactorsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgStableSwapAdjustScalingFactorsResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgStableSwapAdjustScalingFactorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse;

                        /**
                         * Decodes a MsgStableSwapAdjustScalingFactorsResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgStableSwapAdjustScalingFactorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse;

                        /**
                         * Verifies a MsgStableSwapAdjustScalingFactorsResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgStableSwapAdjustScalingFactorsResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgStableSwapAdjustScalingFactorsResponse
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse;

                        /**
                         * Creates a plain object from a MsgStableSwapAdjustScalingFactorsResponse message. Also converts values to other types if specified.
                         * @param message MsgStableSwapAdjustScalingFactorsResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgStableSwapAdjustScalingFactorsResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a PoolParams. */
                    interface IPoolParams {

                        /** PoolParams swap_fee */
                        swap_fee?: (string|null);

                        /** PoolParams exit_fee */
                        exit_fee?: (string|null);
                    }

                    /** Represents a PoolParams. */
                    class PoolParams implements IPoolParams {

                        /**
                         * Constructs a new PoolParams.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.stableswap.v1beta1.IPoolParams);

                        /** PoolParams swap_fee. */
                        public swap_fee: string;

                        /** PoolParams exit_fee. */
                        public exit_fee: string;

                        /**
                         * Encodes the specified PoolParams message. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams.verify|verify} messages.
                         * @param message PoolParams message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IPoolParams, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified PoolParams message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams.verify|verify} messages.
                         * @param message PoolParams message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IPoolParams, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a PoolParams message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns PoolParams
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams;

                        /**
                         * Decodes a PoolParams message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns PoolParams
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams;

                        /**
                         * Verifies a PoolParams message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a PoolParams message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns PoolParams
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams;

                        /**
                         * Creates a plain object from a PoolParams message. Also converts values to other types if specified.
                         * @param message PoolParams
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this PoolParams to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a Pool. */
                    interface IPool {

                        /** Pool address */
                        address?: (string|null);

                        /** Pool id */
                        id?: (Long|null);

                        /** Pool pool_params */
                        pool_params?: (osmosis.gamm.poolmodels.stableswap.v1beta1.IPoolParams|null);

                        /** Pool future_pool_governor */
                        future_pool_governor?: (string|null);

                        /** Pool total_shares */
                        total_shares?: (cosmos.base.v1beta1.ICoin|null);

                        /** Pool pool_liquidity */
                        pool_liquidity?: (cosmos.base.v1beta1.ICoin[]|null);

                        /** Pool scaling_factors */
                        scaling_factors?: (Long[]|null);

                        /** Pool scaling_factor_controller */
                        scaling_factor_controller?: (string|null);
                    }

                    /** Represents a Pool. */
                    class Pool implements IPool {

                        /**
                         * Constructs a new Pool.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: osmosis.gamm.poolmodels.stableswap.v1beta1.IPool);

                        /** Pool address. */
                        public address: string;

                        /** Pool id. */
                        public id: Long;

                        /** Pool pool_params. */
                        public pool_params?: (osmosis.gamm.poolmodels.stableswap.v1beta1.IPoolParams|null);

                        /** Pool future_pool_governor. */
                        public future_pool_governor: string;

                        /** Pool total_shares. */
                        public total_shares?: (cosmos.base.v1beta1.ICoin|null);

                        /** Pool pool_liquidity. */
                        public pool_liquidity: cosmos.base.v1beta1.ICoin[];

                        /** Pool scaling_factors. */
                        public scaling_factors: Long[];

                        /** Pool scaling_factor_controller. */
                        public scaling_factor_controller: string;

                        /**
                         * Encodes the specified Pool message. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.Pool.verify|verify} messages.
                         * @param message Pool message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified Pool message, length delimited. Does not implicitly {@link osmosis.gamm.poolmodels.stableswap.v1beta1.Pool.verify|verify} messages.
                         * @param message Pool message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: osmosis.gamm.poolmodels.stableswap.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a Pool message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns Pool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.poolmodels.stableswap.v1beta1.Pool;

                        /**
                         * Decodes a Pool message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns Pool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.poolmodels.stableswap.v1beta1.Pool;

                        /**
                         * Verifies a Pool message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a Pool message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns Pool
                         */
                        public static fromObject(object: { [k: string]: any }): osmosis.gamm.poolmodels.stableswap.v1beta1.Pool;

                        /**
                         * Creates a plain object from a Pool message. Also converts values to other types if specified.
                         * @param message Pool
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: osmosis.gamm.poolmodels.stableswap.v1beta1.Pool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this Pool to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }
                }
            }
        }

        /** Namespace v2. */
        namespace v2 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls SpotPrice.
                 * @param request QuerySpotPriceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QuerySpotPriceResponse
                 */
                public spotPrice(request: osmosis.gamm.v2.IQuerySpotPriceRequest, callback: osmosis.gamm.v2.Query.SpotPriceCallback): void;

                /**
                 * Calls SpotPrice.
                 * @param request QuerySpotPriceRequest message or plain object
                 * @returns Promise
                 */
                public spotPrice(request: osmosis.gamm.v2.IQuerySpotPriceRequest): Promise<osmosis.gamm.v2.QuerySpotPriceResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.gamm.v2.Query#spotPrice}.
                 * @param error Error, if any
                 * @param [response] QuerySpotPriceResponse
                 */
                type SpotPriceCallback = (error: (Error|null), response?: osmosis.gamm.v2.QuerySpotPriceResponse) => void;
            }

            /** Properties of a QuerySpotPriceRequest. */
            interface IQuerySpotPriceRequest {

                /** QuerySpotPriceRequest pool_id */
                pool_id?: (Long|null);

                /** QuerySpotPriceRequest base_asset_denom */
                base_asset_denom?: (string|null);

                /** QuerySpotPriceRequest quote_asset_denom */
                quote_asset_denom?: (string|null);
            }

            /** Represents a QuerySpotPriceRequest. */
            class QuerySpotPriceRequest implements IQuerySpotPriceRequest {

                /**
                 * Constructs a new QuerySpotPriceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v2.IQuerySpotPriceRequest);

                /** QuerySpotPriceRequest pool_id. */
                public pool_id: Long;

                /** QuerySpotPriceRequest base_asset_denom. */
                public base_asset_denom: string;

                /** QuerySpotPriceRequest quote_asset_denom. */
                public quote_asset_denom: string;

                /**
                 * Encodes the specified QuerySpotPriceRequest message. Does not implicitly {@link osmosis.gamm.v2.QuerySpotPriceRequest.verify|verify} messages.
                 * @param message QuerySpotPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v2.IQuerySpotPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotPriceRequest message, length delimited. Does not implicitly {@link osmosis.gamm.v2.QuerySpotPriceRequest.verify|verify} messages.
                 * @param message QuerySpotPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v2.IQuerySpotPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotPriceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v2.QuerySpotPriceRequest;

                /**
                 * Decodes a QuerySpotPriceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v2.QuerySpotPriceRequest;

                /**
                 * Verifies a QuerySpotPriceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotPriceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotPriceRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v2.QuerySpotPriceRequest;

                /**
                 * Creates a plain object from a QuerySpotPriceRequest message. Also converts values to other types if specified.
                 * @param message QuerySpotPriceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v2.QuerySpotPriceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotPriceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QuerySpotPriceResponse. */
            interface IQuerySpotPriceResponse {

                /** QuerySpotPriceResponse spot_price */
                spot_price?: (string|null);
            }

            /** Represents a QuerySpotPriceResponse. */
            class QuerySpotPriceResponse implements IQuerySpotPriceResponse {

                /**
                 * Constructs a new QuerySpotPriceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.gamm.v2.IQuerySpotPriceResponse);

                /** QuerySpotPriceResponse spot_price. */
                public spot_price: string;

                /**
                 * Encodes the specified QuerySpotPriceResponse message. Does not implicitly {@link osmosis.gamm.v2.QuerySpotPriceResponse.verify|verify} messages.
                 * @param message QuerySpotPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.gamm.v2.IQuerySpotPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QuerySpotPriceResponse message, length delimited. Does not implicitly {@link osmosis.gamm.v2.QuerySpotPriceResponse.verify|verify} messages.
                 * @param message QuerySpotPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.gamm.v2.IQuerySpotPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QuerySpotPriceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QuerySpotPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.gamm.v2.QuerySpotPriceResponse;

                /**
                 * Decodes a QuerySpotPriceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QuerySpotPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.gamm.v2.QuerySpotPriceResponse;

                /**
                 * Verifies a QuerySpotPriceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QuerySpotPriceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QuerySpotPriceResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.gamm.v2.QuerySpotPriceResponse;

                /**
                 * Creates a plain object from a QuerySpotPriceResponse message. Also converts values to other types if specified.
                 * @param message QuerySpotPriceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.gamm.v2.QuerySpotPriceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QuerySpotPriceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace ibcratelimit. */
    namespace ibcratelimit {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: osmosis.ibcratelimit.v1beta1.IQueryParamsRequest, callback: osmosis.ibcratelimit.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: osmosis.ibcratelimit.v1beta1.IQueryParamsRequest): Promise<osmosis.ibcratelimit.v1beta1.QueryParamsResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.ibcratelimit.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: osmosis.ibcratelimit.v1beta1.QueryParamsResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.ibcratelimit.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link osmosis.ibcratelimit.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.ibcratelimit.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link osmosis.ibcratelimit.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.ibcratelimit.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.ibcratelimit.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.ibcratelimit.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.ibcratelimit.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.ibcratelimit.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (osmosis.ibcratelimit.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.ibcratelimit.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (osmosis.ibcratelimit.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link osmosis.ibcratelimit.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.ibcratelimit.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link osmosis.ibcratelimit.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.ibcratelimit.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.ibcratelimit.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.ibcratelimit.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.ibcratelimit.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.ibcratelimit.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params contract_address */
                contract_address?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.ibcratelimit.v1beta1.IParams);

                /** Params contract_address. */
                public contract_address: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link osmosis.ibcratelimit.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.ibcratelimit.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.ibcratelimit.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.ibcratelimit.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.ibcratelimit.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.ibcratelimit.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.ibcratelimit.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.ibcratelimit.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace incentives. */
    namespace incentives {

        /** Represents a Msg */
        class Msg extends $protobuf.rpc.Service {

            /**
             * Constructs a new Msg service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Calls CreateGauge.
             * @param request MsgCreateGauge message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgCreateGaugeResponse
             */
            public createGauge(request: osmosis.incentives.IMsgCreateGauge, callback: osmosis.incentives.Msg.CreateGaugeCallback): void;

            /**
             * Calls CreateGauge.
             * @param request MsgCreateGauge message or plain object
             * @returns Promise
             */
            public createGauge(request: osmosis.incentives.IMsgCreateGauge): Promise<osmosis.incentives.MsgCreateGaugeResponse>;

            /**
             * Calls AddToGauge.
             * @param request MsgAddToGauge message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgAddToGaugeResponse
             */
            public addToGauge(request: osmosis.incentives.IMsgAddToGauge, callback: osmosis.incentives.Msg.AddToGaugeCallback): void;

            /**
             * Calls AddToGauge.
             * @param request MsgAddToGauge message or plain object
             * @returns Promise
             */
            public addToGauge(request: osmosis.incentives.IMsgAddToGauge): Promise<osmosis.incentives.MsgAddToGaugeResponse>;
        }

        namespace Msg {

            /**
             * Callback as used by {@link osmosis.incentives.Msg#createGauge}.
             * @param error Error, if any
             * @param [response] MsgCreateGaugeResponse
             */
            type CreateGaugeCallback = (error: (Error|null), response?: osmosis.incentives.MsgCreateGaugeResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Msg#addToGauge}.
             * @param error Error, if any
             * @param [response] MsgAddToGaugeResponse
             */
            type AddToGaugeCallback = (error: (Error|null), response?: osmosis.incentives.MsgAddToGaugeResponse) => void;
        }

        /** Properties of a MsgCreateGauge. */
        interface IMsgCreateGauge {

            /** MsgCreateGauge is_perpetual */
            is_perpetual?: (boolean|null);

            /** MsgCreateGauge owner */
            owner?: (string|null);

            /** MsgCreateGauge distribute_to */
            distribute_to?: (osmosis.lockup.IQueryCondition|null);

            /** MsgCreateGauge coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);

            /** MsgCreateGauge start_time */
            start_time?: (google.protobuf.ITimestamp|null);

            /** MsgCreateGauge num_epochs_paid_over */
            num_epochs_paid_over?: (Long|null);
        }

        /** Represents a MsgCreateGauge. */
        class MsgCreateGauge implements IMsgCreateGauge {

            /**
             * Constructs a new MsgCreateGauge.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IMsgCreateGauge);

            /** MsgCreateGauge is_perpetual. */
            public is_perpetual: boolean;

            /** MsgCreateGauge owner. */
            public owner: string;

            /** MsgCreateGauge distribute_to. */
            public distribute_to?: (osmosis.lockup.IQueryCondition|null);

            /** MsgCreateGauge coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /** MsgCreateGauge start_time. */
            public start_time?: (google.protobuf.ITimestamp|null);

            /** MsgCreateGauge num_epochs_paid_over. */
            public num_epochs_paid_over: Long;

            /**
             * Encodes the specified MsgCreateGauge message. Does not implicitly {@link osmosis.incentives.MsgCreateGauge.verify|verify} messages.
             * @param message MsgCreateGauge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IMsgCreateGauge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgCreateGauge message, length delimited. Does not implicitly {@link osmosis.incentives.MsgCreateGauge.verify|verify} messages.
             * @param message MsgCreateGauge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IMsgCreateGauge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgCreateGauge message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCreateGauge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.MsgCreateGauge;

            /**
             * Decodes a MsgCreateGauge message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCreateGauge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.MsgCreateGauge;

            /**
             * Verifies a MsgCreateGauge message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCreateGauge message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCreateGauge
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.MsgCreateGauge;

            /**
             * Creates a plain object from a MsgCreateGauge message. Also converts values to other types if specified.
             * @param message MsgCreateGauge
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.MsgCreateGauge, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCreateGauge to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgCreateGaugeResponse. */
        interface IMsgCreateGaugeResponse {
        }

        /** Represents a MsgCreateGaugeResponse. */
        class MsgCreateGaugeResponse implements IMsgCreateGaugeResponse {

            /**
             * Constructs a new MsgCreateGaugeResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IMsgCreateGaugeResponse);

            /**
             * Encodes the specified MsgCreateGaugeResponse message. Does not implicitly {@link osmosis.incentives.MsgCreateGaugeResponse.verify|verify} messages.
             * @param message MsgCreateGaugeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IMsgCreateGaugeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgCreateGaugeResponse message, length delimited. Does not implicitly {@link osmosis.incentives.MsgCreateGaugeResponse.verify|verify} messages.
             * @param message MsgCreateGaugeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IMsgCreateGaugeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgCreateGaugeResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgCreateGaugeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.MsgCreateGaugeResponse;

            /**
             * Decodes a MsgCreateGaugeResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgCreateGaugeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.MsgCreateGaugeResponse;

            /**
             * Verifies a MsgCreateGaugeResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgCreateGaugeResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgCreateGaugeResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.MsgCreateGaugeResponse;

            /**
             * Creates a plain object from a MsgCreateGaugeResponse message. Also converts values to other types if specified.
             * @param message MsgCreateGaugeResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.MsgCreateGaugeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgCreateGaugeResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgAddToGauge. */
        interface IMsgAddToGauge {

            /** MsgAddToGauge owner */
            owner?: (string|null);

            /** MsgAddToGauge gauge_id */
            gauge_id?: (Long|null);

            /** MsgAddToGauge rewards */
            rewards?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a MsgAddToGauge. */
        class MsgAddToGauge implements IMsgAddToGauge {

            /**
             * Constructs a new MsgAddToGauge.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IMsgAddToGauge);

            /** MsgAddToGauge owner. */
            public owner: string;

            /** MsgAddToGauge gauge_id. */
            public gauge_id: Long;

            /** MsgAddToGauge rewards. */
            public rewards: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified MsgAddToGauge message. Does not implicitly {@link osmosis.incentives.MsgAddToGauge.verify|verify} messages.
             * @param message MsgAddToGauge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IMsgAddToGauge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgAddToGauge message, length delimited. Does not implicitly {@link osmosis.incentives.MsgAddToGauge.verify|verify} messages.
             * @param message MsgAddToGauge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IMsgAddToGauge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgAddToGauge message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgAddToGauge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.MsgAddToGauge;

            /**
             * Decodes a MsgAddToGauge message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgAddToGauge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.MsgAddToGauge;

            /**
             * Verifies a MsgAddToGauge message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgAddToGauge message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgAddToGauge
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.MsgAddToGauge;

            /**
             * Creates a plain object from a MsgAddToGauge message. Also converts values to other types if specified.
             * @param message MsgAddToGauge
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.MsgAddToGauge, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgAddToGauge to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgAddToGaugeResponse. */
        interface IMsgAddToGaugeResponse {
        }

        /** Represents a MsgAddToGaugeResponse. */
        class MsgAddToGaugeResponse implements IMsgAddToGaugeResponse {

            /**
             * Constructs a new MsgAddToGaugeResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IMsgAddToGaugeResponse);

            /**
             * Encodes the specified MsgAddToGaugeResponse message. Does not implicitly {@link osmosis.incentives.MsgAddToGaugeResponse.verify|verify} messages.
             * @param message MsgAddToGaugeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IMsgAddToGaugeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgAddToGaugeResponse message, length delimited. Does not implicitly {@link osmosis.incentives.MsgAddToGaugeResponse.verify|verify} messages.
             * @param message MsgAddToGaugeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IMsgAddToGaugeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgAddToGaugeResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgAddToGaugeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.MsgAddToGaugeResponse;

            /**
             * Decodes a MsgAddToGaugeResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgAddToGaugeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.MsgAddToGaugeResponse;

            /**
             * Verifies a MsgAddToGaugeResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgAddToGaugeResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgAddToGaugeResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.MsgAddToGaugeResponse;

            /**
             * Creates a plain object from a MsgAddToGaugeResponse message. Also converts values to other types if specified.
             * @param message MsgAddToGaugeResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.MsgAddToGaugeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgAddToGaugeResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Gauge. */
        interface IGauge {

            /** Gauge id */
            id?: (Long|null);

            /** Gauge is_perpetual */
            is_perpetual?: (boolean|null);

            /** Gauge distribute_to */
            distribute_to?: (osmosis.lockup.IQueryCondition|null);

            /** Gauge coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);

            /** Gauge start_time */
            start_time?: (google.protobuf.ITimestamp|null);

            /** Gauge num_epochs_paid_over */
            num_epochs_paid_over?: (Long|null);

            /** Gauge filled_epochs */
            filled_epochs?: (Long|null);

            /** Gauge distributed_coins */
            distributed_coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a Gauge. */
        class Gauge implements IGauge {

            /**
             * Constructs a new Gauge.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IGauge);

            /** Gauge id. */
            public id: Long;

            /** Gauge is_perpetual. */
            public is_perpetual: boolean;

            /** Gauge distribute_to. */
            public distribute_to?: (osmosis.lockup.IQueryCondition|null);

            /** Gauge coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /** Gauge start_time. */
            public start_time?: (google.protobuf.ITimestamp|null);

            /** Gauge num_epochs_paid_over. */
            public num_epochs_paid_over: Long;

            /** Gauge filled_epochs. */
            public filled_epochs: Long;

            /** Gauge distributed_coins. */
            public distributed_coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified Gauge message. Does not implicitly {@link osmosis.incentives.Gauge.verify|verify} messages.
             * @param message Gauge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IGauge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Gauge message, length delimited. Does not implicitly {@link osmosis.incentives.Gauge.verify|verify} messages.
             * @param message Gauge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IGauge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Gauge message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Gauge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.Gauge;

            /**
             * Decodes a Gauge message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Gauge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.Gauge;

            /**
             * Verifies a Gauge message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Gauge message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Gauge
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.Gauge;

            /**
             * Creates a plain object from a Gauge message. Also converts values to other types if specified.
             * @param message Gauge
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.Gauge, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Gauge to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LockableDurationsInfo. */
        interface ILockableDurationsInfo {

            /** LockableDurationsInfo lockable_durations */
            lockable_durations?: (google.protobuf.IDuration[]|null);
        }

        /** Represents a LockableDurationsInfo. */
        class LockableDurationsInfo implements ILockableDurationsInfo {

            /**
             * Constructs a new LockableDurationsInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.ILockableDurationsInfo);

            /** LockableDurationsInfo lockable_durations. */
            public lockable_durations: google.protobuf.IDuration[];

            /**
             * Encodes the specified LockableDurationsInfo message. Does not implicitly {@link osmosis.incentives.LockableDurationsInfo.verify|verify} messages.
             * @param message LockableDurationsInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.ILockableDurationsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LockableDurationsInfo message, length delimited. Does not implicitly {@link osmosis.incentives.LockableDurationsInfo.verify|verify} messages.
             * @param message LockableDurationsInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.ILockableDurationsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LockableDurationsInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LockableDurationsInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.LockableDurationsInfo;

            /**
             * Decodes a LockableDurationsInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LockableDurationsInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.LockableDurationsInfo;

            /**
             * Verifies a LockableDurationsInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LockableDurationsInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LockableDurationsInfo
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.LockableDurationsInfo;

            /**
             * Creates a plain object from a LockableDurationsInfo message. Also converts values to other types if specified.
             * @param message LockableDurationsInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.LockableDurationsInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LockableDurationsInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a Query */
        class Query extends $protobuf.rpc.Service {

            /**
             * Constructs a new Query service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Calls ModuleToDistributeCoins.
             * @param request ModuleToDistributeCoinsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and ModuleToDistributeCoinsResponse
             */
            public moduleToDistributeCoins(request: osmosis.incentives.IModuleToDistributeCoinsRequest, callback: osmosis.incentives.Query.ModuleToDistributeCoinsCallback): void;

            /**
             * Calls ModuleToDistributeCoins.
             * @param request ModuleToDistributeCoinsRequest message or plain object
             * @returns Promise
             */
            public moduleToDistributeCoins(request: osmosis.incentives.IModuleToDistributeCoinsRequest): Promise<osmosis.incentives.ModuleToDistributeCoinsResponse>;

            /**
             * Calls GaugeByID.
             * @param request GaugeByIDRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and GaugeByIDResponse
             */
            public gaugeByID(request: osmosis.incentives.IGaugeByIDRequest, callback: osmosis.incentives.Query.GaugeByIDCallback): void;

            /**
             * Calls GaugeByID.
             * @param request GaugeByIDRequest message or plain object
             * @returns Promise
             */
            public gaugeByID(request: osmosis.incentives.IGaugeByIDRequest): Promise<osmosis.incentives.GaugeByIDResponse>;

            /**
             * Calls Gauges.
             * @param request GaugesRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and GaugesResponse
             */
            public gauges(request: osmosis.incentives.IGaugesRequest, callback: osmosis.incentives.Query.GaugesCallback): void;

            /**
             * Calls Gauges.
             * @param request GaugesRequest message or plain object
             * @returns Promise
             */
            public gauges(request: osmosis.incentives.IGaugesRequest): Promise<osmosis.incentives.GaugesResponse>;

            /**
             * Calls ActiveGauges.
             * @param request ActiveGaugesRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and ActiveGaugesResponse
             */
            public activeGauges(request: osmosis.incentives.IActiveGaugesRequest, callback: osmosis.incentives.Query.ActiveGaugesCallback): void;

            /**
             * Calls ActiveGauges.
             * @param request ActiveGaugesRequest message or plain object
             * @returns Promise
             */
            public activeGauges(request: osmosis.incentives.IActiveGaugesRequest): Promise<osmosis.incentives.ActiveGaugesResponse>;

            /**
             * Calls ActiveGaugesPerDenom.
             * @param request ActiveGaugesPerDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and ActiveGaugesPerDenomResponse
             */
            public activeGaugesPerDenom(request: osmosis.incentives.IActiveGaugesPerDenomRequest, callback: osmosis.incentives.Query.ActiveGaugesPerDenomCallback): void;

            /**
             * Calls ActiveGaugesPerDenom.
             * @param request ActiveGaugesPerDenomRequest message or plain object
             * @returns Promise
             */
            public activeGaugesPerDenom(request: osmosis.incentives.IActiveGaugesPerDenomRequest): Promise<osmosis.incentives.ActiveGaugesPerDenomResponse>;

            /**
             * Calls UpcomingGauges.
             * @param request UpcomingGaugesRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and UpcomingGaugesResponse
             */
            public upcomingGauges(request: osmosis.incentives.IUpcomingGaugesRequest, callback: osmosis.incentives.Query.UpcomingGaugesCallback): void;

            /**
             * Calls UpcomingGauges.
             * @param request UpcomingGaugesRequest message or plain object
             * @returns Promise
             */
            public upcomingGauges(request: osmosis.incentives.IUpcomingGaugesRequest): Promise<osmosis.incentives.UpcomingGaugesResponse>;

            /**
             * Calls UpcomingGaugesPerDenom.
             * @param request UpcomingGaugesPerDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and UpcomingGaugesPerDenomResponse
             */
            public upcomingGaugesPerDenom(request: osmosis.incentives.IUpcomingGaugesPerDenomRequest, callback: osmosis.incentives.Query.UpcomingGaugesPerDenomCallback): void;

            /**
             * Calls UpcomingGaugesPerDenom.
             * @param request UpcomingGaugesPerDenomRequest message or plain object
             * @returns Promise
             */
            public upcomingGaugesPerDenom(request: osmosis.incentives.IUpcomingGaugesPerDenomRequest): Promise<osmosis.incentives.UpcomingGaugesPerDenomResponse>;

            /**
             * Calls RewardsEst.
             * @param request RewardsEstRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and RewardsEstResponse
             */
            public rewardsEst(request: osmosis.incentives.IRewardsEstRequest, callback: osmosis.incentives.Query.RewardsEstCallback): void;

            /**
             * Calls RewardsEst.
             * @param request RewardsEstRequest message or plain object
             * @returns Promise
             */
            public rewardsEst(request: osmosis.incentives.IRewardsEstRequest): Promise<osmosis.incentives.RewardsEstResponse>;

            /**
             * Calls LockableDurations.
             * @param request QueryLockableDurationsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and QueryLockableDurationsResponse
             */
            public lockableDurations(request: osmosis.incentives.IQueryLockableDurationsRequest, callback: osmosis.incentives.Query.LockableDurationsCallback): void;

            /**
             * Calls LockableDurations.
             * @param request QueryLockableDurationsRequest message or plain object
             * @returns Promise
             */
            public lockableDurations(request: osmosis.incentives.IQueryLockableDurationsRequest): Promise<osmosis.incentives.QueryLockableDurationsResponse>;
        }

        namespace Query {

            /**
             * Callback as used by {@link osmosis.incentives.Query#moduleToDistributeCoins}.
             * @param error Error, if any
             * @param [response] ModuleToDistributeCoinsResponse
             */
            type ModuleToDistributeCoinsCallback = (error: (Error|null), response?: osmosis.incentives.ModuleToDistributeCoinsResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#gaugeByID}.
             * @param error Error, if any
             * @param [response] GaugeByIDResponse
             */
            type GaugeByIDCallback = (error: (Error|null), response?: osmosis.incentives.GaugeByIDResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#gauges}.
             * @param error Error, if any
             * @param [response] GaugesResponse
             */
            type GaugesCallback = (error: (Error|null), response?: osmosis.incentives.GaugesResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#activeGauges}.
             * @param error Error, if any
             * @param [response] ActiveGaugesResponse
             */
            type ActiveGaugesCallback = (error: (Error|null), response?: osmosis.incentives.ActiveGaugesResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#activeGaugesPerDenom}.
             * @param error Error, if any
             * @param [response] ActiveGaugesPerDenomResponse
             */
            type ActiveGaugesPerDenomCallback = (error: (Error|null), response?: osmosis.incentives.ActiveGaugesPerDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#upcomingGauges}.
             * @param error Error, if any
             * @param [response] UpcomingGaugesResponse
             */
            type UpcomingGaugesCallback = (error: (Error|null), response?: osmosis.incentives.UpcomingGaugesResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#upcomingGaugesPerDenom}.
             * @param error Error, if any
             * @param [response] UpcomingGaugesPerDenomResponse
             */
            type UpcomingGaugesPerDenomCallback = (error: (Error|null), response?: osmosis.incentives.UpcomingGaugesPerDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#rewardsEst}.
             * @param error Error, if any
             * @param [response] RewardsEstResponse
             */
            type RewardsEstCallback = (error: (Error|null), response?: osmosis.incentives.RewardsEstResponse) => void;

            /**
             * Callback as used by {@link osmosis.incentives.Query#lockableDurations}.
             * @param error Error, if any
             * @param [response] QueryLockableDurationsResponse
             */
            type LockableDurationsCallback = (error: (Error|null), response?: osmosis.incentives.QueryLockableDurationsResponse) => void;
        }

        /** Properties of a ModuleToDistributeCoinsRequest. */
        interface IModuleToDistributeCoinsRequest {
        }

        /** Represents a ModuleToDistributeCoinsRequest. */
        class ModuleToDistributeCoinsRequest implements IModuleToDistributeCoinsRequest {

            /**
             * Constructs a new ModuleToDistributeCoinsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IModuleToDistributeCoinsRequest);

            /**
             * Encodes the specified ModuleToDistributeCoinsRequest message. Does not implicitly {@link osmosis.incentives.ModuleToDistributeCoinsRequest.verify|verify} messages.
             * @param message ModuleToDistributeCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IModuleToDistributeCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ModuleToDistributeCoinsRequest message, length delimited. Does not implicitly {@link osmosis.incentives.ModuleToDistributeCoinsRequest.verify|verify} messages.
             * @param message ModuleToDistributeCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IModuleToDistributeCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ModuleToDistributeCoinsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ModuleToDistributeCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.ModuleToDistributeCoinsRequest;

            /**
             * Decodes a ModuleToDistributeCoinsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ModuleToDistributeCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.ModuleToDistributeCoinsRequest;

            /**
             * Verifies a ModuleToDistributeCoinsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ModuleToDistributeCoinsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ModuleToDistributeCoinsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.ModuleToDistributeCoinsRequest;

            /**
             * Creates a plain object from a ModuleToDistributeCoinsRequest message. Also converts values to other types if specified.
             * @param message ModuleToDistributeCoinsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.ModuleToDistributeCoinsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ModuleToDistributeCoinsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ModuleToDistributeCoinsResponse. */
        interface IModuleToDistributeCoinsResponse {

            /** ModuleToDistributeCoinsResponse coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a ModuleToDistributeCoinsResponse. */
        class ModuleToDistributeCoinsResponse implements IModuleToDistributeCoinsResponse {

            /**
             * Constructs a new ModuleToDistributeCoinsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IModuleToDistributeCoinsResponse);

            /** ModuleToDistributeCoinsResponse coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified ModuleToDistributeCoinsResponse message. Does not implicitly {@link osmosis.incentives.ModuleToDistributeCoinsResponse.verify|verify} messages.
             * @param message ModuleToDistributeCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IModuleToDistributeCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ModuleToDistributeCoinsResponse message, length delimited. Does not implicitly {@link osmosis.incentives.ModuleToDistributeCoinsResponse.verify|verify} messages.
             * @param message ModuleToDistributeCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IModuleToDistributeCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ModuleToDistributeCoinsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ModuleToDistributeCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.ModuleToDistributeCoinsResponse;

            /**
             * Decodes a ModuleToDistributeCoinsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ModuleToDistributeCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.ModuleToDistributeCoinsResponse;

            /**
             * Verifies a ModuleToDistributeCoinsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ModuleToDistributeCoinsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ModuleToDistributeCoinsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.ModuleToDistributeCoinsResponse;

            /**
             * Creates a plain object from a ModuleToDistributeCoinsResponse message. Also converts values to other types if specified.
             * @param message ModuleToDistributeCoinsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.ModuleToDistributeCoinsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ModuleToDistributeCoinsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GaugeByIDRequest. */
        interface IGaugeByIDRequest {

            /** GaugeByIDRequest id */
            id?: (Long|null);
        }

        /** Represents a GaugeByIDRequest. */
        class GaugeByIDRequest implements IGaugeByIDRequest {

            /**
             * Constructs a new GaugeByIDRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IGaugeByIDRequest);

            /** GaugeByIDRequest id. */
            public id: Long;

            /**
             * Encodes the specified GaugeByIDRequest message. Does not implicitly {@link osmosis.incentives.GaugeByIDRequest.verify|verify} messages.
             * @param message GaugeByIDRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IGaugeByIDRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GaugeByIDRequest message, length delimited. Does not implicitly {@link osmosis.incentives.GaugeByIDRequest.verify|verify} messages.
             * @param message GaugeByIDRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IGaugeByIDRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GaugeByIDRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GaugeByIDRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.GaugeByIDRequest;

            /**
             * Decodes a GaugeByIDRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GaugeByIDRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.GaugeByIDRequest;

            /**
             * Verifies a GaugeByIDRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GaugeByIDRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GaugeByIDRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.GaugeByIDRequest;

            /**
             * Creates a plain object from a GaugeByIDRequest message. Also converts values to other types if specified.
             * @param message GaugeByIDRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.GaugeByIDRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GaugeByIDRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GaugeByIDResponse. */
        interface IGaugeByIDResponse {

            /** GaugeByIDResponse gauge */
            gauge?: (osmosis.incentives.IGauge|null);
        }

        /** Represents a GaugeByIDResponse. */
        class GaugeByIDResponse implements IGaugeByIDResponse {

            /**
             * Constructs a new GaugeByIDResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IGaugeByIDResponse);

            /** GaugeByIDResponse gauge. */
            public gauge?: (osmosis.incentives.IGauge|null);

            /**
             * Encodes the specified GaugeByIDResponse message. Does not implicitly {@link osmosis.incentives.GaugeByIDResponse.verify|verify} messages.
             * @param message GaugeByIDResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IGaugeByIDResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GaugeByIDResponse message, length delimited. Does not implicitly {@link osmosis.incentives.GaugeByIDResponse.verify|verify} messages.
             * @param message GaugeByIDResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IGaugeByIDResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GaugeByIDResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GaugeByIDResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.GaugeByIDResponse;

            /**
             * Decodes a GaugeByIDResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GaugeByIDResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.GaugeByIDResponse;

            /**
             * Verifies a GaugeByIDResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GaugeByIDResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GaugeByIDResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.GaugeByIDResponse;

            /**
             * Creates a plain object from a GaugeByIDResponse message. Also converts values to other types if specified.
             * @param message GaugeByIDResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.GaugeByIDResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GaugeByIDResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GaugesRequest. */
        interface IGaugesRequest {

            /** GaugesRequest pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
        }

        /** Represents a GaugesRequest. */
        class GaugesRequest implements IGaugesRequest {

            /**
             * Constructs a new GaugesRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IGaugesRequest);

            /** GaugesRequest pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

            /**
             * Encodes the specified GaugesRequest message. Does not implicitly {@link osmosis.incentives.GaugesRequest.verify|verify} messages.
             * @param message GaugesRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GaugesRequest message, length delimited. Does not implicitly {@link osmosis.incentives.GaugesRequest.verify|verify} messages.
             * @param message GaugesRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GaugesRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GaugesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.GaugesRequest;

            /**
             * Decodes a GaugesRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GaugesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.GaugesRequest;

            /**
             * Verifies a GaugesRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GaugesRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GaugesRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.GaugesRequest;

            /**
             * Creates a plain object from a GaugesRequest message. Also converts values to other types if specified.
             * @param message GaugesRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.GaugesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GaugesRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GaugesResponse. */
        interface IGaugesResponse {

            /** GaugesResponse data */
            data?: (osmosis.incentives.IGauge[]|null);

            /** GaugesResponse pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
        }

        /** Represents a GaugesResponse. */
        class GaugesResponse implements IGaugesResponse {

            /**
             * Constructs a new GaugesResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IGaugesResponse);

            /** GaugesResponse data. */
            public data: osmosis.incentives.IGauge[];

            /** GaugesResponse pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

            /**
             * Encodes the specified GaugesResponse message. Does not implicitly {@link osmosis.incentives.GaugesResponse.verify|verify} messages.
             * @param message GaugesResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GaugesResponse message, length delimited. Does not implicitly {@link osmosis.incentives.GaugesResponse.verify|verify} messages.
             * @param message GaugesResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GaugesResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GaugesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.GaugesResponse;

            /**
             * Decodes a GaugesResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GaugesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.GaugesResponse;

            /**
             * Verifies a GaugesResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GaugesResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GaugesResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.GaugesResponse;

            /**
             * Creates a plain object from a GaugesResponse message. Also converts values to other types if specified.
             * @param message GaugesResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.GaugesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GaugesResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ActiveGaugesRequest. */
        interface IActiveGaugesRequest {

            /** ActiveGaugesRequest pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
        }

        /** Represents an ActiveGaugesRequest. */
        class ActiveGaugesRequest implements IActiveGaugesRequest {

            /**
             * Constructs a new ActiveGaugesRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IActiveGaugesRequest);

            /** ActiveGaugesRequest pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

            /**
             * Encodes the specified ActiveGaugesRequest message. Does not implicitly {@link osmosis.incentives.ActiveGaugesRequest.verify|verify} messages.
             * @param message ActiveGaugesRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IActiveGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ActiveGaugesRequest message, length delimited. Does not implicitly {@link osmosis.incentives.ActiveGaugesRequest.verify|verify} messages.
             * @param message ActiveGaugesRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IActiveGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ActiveGaugesRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ActiveGaugesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.ActiveGaugesRequest;

            /**
             * Decodes an ActiveGaugesRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ActiveGaugesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.ActiveGaugesRequest;

            /**
             * Verifies an ActiveGaugesRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ActiveGaugesRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ActiveGaugesRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.ActiveGaugesRequest;

            /**
             * Creates a plain object from an ActiveGaugesRequest message. Also converts values to other types if specified.
             * @param message ActiveGaugesRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.ActiveGaugesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ActiveGaugesRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ActiveGaugesResponse. */
        interface IActiveGaugesResponse {

            /** ActiveGaugesResponse data */
            data?: (osmosis.incentives.IGauge[]|null);

            /** ActiveGaugesResponse pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
        }

        /** Represents an ActiveGaugesResponse. */
        class ActiveGaugesResponse implements IActiveGaugesResponse {

            /**
             * Constructs a new ActiveGaugesResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IActiveGaugesResponse);

            /** ActiveGaugesResponse data. */
            public data: osmosis.incentives.IGauge[];

            /** ActiveGaugesResponse pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

            /**
             * Encodes the specified ActiveGaugesResponse message. Does not implicitly {@link osmosis.incentives.ActiveGaugesResponse.verify|verify} messages.
             * @param message ActiveGaugesResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IActiveGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ActiveGaugesResponse message, length delimited. Does not implicitly {@link osmosis.incentives.ActiveGaugesResponse.verify|verify} messages.
             * @param message ActiveGaugesResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IActiveGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ActiveGaugesResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ActiveGaugesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.ActiveGaugesResponse;

            /**
             * Decodes an ActiveGaugesResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ActiveGaugesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.ActiveGaugesResponse;

            /**
             * Verifies an ActiveGaugesResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ActiveGaugesResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ActiveGaugesResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.ActiveGaugesResponse;

            /**
             * Creates a plain object from an ActiveGaugesResponse message. Also converts values to other types if specified.
             * @param message ActiveGaugesResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.ActiveGaugesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ActiveGaugesResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ActiveGaugesPerDenomRequest. */
        interface IActiveGaugesPerDenomRequest {

            /** ActiveGaugesPerDenomRequest denom */
            denom?: (string|null);

            /** ActiveGaugesPerDenomRequest pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
        }

        /** Represents an ActiveGaugesPerDenomRequest. */
        class ActiveGaugesPerDenomRequest implements IActiveGaugesPerDenomRequest {

            /**
             * Constructs a new ActiveGaugesPerDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IActiveGaugesPerDenomRequest);

            /** ActiveGaugesPerDenomRequest denom. */
            public denom: string;

            /** ActiveGaugesPerDenomRequest pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

            /**
             * Encodes the specified ActiveGaugesPerDenomRequest message. Does not implicitly {@link osmosis.incentives.ActiveGaugesPerDenomRequest.verify|verify} messages.
             * @param message ActiveGaugesPerDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IActiveGaugesPerDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ActiveGaugesPerDenomRequest message, length delimited. Does not implicitly {@link osmosis.incentives.ActiveGaugesPerDenomRequest.verify|verify} messages.
             * @param message ActiveGaugesPerDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IActiveGaugesPerDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ActiveGaugesPerDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ActiveGaugesPerDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.ActiveGaugesPerDenomRequest;

            /**
             * Decodes an ActiveGaugesPerDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ActiveGaugesPerDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.ActiveGaugesPerDenomRequest;

            /**
             * Verifies an ActiveGaugesPerDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ActiveGaugesPerDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ActiveGaugesPerDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.ActiveGaugesPerDenomRequest;

            /**
             * Creates a plain object from an ActiveGaugesPerDenomRequest message. Also converts values to other types if specified.
             * @param message ActiveGaugesPerDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.ActiveGaugesPerDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ActiveGaugesPerDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ActiveGaugesPerDenomResponse. */
        interface IActiveGaugesPerDenomResponse {

            /** ActiveGaugesPerDenomResponse data */
            data?: (osmosis.incentives.IGauge[]|null);

            /** ActiveGaugesPerDenomResponse pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
        }

        /** Represents an ActiveGaugesPerDenomResponse. */
        class ActiveGaugesPerDenomResponse implements IActiveGaugesPerDenomResponse {

            /**
             * Constructs a new ActiveGaugesPerDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IActiveGaugesPerDenomResponse);

            /** ActiveGaugesPerDenomResponse data. */
            public data: osmosis.incentives.IGauge[];

            /** ActiveGaugesPerDenomResponse pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

            /**
             * Encodes the specified ActiveGaugesPerDenomResponse message. Does not implicitly {@link osmosis.incentives.ActiveGaugesPerDenomResponse.verify|verify} messages.
             * @param message ActiveGaugesPerDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IActiveGaugesPerDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ActiveGaugesPerDenomResponse message, length delimited. Does not implicitly {@link osmosis.incentives.ActiveGaugesPerDenomResponse.verify|verify} messages.
             * @param message ActiveGaugesPerDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IActiveGaugesPerDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ActiveGaugesPerDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ActiveGaugesPerDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.ActiveGaugesPerDenomResponse;

            /**
             * Decodes an ActiveGaugesPerDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ActiveGaugesPerDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.ActiveGaugesPerDenomResponse;

            /**
             * Verifies an ActiveGaugesPerDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ActiveGaugesPerDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ActiveGaugesPerDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.ActiveGaugesPerDenomResponse;

            /**
             * Creates a plain object from an ActiveGaugesPerDenomResponse message. Also converts values to other types if specified.
             * @param message ActiveGaugesPerDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.ActiveGaugesPerDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ActiveGaugesPerDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpcomingGaugesRequest. */
        interface IUpcomingGaugesRequest {

            /** UpcomingGaugesRequest pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
        }

        /** Represents an UpcomingGaugesRequest. */
        class UpcomingGaugesRequest implements IUpcomingGaugesRequest {

            /**
             * Constructs a new UpcomingGaugesRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IUpcomingGaugesRequest);

            /** UpcomingGaugesRequest pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

            /**
             * Encodes the specified UpcomingGaugesRequest message. Does not implicitly {@link osmosis.incentives.UpcomingGaugesRequest.verify|verify} messages.
             * @param message UpcomingGaugesRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IUpcomingGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpcomingGaugesRequest message, length delimited. Does not implicitly {@link osmosis.incentives.UpcomingGaugesRequest.verify|verify} messages.
             * @param message UpcomingGaugesRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IUpcomingGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpcomingGaugesRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpcomingGaugesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.UpcomingGaugesRequest;

            /**
             * Decodes an UpcomingGaugesRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpcomingGaugesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.UpcomingGaugesRequest;

            /**
             * Verifies an UpcomingGaugesRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpcomingGaugesRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpcomingGaugesRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.UpcomingGaugesRequest;

            /**
             * Creates a plain object from an UpcomingGaugesRequest message. Also converts values to other types if specified.
             * @param message UpcomingGaugesRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.UpcomingGaugesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpcomingGaugesRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpcomingGaugesResponse. */
        interface IUpcomingGaugesResponse {

            /** UpcomingGaugesResponse data */
            data?: (osmosis.incentives.IGauge[]|null);

            /** UpcomingGaugesResponse pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
        }

        /** Represents an UpcomingGaugesResponse. */
        class UpcomingGaugesResponse implements IUpcomingGaugesResponse {

            /**
             * Constructs a new UpcomingGaugesResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IUpcomingGaugesResponse);

            /** UpcomingGaugesResponse data. */
            public data: osmosis.incentives.IGauge[];

            /** UpcomingGaugesResponse pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

            /**
             * Encodes the specified UpcomingGaugesResponse message. Does not implicitly {@link osmosis.incentives.UpcomingGaugesResponse.verify|verify} messages.
             * @param message UpcomingGaugesResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IUpcomingGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpcomingGaugesResponse message, length delimited. Does not implicitly {@link osmosis.incentives.UpcomingGaugesResponse.verify|verify} messages.
             * @param message UpcomingGaugesResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IUpcomingGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpcomingGaugesResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpcomingGaugesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.UpcomingGaugesResponse;

            /**
             * Decodes an UpcomingGaugesResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpcomingGaugesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.UpcomingGaugesResponse;

            /**
             * Verifies an UpcomingGaugesResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpcomingGaugesResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpcomingGaugesResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.UpcomingGaugesResponse;

            /**
             * Creates a plain object from an UpcomingGaugesResponse message. Also converts values to other types if specified.
             * @param message UpcomingGaugesResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.UpcomingGaugesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpcomingGaugesResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpcomingGaugesPerDenomRequest. */
        interface IUpcomingGaugesPerDenomRequest {

            /** UpcomingGaugesPerDenomRequest denom */
            denom?: (string|null);

            /** UpcomingGaugesPerDenomRequest pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
        }

        /** Represents an UpcomingGaugesPerDenomRequest. */
        class UpcomingGaugesPerDenomRequest implements IUpcomingGaugesPerDenomRequest {

            /**
             * Constructs a new UpcomingGaugesPerDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IUpcomingGaugesPerDenomRequest);

            /** UpcomingGaugesPerDenomRequest denom. */
            public denom: string;

            /** UpcomingGaugesPerDenomRequest pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

            /**
             * Encodes the specified UpcomingGaugesPerDenomRequest message. Does not implicitly {@link osmosis.incentives.UpcomingGaugesPerDenomRequest.verify|verify} messages.
             * @param message UpcomingGaugesPerDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IUpcomingGaugesPerDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpcomingGaugesPerDenomRequest message, length delimited. Does not implicitly {@link osmosis.incentives.UpcomingGaugesPerDenomRequest.verify|verify} messages.
             * @param message UpcomingGaugesPerDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IUpcomingGaugesPerDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpcomingGaugesPerDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpcomingGaugesPerDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.UpcomingGaugesPerDenomRequest;

            /**
             * Decodes an UpcomingGaugesPerDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpcomingGaugesPerDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.UpcomingGaugesPerDenomRequest;

            /**
             * Verifies an UpcomingGaugesPerDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpcomingGaugesPerDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpcomingGaugesPerDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.UpcomingGaugesPerDenomRequest;

            /**
             * Creates a plain object from an UpcomingGaugesPerDenomRequest message. Also converts values to other types if specified.
             * @param message UpcomingGaugesPerDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.UpcomingGaugesPerDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpcomingGaugesPerDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpcomingGaugesPerDenomResponse. */
        interface IUpcomingGaugesPerDenomResponse {

            /** UpcomingGaugesPerDenomResponse upcoming_gauges */
            upcoming_gauges?: (osmosis.incentives.IGauge[]|null);

            /** UpcomingGaugesPerDenomResponse pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
        }

        /** Represents an UpcomingGaugesPerDenomResponse. */
        class UpcomingGaugesPerDenomResponse implements IUpcomingGaugesPerDenomResponse {

            /**
             * Constructs a new UpcomingGaugesPerDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IUpcomingGaugesPerDenomResponse);

            /** UpcomingGaugesPerDenomResponse upcoming_gauges. */
            public upcoming_gauges: osmosis.incentives.IGauge[];

            /** UpcomingGaugesPerDenomResponse pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

            /**
             * Encodes the specified UpcomingGaugesPerDenomResponse message. Does not implicitly {@link osmosis.incentives.UpcomingGaugesPerDenomResponse.verify|verify} messages.
             * @param message UpcomingGaugesPerDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IUpcomingGaugesPerDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpcomingGaugesPerDenomResponse message, length delimited. Does not implicitly {@link osmosis.incentives.UpcomingGaugesPerDenomResponse.verify|verify} messages.
             * @param message UpcomingGaugesPerDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IUpcomingGaugesPerDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpcomingGaugesPerDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpcomingGaugesPerDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.UpcomingGaugesPerDenomResponse;

            /**
             * Decodes an UpcomingGaugesPerDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpcomingGaugesPerDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.UpcomingGaugesPerDenomResponse;

            /**
             * Verifies an UpcomingGaugesPerDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpcomingGaugesPerDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpcomingGaugesPerDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.UpcomingGaugesPerDenomResponse;

            /**
             * Creates a plain object from an UpcomingGaugesPerDenomResponse message. Also converts values to other types if specified.
             * @param message UpcomingGaugesPerDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.UpcomingGaugesPerDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpcomingGaugesPerDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RewardsEstRequest. */
        interface IRewardsEstRequest {

            /** RewardsEstRequest owner */
            owner?: (string|null);

            /** RewardsEstRequest lock_ids */
            lock_ids?: (Long[]|null);

            /** RewardsEstRequest end_epoch */
            end_epoch?: (Long|null);
        }

        /** Represents a RewardsEstRequest. */
        class RewardsEstRequest implements IRewardsEstRequest {

            /**
             * Constructs a new RewardsEstRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IRewardsEstRequest);

            /** RewardsEstRequest owner. */
            public owner: string;

            /** RewardsEstRequest lock_ids. */
            public lock_ids: Long[];

            /** RewardsEstRequest end_epoch. */
            public end_epoch: Long;

            /**
             * Encodes the specified RewardsEstRequest message. Does not implicitly {@link osmosis.incentives.RewardsEstRequest.verify|verify} messages.
             * @param message RewardsEstRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IRewardsEstRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RewardsEstRequest message, length delimited. Does not implicitly {@link osmosis.incentives.RewardsEstRequest.verify|verify} messages.
             * @param message RewardsEstRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IRewardsEstRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RewardsEstRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RewardsEstRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.RewardsEstRequest;

            /**
             * Decodes a RewardsEstRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RewardsEstRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.RewardsEstRequest;

            /**
             * Verifies a RewardsEstRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RewardsEstRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RewardsEstRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.RewardsEstRequest;

            /**
             * Creates a plain object from a RewardsEstRequest message. Also converts values to other types if specified.
             * @param message RewardsEstRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.RewardsEstRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RewardsEstRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RewardsEstResponse. */
        interface IRewardsEstResponse {

            /** RewardsEstResponse coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a RewardsEstResponse. */
        class RewardsEstResponse implements IRewardsEstResponse {

            /**
             * Constructs a new RewardsEstResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IRewardsEstResponse);

            /** RewardsEstResponse coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified RewardsEstResponse message. Does not implicitly {@link osmosis.incentives.RewardsEstResponse.verify|verify} messages.
             * @param message RewardsEstResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IRewardsEstResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RewardsEstResponse message, length delimited. Does not implicitly {@link osmosis.incentives.RewardsEstResponse.verify|verify} messages.
             * @param message RewardsEstResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IRewardsEstResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RewardsEstResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RewardsEstResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.RewardsEstResponse;

            /**
             * Decodes a RewardsEstResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RewardsEstResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.RewardsEstResponse;

            /**
             * Verifies a RewardsEstResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RewardsEstResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RewardsEstResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.RewardsEstResponse;

            /**
             * Creates a plain object from a RewardsEstResponse message. Also converts values to other types if specified.
             * @param message RewardsEstResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.RewardsEstResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RewardsEstResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryLockableDurationsRequest. */
        interface IQueryLockableDurationsRequest {
        }

        /** Represents a QueryLockableDurationsRequest. */
        class QueryLockableDurationsRequest implements IQueryLockableDurationsRequest {

            /**
             * Constructs a new QueryLockableDurationsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IQueryLockableDurationsRequest);

            /**
             * Encodes the specified QueryLockableDurationsRequest message. Does not implicitly {@link osmosis.incentives.QueryLockableDurationsRequest.verify|verify} messages.
             * @param message QueryLockableDurationsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IQueryLockableDurationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryLockableDurationsRequest message, length delimited. Does not implicitly {@link osmosis.incentives.QueryLockableDurationsRequest.verify|verify} messages.
             * @param message QueryLockableDurationsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IQueryLockableDurationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryLockableDurationsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryLockableDurationsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.QueryLockableDurationsRequest;

            /**
             * Decodes a QueryLockableDurationsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryLockableDurationsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.QueryLockableDurationsRequest;

            /**
             * Verifies a QueryLockableDurationsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryLockableDurationsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryLockableDurationsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.QueryLockableDurationsRequest;

            /**
             * Creates a plain object from a QueryLockableDurationsRequest message. Also converts values to other types if specified.
             * @param message QueryLockableDurationsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.QueryLockableDurationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryLockableDurationsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryLockableDurationsResponse. */
        interface IQueryLockableDurationsResponse {

            /** QueryLockableDurationsResponse lockable_durations */
            lockable_durations?: (google.protobuf.IDuration[]|null);
        }

        /** Represents a QueryLockableDurationsResponse. */
        class QueryLockableDurationsResponse implements IQueryLockableDurationsResponse {

            /**
             * Constructs a new QueryLockableDurationsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IQueryLockableDurationsResponse);

            /** QueryLockableDurationsResponse lockable_durations. */
            public lockable_durations: google.protobuf.IDuration[];

            /**
             * Encodes the specified QueryLockableDurationsResponse message. Does not implicitly {@link osmosis.incentives.QueryLockableDurationsResponse.verify|verify} messages.
             * @param message QueryLockableDurationsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IQueryLockableDurationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryLockableDurationsResponse message, length delimited. Does not implicitly {@link osmosis.incentives.QueryLockableDurationsResponse.verify|verify} messages.
             * @param message QueryLockableDurationsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IQueryLockableDurationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryLockableDurationsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryLockableDurationsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.QueryLockableDurationsResponse;

            /**
             * Decodes a QueryLockableDurationsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryLockableDurationsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.QueryLockableDurationsResponse;

            /**
             * Verifies a QueryLockableDurationsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryLockableDurationsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryLockableDurationsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.QueryLockableDurationsResponse;

            /**
             * Creates a plain object from a QueryLockableDurationsResponse message. Also converts values to other types if specified.
             * @param message QueryLockableDurationsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.QueryLockableDurationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryLockableDurationsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GenesisState. */
        interface IGenesisState {

            /** GenesisState params */
            params?: (osmosis.incentives.IParams|null);

            /** GenesisState gauges */
            gauges?: (osmosis.incentives.IGauge[]|null);

            /** GenesisState lockable_durations */
            lockable_durations?: (google.protobuf.IDuration[]|null);

            /** GenesisState last_gauge_id */
            last_gauge_id?: (Long|null);
        }

        /** Represents a GenesisState. */
        class GenesisState implements IGenesisState {

            /**
             * Constructs a new GenesisState.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IGenesisState);

            /** GenesisState params. */
            public params?: (osmosis.incentives.IParams|null);

            /** GenesisState gauges. */
            public gauges: osmosis.incentives.IGauge[];

            /** GenesisState lockable_durations. */
            public lockable_durations: google.protobuf.IDuration[];

            /** GenesisState last_gauge_id. */
            public last_gauge_id: Long;

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.incentives.GenesisState.verify|verify} messages.
             * @param message GenesisState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.incentives.GenesisState.verify|verify} messages.
             * @param message GenesisState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.GenesisState;

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.GenesisState;

            /**
             * Verifies a GenesisState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GenesisState
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.GenesisState;

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @param message GenesisState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GenesisState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Params. */
        interface IParams {

            /** Params distr_epoch_identifier */
            distr_epoch_identifier?: (string|null);
        }

        /** Represents a Params. */
        class Params implements IParams {

            /**
             * Constructs a new Params.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.incentives.IParams);

            /** Params distr_epoch_identifier. */
            public distr_epoch_identifier: string;

            /**
             * Encodes the specified Params message. Does not implicitly {@link osmosis.incentives.Params.verify|verify} messages.
             * @param message Params message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.incentives.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.incentives.Params.verify|verify} messages.
             * @param message Params message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.incentives.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.incentives.Params;

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.incentives.Params;

            /**
             * Verifies a Params message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Params
             */
            public static fromObject(object: { [k: string]: any }): osmosis.incentives.Params;

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @param message Params
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.incentives.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Params to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace lockup. */
    namespace lockup {

        /** Properties of a PeriodLock. */
        interface IPeriodLock {

            /** PeriodLock ID */
            ID?: (Long|null);

            /** PeriodLock owner */
            owner?: (string|null);

            /** PeriodLock duration */
            duration?: (google.protobuf.IDuration|null);

            /** PeriodLock end_time */
            end_time?: (google.protobuf.ITimestamp|null);

            /** PeriodLock coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a PeriodLock. */
        class PeriodLock implements IPeriodLock {

            /**
             * Constructs a new PeriodLock.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IPeriodLock);

            /** PeriodLock ID. */
            public ID: Long;

            /** PeriodLock owner. */
            public owner: string;

            /** PeriodLock duration. */
            public duration?: (google.protobuf.IDuration|null);

            /** PeriodLock end_time. */
            public end_time?: (google.protobuf.ITimestamp|null);

            /** PeriodLock coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified PeriodLock message. Does not implicitly {@link osmosis.lockup.PeriodLock.verify|verify} messages.
             * @param message PeriodLock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IPeriodLock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PeriodLock message, length delimited. Does not implicitly {@link osmosis.lockup.PeriodLock.verify|verify} messages.
             * @param message PeriodLock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IPeriodLock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PeriodLock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PeriodLock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.PeriodLock;

            /**
             * Decodes a PeriodLock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PeriodLock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.PeriodLock;

            /**
             * Verifies a PeriodLock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PeriodLock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PeriodLock
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.PeriodLock;

            /**
             * Creates a plain object from a PeriodLock message. Also converts values to other types if specified.
             * @param message PeriodLock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.PeriodLock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PeriodLock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** LockQueryType enum. */
        enum LockQueryType {
            ByDuration = 0,
            ByTime = 1
        }

        /** Properties of a QueryCondition. */
        interface IQueryCondition {

            /** QueryCondition lock_query_type */
            lock_query_type?: (osmosis.lockup.LockQueryType|null);

            /** QueryCondition denom */
            denom?: (string|null);

            /** QueryCondition duration */
            duration?: (google.protobuf.IDuration|null);

            /** QueryCondition timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents a QueryCondition. */
        class QueryCondition implements IQueryCondition {

            /**
             * Constructs a new QueryCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IQueryCondition);

            /** QueryCondition lock_query_type. */
            public lock_query_type: osmosis.lockup.LockQueryType;

            /** QueryCondition denom. */
            public denom: string;

            /** QueryCondition duration. */
            public duration?: (google.protobuf.IDuration|null);

            /** QueryCondition timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified QueryCondition message. Does not implicitly {@link osmosis.lockup.QueryCondition.verify|verify} messages.
             * @param message QueryCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IQueryCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryCondition message, length delimited. Does not implicitly {@link osmosis.lockup.QueryCondition.verify|verify} messages.
             * @param message QueryCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IQueryCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.QueryCondition;

            /**
             * Decodes a QueryCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.QueryCondition;

            /**
             * Verifies a QueryCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryCondition
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.QueryCondition;

            /**
             * Creates a plain object from a QueryCondition message. Also converts values to other types if specified.
             * @param message QueryCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.QueryCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SyntheticLock. */
        interface ISyntheticLock {

            /** SyntheticLock underlying_lock_id */
            underlying_lock_id?: (Long|null);

            /** SyntheticLock synth_denom */
            synth_denom?: (string|null);

            /** SyntheticLock end_time */
            end_time?: (google.protobuf.ITimestamp|null);

            /** SyntheticLock duration */
            duration?: (google.protobuf.IDuration|null);
        }

        /** Represents a SyntheticLock. */
        class SyntheticLock implements ISyntheticLock {

            /**
             * Constructs a new SyntheticLock.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.ISyntheticLock);

            /** SyntheticLock underlying_lock_id. */
            public underlying_lock_id: Long;

            /** SyntheticLock synth_denom. */
            public synth_denom: string;

            /** SyntheticLock end_time. */
            public end_time?: (google.protobuf.ITimestamp|null);

            /** SyntheticLock duration. */
            public duration?: (google.protobuf.IDuration|null);

            /**
             * Encodes the specified SyntheticLock message. Does not implicitly {@link osmosis.lockup.SyntheticLock.verify|verify} messages.
             * @param message SyntheticLock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.ISyntheticLock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SyntheticLock message, length delimited. Does not implicitly {@link osmosis.lockup.SyntheticLock.verify|verify} messages.
             * @param message SyntheticLock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.ISyntheticLock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SyntheticLock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SyntheticLock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.SyntheticLock;

            /**
             * Decodes a SyntheticLock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SyntheticLock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.SyntheticLock;

            /**
             * Verifies a SyntheticLock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SyntheticLock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SyntheticLock
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.SyntheticLock;

            /**
             * Creates a plain object from a SyntheticLock message. Also converts values to other types if specified.
             * @param message SyntheticLock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.SyntheticLock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SyntheticLock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a Msg */
        class Msg extends $protobuf.rpc.Service {

            /**
             * Constructs a new Msg service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Calls LockTokens.
             * @param request MsgLockTokens message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgLockTokensResponse
             */
            public lockTokens(request: osmosis.lockup.IMsgLockTokens, callback: osmosis.lockup.Msg.LockTokensCallback): void;

            /**
             * Calls LockTokens.
             * @param request MsgLockTokens message or plain object
             * @returns Promise
             */
            public lockTokens(request: osmosis.lockup.IMsgLockTokens): Promise<osmosis.lockup.MsgLockTokensResponse>;

            /**
             * Calls BeginUnlockingAll.
             * @param request MsgBeginUnlockingAll message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgBeginUnlockingAllResponse
             */
            public beginUnlockingAll(request: osmosis.lockup.IMsgBeginUnlockingAll, callback: osmosis.lockup.Msg.BeginUnlockingAllCallback): void;

            /**
             * Calls BeginUnlockingAll.
             * @param request MsgBeginUnlockingAll message or plain object
             * @returns Promise
             */
            public beginUnlockingAll(request: osmosis.lockup.IMsgBeginUnlockingAll): Promise<osmosis.lockup.MsgBeginUnlockingAllResponse>;

            /**
             * Calls BeginUnlocking.
             * @param request MsgBeginUnlocking message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgBeginUnlockingResponse
             */
            public beginUnlocking(request: osmosis.lockup.IMsgBeginUnlocking, callback: osmosis.lockup.Msg.BeginUnlockingCallback): void;

            /**
             * Calls BeginUnlocking.
             * @param request MsgBeginUnlocking message or plain object
             * @returns Promise
             */
            public beginUnlocking(request: osmosis.lockup.IMsgBeginUnlocking): Promise<osmosis.lockup.MsgBeginUnlockingResponse>;

            /**
             * Calls ExtendLockup.
             * @param request MsgExtendLockup message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgExtendLockupResponse
             */
            public extendLockup(request: osmosis.lockup.IMsgExtendLockup, callback: osmosis.lockup.Msg.ExtendLockupCallback): void;

            /**
             * Calls ExtendLockup.
             * @param request MsgExtendLockup message or plain object
             * @returns Promise
             */
            public extendLockup(request: osmosis.lockup.IMsgExtendLockup): Promise<osmosis.lockup.MsgExtendLockupResponse>;

            /**
             * Calls ForceUnlock.
             * @param request MsgForceUnlock message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgForceUnlockResponse
             */
            public forceUnlock(request: osmosis.lockup.IMsgForceUnlock, callback: osmosis.lockup.Msg.ForceUnlockCallback): void;

            /**
             * Calls ForceUnlock.
             * @param request MsgForceUnlock message or plain object
             * @returns Promise
             */
            public forceUnlock(request: osmosis.lockup.IMsgForceUnlock): Promise<osmosis.lockup.MsgForceUnlockResponse>;
        }

        namespace Msg {

            /**
             * Callback as used by {@link osmosis.lockup.Msg#lockTokens}.
             * @param error Error, if any
             * @param [response] MsgLockTokensResponse
             */
            type LockTokensCallback = (error: (Error|null), response?: osmosis.lockup.MsgLockTokensResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Msg#beginUnlockingAll}.
             * @param error Error, if any
             * @param [response] MsgBeginUnlockingAllResponse
             */
            type BeginUnlockingAllCallback = (error: (Error|null), response?: osmosis.lockup.MsgBeginUnlockingAllResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Msg#beginUnlocking}.
             * @param error Error, if any
             * @param [response] MsgBeginUnlockingResponse
             */
            type BeginUnlockingCallback = (error: (Error|null), response?: osmosis.lockup.MsgBeginUnlockingResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Msg#extendLockup}.
             * @param error Error, if any
             * @param [response] MsgExtendLockupResponse
             */
            type ExtendLockupCallback = (error: (Error|null), response?: osmosis.lockup.MsgExtendLockupResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Msg#forceUnlock}.
             * @param error Error, if any
             * @param [response] MsgForceUnlockResponse
             */
            type ForceUnlockCallback = (error: (Error|null), response?: osmosis.lockup.MsgForceUnlockResponse) => void;
        }

        /** Properties of a MsgLockTokens. */
        interface IMsgLockTokens {

            /** MsgLockTokens owner */
            owner?: (string|null);

            /** MsgLockTokens duration */
            duration?: (google.protobuf.IDuration|null);

            /** MsgLockTokens coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a MsgLockTokens. */
        class MsgLockTokens implements IMsgLockTokens {

            /**
             * Constructs a new MsgLockTokens.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgLockTokens);

            /** MsgLockTokens owner. */
            public owner: string;

            /** MsgLockTokens duration. */
            public duration?: (google.protobuf.IDuration|null);

            /** MsgLockTokens coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified MsgLockTokens message. Does not implicitly {@link osmosis.lockup.MsgLockTokens.verify|verify} messages.
             * @param message MsgLockTokens message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgLockTokens, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgLockTokens message, length delimited. Does not implicitly {@link osmosis.lockup.MsgLockTokens.verify|verify} messages.
             * @param message MsgLockTokens message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgLockTokens, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgLockTokens message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgLockTokens
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgLockTokens;

            /**
             * Decodes a MsgLockTokens message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgLockTokens
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgLockTokens;

            /**
             * Verifies a MsgLockTokens message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgLockTokens message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgLockTokens
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgLockTokens;

            /**
             * Creates a plain object from a MsgLockTokens message. Also converts values to other types if specified.
             * @param message MsgLockTokens
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgLockTokens, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgLockTokens to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgLockTokensResponse. */
        interface IMsgLockTokensResponse {

            /** MsgLockTokensResponse ID */
            ID?: (Long|null);
        }

        /** Represents a MsgLockTokensResponse. */
        class MsgLockTokensResponse implements IMsgLockTokensResponse {

            /**
             * Constructs a new MsgLockTokensResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgLockTokensResponse);

            /** MsgLockTokensResponse ID. */
            public ID: Long;

            /**
             * Encodes the specified MsgLockTokensResponse message. Does not implicitly {@link osmosis.lockup.MsgLockTokensResponse.verify|verify} messages.
             * @param message MsgLockTokensResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgLockTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgLockTokensResponse message, length delimited. Does not implicitly {@link osmosis.lockup.MsgLockTokensResponse.verify|verify} messages.
             * @param message MsgLockTokensResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgLockTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgLockTokensResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgLockTokensResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgLockTokensResponse;

            /**
             * Decodes a MsgLockTokensResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgLockTokensResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgLockTokensResponse;

            /**
             * Verifies a MsgLockTokensResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgLockTokensResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgLockTokensResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgLockTokensResponse;

            /**
             * Creates a plain object from a MsgLockTokensResponse message. Also converts values to other types if specified.
             * @param message MsgLockTokensResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgLockTokensResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgLockTokensResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgBeginUnlockingAll. */
        interface IMsgBeginUnlockingAll {

            /** MsgBeginUnlockingAll owner */
            owner?: (string|null);
        }

        /** Represents a MsgBeginUnlockingAll. */
        class MsgBeginUnlockingAll implements IMsgBeginUnlockingAll {

            /**
             * Constructs a new MsgBeginUnlockingAll.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgBeginUnlockingAll);

            /** MsgBeginUnlockingAll owner. */
            public owner: string;

            /**
             * Encodes the specified MsgBeginUnlockingAll message. Does not implicitly {@link osmosis.lockup.MsgBeginUnlockingAll.verify|verify} messages.
             * @param message MsgBeginUnlockingAll message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgBeginUnlockingAll, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgBeginUnlockingAll message, length delimited. Does not implicitly {@link osmosis.lockup.MsgBeginUnlockingAll.verify|verify} messages.
             * @param message MsgBeginUnlockingAll message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgBeginUnlockingAll, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgBeginUnlockingAll message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBeginUnlockingAll
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgBeginUnlockingAll;

            /**
             * Decodes a MsgBeginUnlockingAll message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBeginUnlockingAll
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgBeginUnlockingAll;

            /**
             * Verifies a MsgBeginUnlockingAll message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBeginUnlockingAll message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBeginUnlockingAll
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgBeginUnlockingAll;

            /**
             * Creates a plain object from a MsgBeginUnlockingAll message. Also converts values to other types if specified.
             * @param message MsgBeginUnlockingAll
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgBeginUnlockingAll, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBeginUnlockingAll to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgBeginUnlockingAllResponse. */
        interface IMsgBeginUnlockingAllResponse {

            /** MsgBeginUnlockingAllResponse unlocks */
            unlocks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents a MsgBeginUnlockingAllResponse. */
        class MsgBeginUnlockingAllResponse implements IMsgBeginUnlockingAllResponse {

            /**
             * Constructs a new MsgBeginUnlockingAllResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgBeginUnlockingAllResponse);

            /** MsgBeginUnlockingAllResponse unlocks. */
            public unlocks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified MsgBeginUnlockingAllResponse message. Does not implicitly {@link osmosis.lockup.MsgBeginUnlockingAllResponse.verify|verify} messages.
             * @param message MsgBeginUnlockingAllResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgBeginUnlockingAllResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgBeginUnlockingAllResponse message, length delimited. Does not implicitly {@link osmosis.lockup.MsgBeginUnlockingAllResponse.verify|verify} messages.
             * @param message MsgBeginUnlockingAllResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgBeginUnlockingAllResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgBeginUnlockingAllResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBeginUnlockingAllResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgBeginUnlockingAllResponse;

            /**
             * Decodes a MsgBeginUnlockingAllResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBeginUnlockingAllResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgBeginUnlockingAllResponse;

            /**
             * Verifies a MsgBeginUnlockingAllResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBeginUnlockingAllResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBeginUnlockingAllResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgBeginUnlockingAllResponse;

            /**
             * Creates a plain object from a MsgBeginUnlockingAllResponse message. Also converts values to other types if specified.
             * @param message MsgBeginUnlockingAllResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgBeginUnlockingAllResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBeginUnlockingAllResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgBeginUnlocking. */
        interface IMsgBeginUnlocking {

            /** MsgBeginUnlocking owner */
            owner?: (string|null);

            /** MsgBeginUnlocking ID */
            ID?: (Long|null);

            /** MsgBeginUnlocking coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a MsgBeginUnlocking. */
        class MsgBeginUnlocking implements IMsgBeginUnlocking {

            /**
             * Constructs a new MsgBeginUnlocking.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgBeginUnlocking);

            /** MsgBeginUnlocking owner. */
            public owner: string;

            /** MsgBeginUnlocking ID. */
            public ID: Long;

            /** MsgBeginUnlocking coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified MsgBeginUnlocking message. Does not implicitly {@link osmosis.lockup.MsgBeginUnlocking.verify|verify} messages.
             * @param message MsgBeginUnlocking message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgBeginUnlocking, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgBeginUnlocking message, length delimited. Does not implicitly {@link osmosis.lockup.MsgBeginUnlocking.verify|verify} messages.
             * @param message MsgBeginUnlocking message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgBeginUnlocking, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgBeginUnlocking message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBeginUnlocking
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgBeginUnlocking;

            /**
             * Decodes a MsgBeginUnlocking message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBeginUnlocking
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgBeginUnlocking;

            /**
             * Verifies a MsgBeginUnlocking message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBeginUnlocking message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBeginUnlocking
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgBeginUnlocking;

            /**
             * Creates a plain object from a MsgBeginUnlocking message. Also converts values to other types if specified.
             * @param message MsgBeginUnlocking
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgBeginUnlocking, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBeginUnlocking to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgBeginUnlockingResponse. */
        interface IMsgBeginUnlockingResponse {

            /** MsgBeginUnlockingResponse success */
            success?: (boolean|null);
        }

        /** Represents a MsgBeginUnlockingResponse. */
        class MsgBeginUnlockingResponse implements IMsgBeginUnlockingResponse {

            /**
             * Constructs a new MsgBeginUnlockingResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgBeginUnlockingResponse);

            /** MsgBeginUnlockingResponse success. */
            public success: boolean;

            /**
             * Encodes the specified MsgBeginUnlockingResponse message. Does not implicitly {@link osmosis.lockup.MsgBeginUnlockingResponse.verify|verify} messages.
             * @param message MsgBeginUnlockingResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgBeginUnlockingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgBeginUnlockingResponse message, length delimited. Does not implicitly {@link osmosis.lockup.MsgBeginUnlockingResponse.verify|verify} messages.
             * @param message MsgBeginUnlockingResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgBeginUnlockingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgBeginUnlockingResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgBeginUnlockingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgBeginUnlockingResponse;

            /**
             * Decodes a MsgBeginUnlockingResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgBeginUnlockingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgBeginUnlockingResponse;

            /**
             * Verifies a MsgBeginUnlockingResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgBeginUnlockingResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgBeginUnlockingResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgBeginUnlockingResponse;

            /**
             * Creates a plain object from a MsgBeginUnlockingResponse message. Also converts values to other types if specified.
             * @param message MsgBeginUnlockingResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgBeginUnlockingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgBeginUnlockingResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgExtendLockup. */
        interface IMsgExtendLockup {

            /** MsgExtendLockup owner */
            owner?: (string|null);

            /** MsgExtendLockup ID */
            ID?: (Long|null);

            /** MsgExtendLockup duration */
            duration?: (google.protobuf.IDuration|null);
        }

        /** Represents a MsgExtendLockup. */
        class MsgExtendLockup implements IMsgExtendLockup {

            /**
             * Constructs a new MsgExtendLockup.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgExtendLockup);

            /** MsgExtendLockup owner. */
            public owner: string;

            /** MsgExtendLockup ID. */
            public ID: Long;

            /** MsgExtendLockup duration. */
            public duration?: (google.protobuf.IDuration|null);

            /**
             * Encodes the specified MsgExtendLockup message. Does not implicitly {@link osmosis.lockup.MsgExtendLockup.verify|verify} messages.
             * @param message MsgExtendLockup message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgExtendLockup, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgExtendLockup message, length delimited. Does not implicitly {@link osmosis.lockup.MsgExtendLockup.verify|verify} messages.
             * @param message MsgExtendLockup message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgExtendLockup, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgExtendLockup message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgExtendLockup
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgExtendLockup;

            /**
             * Decodes a MsgExtendLockup message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgExtendLockup
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgExtendLockup;

            /**
             * Verifies a MsgExtendLockup message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgExtendLockup message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgExtendLockup
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgExtendLockup;

            /**
             * Creates a plain object from a MsgExtendLockup message. Also converts values to other types if specified.
             * @param message MsgExtendLockup
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgExtendLockup, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgExtendLockup to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgExtendLockupResponse. */
        interface IMsgExtendLockupResponse {

            /** MsgExtendLockupResponse success */
            success?: (boolean|null);
        }

        /** Represents a MsgExtendLockupResponse. */
        class MsgExtendLockupResponse implements IMsgExtendLockupResponse {

            /**
             * Constructs a new MsgExtendLockupResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgExtendLockupResponse);

            /** MsgExtendLockupResponse success. */
            public success: boolean;

            /**
             * Encodes the specified MsgExtendLockupResponse message. Does not implicitly {@link osmosis.lockup.MsgExtendLockupResponse.verify|verify} messages.
             * @param message MsgExtendLockupResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgExtendLockupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgExtendLockupResponse message, length delimited. Does not implicitly {@link osmosis.lockup.MsgExtendLockupResponse.verify|verify} messages.
             * @param message MsgExtendLockupResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgExtendLockupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgExtendLockupResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgExtendLockupResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgExtendLockupResponse;

            /**
             * Decodes a MsgExtendLockupResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgExtendLockupResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgExtendLockupResponse;

            /**
             * Verifies a MsgExtendLockupResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgExtendLockupResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgExtendLockupResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgExtendLockupResponse;

            /**
             * Creates a plain object from a MsgExtendLockupResponse message. Also converts values to other types if specified.
             * @param message MsgExtendLockupResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgExtendLockupResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgExtendLockupResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgForceUnlock. */
        interface IMsgForceUnlock {

            /** MsgForceUnlock owner */
            owner?: (string|null);

            /** MsgForceUnlock ID */
            ID?: (Long|null);

            /** MsgForceUnlock coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a MsgForceUnlock. */
        class MsgForceUnlock implements IMsgForceUnlock {

            /**
             * Constructs a new MsgForceUnlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgForceUnlock);

            /** MsgForceUnlock owner. */
            public owner: string;

            /** MsgForceUnlock ID. */
            public ID: Long;

            /** MsgForceUnlock coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified MsgForceUnlock message. Does not implicitly {@link osmosis.lockup.MsgForceUnlock.verify|verify} messages.
             * @param message MsgForceUnlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgForceUnlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgForceUnlock message, length delimited. Does not implicitly {@link osmosis.lockup.MsgForceUnlock.verify|verify} messages.
             * @param message MsgForceUnlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgForceUnlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgForceUnlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgForceUnlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgForceUnlock;

            /**
             * Decodes a MsgForceUnlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgForceUnlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgForceUnlock;

            /**
             * Verifies a MsgForceUnlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgForceUnlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgForceUnlock
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgForceUnlock;

            /**
             * Creates a plain object from a MsgForceUnlock message. Also converts values to other types if specified.
             * @param message MsgForceUnlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgForceUnlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgForceUnlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgForceUnlockResponse. */
        interface IMsgForceUnlockResponse {

            /** MsgForceUnlockResponse success */
            success?: (boolean|null);
        }

        /** Represents a MsgForceUnlockResponse. */
        class MsgForceUnlockResponse implements IMsgForceUnlockResponse {

            /**
             * Constructs a new MsgForceUnlockResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IMsgForceUnlockResponse);

            /** MsgForceUnlockResponse success. */
            public success: boolean;

            /**
             * Encodes the specified MsgForceUnlockResponse message. Does not implicitly {@link osmosis.lockup.MsgForceUnlockResponse.verify|verify} messages.
             * @param message MsgForceUnlockResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IMsgForceUnlockResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgForceUnlockResponse message, length delimited. Does not implicitly {@link osmosis.lockup.MsgForceUnlockResponse.verify|verify} messages.
             * @param message MsgForceUnlockResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IMsgForceUnlockResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgForceUnlockResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgForceUnlockResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.MsgForceUnlockResponse;

            /**
             * Decodes a MsgForceUnlockResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgForceUnlockResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.MsgForceUnlockResponse;

            /**
             * Verifies a MsgForceUnlockResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgForceUnlockResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgForceUnlockResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.MsgForceUnlockResponse;

            /**
             * Creates a plain object from a MsgForceUnlockResponse message. Also converts values to other types if specified.
             * @param message MsgForceUnlockResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.MsgForceUnlockResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgForceUnlockResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a Query */
        class Query extends $protobuf.rpc.Service {

            /**
             * Constructs a new Query service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Calls ModuleBalance.
             * @param request ModuleBalanceRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and ModuleBalanceResponse
             */
            public moduleBalance(request: osmosis.lockup.IModuleBalanceRequest, callback: osmosis.lockup.Query.ModuleBalanceCallback): void;

            /**
             * Calls ModuleBalance.
             * @param request ModuleBalanceRequest message or plain object
             * @returns Promise
             */
            public moduleBalance(request: osmosis.lockup.IModuleBalanceRequest): Promise<osmosis.lockup.ModuleBalanceResponse>;

            /**
             * Calls ModuleLockedAmount.
             * @param request ModuleLockedAmountRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and ModuleLockedAmountResponse
             */
            public moduleLockedAmount(request: osmosis.lockup.IModuleLockedAmountRequest, callback: osmosis.lockup.Query.ModuleLockedAmountCallback): void;

            /**
             * Calls ModuleLockedAmount.
             * @param request ModuleLockedAmountRequest message or plain object
             * @returns Promise
             */
            public moduleLockedAmount(request: osmosis.lockup.IModuleLockedAmountRequest): Promise<osmosis.lockup.ModuleLockedAmountResponse>;

            /**
             * Calls AccountUnlockableCoins.
             * @param request AccountUnlockableCoinsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountUnlockableCoinsResponse
             */
            public accountUnlockableCoins(request: osmosis.lockup.IAccountUnlockableCoinsRequest, callback: osmosis.lockup.Query.AccountUnlockableCoinsCallback): void;

            /**
             * Calls AccountUnlockableCoins.
             * @param request AccountUnlockableCoinsRequest message or plain object
             * @returns Promise
             */
            public accountUnlockableCoins(request: osmosis.lockup.IAccountUnlockableCoinsRequest): Promise<osmosis.lockup.AccountUnlockableCoinsResponse>;

            /**
             * Calls AccountUnlockingCoins.
             * @param request AccountUnlockingCoinsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountUnlockingCoinsResponse
             */
            public accountUnlockingCoins(request: osmosis.lockup.IAccountUnlockingCoinsRequest, callback: osmosis.lockup.Query.AccountUnlockingCoinsCallback): void;

            /**
             * Calls AccountUnlockingCoins.
             * @param request AccountUnlockingCoinsRequest message or plain object
             * @returns Promise
             */
            public accountUnlockingCoins(request: osmosis.lockup.IAccountUnlockingCoinsRequest): Promise<osmosis.lockup.AccountUnlockingCoinsResponse>;

            /**
             * Calls AccountLockedCoins.
             * @param request AccountLockedCoinsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedCoinsResponse
             */
            public accountLockedCoins(request: osmosis.lockup.IAccountLockedCoinsRequest, callback: osmosis.lockup.Query.AccountLockedCoinsCallback): void;

            /**
             * Calls AccountLockedCoins.
             * @param request AccountLockedCoinsRequest message or plain object
             * @returns Promise
             */
            public accountLockedCoins(request: osmosis.lockup.IAccountLockedCoinsRequest): Promise<osmosis.lockup.AccountLockedCoinsResponse>;

            /**
             * Calls AccountLockedPastTime.
             * @param request AccountLockedPastTimeRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedPastTimeResponse
             */
            public accountLockedPastTime(request: osmosis.lockup.IAccountLockedPastTimeRequest, callback: osmosis.lockup.Query.AccountLockedPastTimeCallback): void;

            /**
             * Calls AccountLockedPastTime.
             * @param request AccountLockedPastTimeRequest message or plain object
             * @returns Promise
             */
            public accountLockedPastTime(request: osmosis.lockup.IAccountLockedPastTimeRequest): Promise<osmosis.lockup.AccountLockedPastTimeResponse>;

            /**
             * Calls AccountLockedPastTimeNotUnlockingOnly.
             * @param request AccountLockedPastTimeNotUnlockingOnlyRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedPastTimeNotUnlockingOnlyResponse
             */
            public accountLockedPastTimeNotUnlockingOnly(request: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyRequest, callback: osmosis.lockup.Query.AccountLockedPastTimeNotUnlockingOnlyCallback): void;

            /**
             * Calls AccountLockedPastTimeNotUnlockingOnly.
             * @param request AccountLockedPastTimeNotUnlockingOnlyRequest message or plain object
             * @returns Promise
             */
            public accountLockedPastTimeNotUnlockingOnly(request: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyRequest): Promise<osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse>;

            /**
             * Calls AccountUnlockedBeforeTime.
             * @param request AccountUnlockedBeforeTimeRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountUnlockedBeforeTimeResponse
             */
            public accountUnlockedBeforeTime(request: osmosis.lockup.IAccountUnlockedBeforeTimeRequest, callback: osmosis.lockup.Query.AccountUnlockedBeforeTimeCallback): void;

            /**
             * Calls AccountUnlockedBeforeTime.
             * @param request AccountUnlockedBeforeTimeRequest message or plain object
             * @returns Promise
             */
            public accountUnlockedBeforeTime(request: osmosis.lockup.IAccountUnlockedBeforeTimeRequest): Promise<osmosis.lockup.AccountUnlockedBeforeTimeResponse>;

            /**
             * Calls AccountLockedPastTimeDenom.
             * @param request AccountLockedPastTimeDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedPastTimeDenomResponse
             */
            public accountLockedPastTimeDenom(request: osmosis.lockup.IAccountLockedPastTimeDenomRequest, callback: osmosis.lockup.Query.AccountLockedPastTimeDenomCallback): void;

            /**
             * Calls AccountLockedPastTimeDenom.
             * @param request AccountLockedPastTimeDenomRequest message or plain object
             * @returns Promise
             */
            public accountLockedPastTimeDenom(request: osmosis.lockup.IAccountLockedPastTimeDenomRequest): Promise<osmosis.lockup.AccountLockedPastTimeDenomResponse>;

            /**
             * Calls LockedDenom.
             * @param request LockedDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and LockedDenomResponse
             */
            public lockedDenom(request: osmosis.lockup.ILockedDenomRequest, callback: osmosis.lockup.Query.LockedDenomCallback): void;

            /**
             * Calls LockedDenom.
             * @param request LockedDenomRequest message or plain object
             * @returns Promise
             */
            public lockedDenom(request: osmosis.lockup.ILockedDenomRequest): Promise<osmosis.lockup.LockedDenomResponse>;

            /**
             * Calls LockedByID.
             * @param request LockedRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and LockedResponse
             */
            public lockedByID(request: osmosis.lockup.ILockedRequest, callback: osmosis.lockup.Query.LockedByIDCallback): void;

            /**
             * Calls LockedByID.
             * @param request LockedRequest message or plain object
             * @returns Promise
             */
            public lockedByID(request: osmosis.lockup.ILockedRequest): Promise<osmosis.lockup.LockedResponse>;

            /**
             * Calls SyntheticLockupsByLockupID.
             * @param request SyntheticLockupsByLockupIDRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and SyntheticLockupsByLockupIDResponse
             */
            public syntheticLockupsByLockupID(request: osmosis.lockup.ISyntheticLockupsByLockupIDRequest, callback: osmosis.lockup.Query.SyntheticLockupsByLockupIDCallback): void;

            /**
             * Calls SyntheticLockupsByLockupID.
             * @param request SyntheticLockupsByLockupIDRequest message or plain object
             * @returns Promise
             */
            public syntheticLockupsByLockupID(request: osmosis.lockup.ISyntheticLockupsByLockupIDRequest): Promise<osmosis.lockup.SyntheticLockupsByLockupIDResponse>;

            /**
             * Calls AccountLockedLongerDuration.
             * @param request AccountLockedLongerDurationRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedLongerDurationResponse
             */
            public accountLockedLongerDuration(request: osmosis.lockup.IAccountLockedLongerDurationRequest, callback: osmosis.lockup.Query.AccountLockedLongerDurationCallback): void;

            /**
             * Calls AccountLockedLongerDuration.
             * @param request AccountLockedLongerDurationRequest message or plain object
             * @returns Promise
             */
            public accountLockedLongerDuration(request: osmosis.lockup.IAccountLockedLongerDurationRequest): Promise<osmosis.lockup.AccountLockedLongerDurationResponse>;

            /**
             * Calls AccountLockedDuration.
             * @param request AccountLockedDurationRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedDurationResponse
             */
            public accountLockedDuration(request: osmosis.lockup.IAccountLockedDurationRequest, callback: osmosis.lockup.Query.AccountLockedDurationCallback): void;

            /**
             * Calls AccountLockedDuration.
             * @param request AccountLockedDurationRequest message or plain object
             * @returns Promise
             */
            public accountLockedDuration(request: osmosis.lockup.IAccountLockedDurationRequest): Promise<osmosis.lockup.AccountLockedDurationResponse>;

            /**
             * Calls AccountLockedLongerDurationNotUnlockingOnly.
             * @param request AccountLockedLongerDurationNotUnlockingOnlyRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedLongerDurationNotUnlockingOnlyResponse
             */
            public accountLockedLongerDurationNotUnlockingOnly(request: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyRequest, callback: osmosis.lockup.Query.AccountLockedLongerDurationNotUnlockingOnlyCallback): void;

            /**
             * Calls AccountLockedLongerDurationNotUnlockingOnly.
             * @param request AccountLockedLongerDurationNotUnlockingOnlyRequest message or plain object
             * @returns Promise
             */
            public accountLockedLongerDurationNotUnlockingOnly(request: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyRequest): Promise<osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse>;

            /**
             * Calls AccountLockedLongerDurationDenom.
             * @param request AccountLockedLongerDurationDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AccountLockedLongerDurationDenomResponse
             */
            public accountLockedLongerDurationDenom(request: osmosis.lockup.IAccountLockedLongerDurationDenomRequest, callback: osmosis.lockup.Query.AccountLockedLongerDurationDenomCallback): void;

            /**
             * Calls AccountLockedLongerDurationDenom.
             * @param request AccountLockedLongerDurationDenomRequest message or plain object
             * @returns Promise
             */
            public accountLockedLongerDurationDenom(request: osmosis.lockup.IAccountLockedLongerDurationDenomRequest): Promise<osmosis.lockup.AccountLockedLongerDurationDenomResponse>;

            /**
             * Calls Params.
             * @param request QueryParamsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
             */
            public params(request: osmosis.lockup.IQueryParamsRequest, callback: osmosis.lockup.Query.ParamsCallback): void;

            /**
             * Calls Params.
             * @param request QueryParamsRequest message or plain object
             * @returns Promise
             */
            public params(request: osmosis.lockup.IQueryParamsRequest): Promise<osmosis.lockup.QueryParamsResponse>;
        }

        namespace Query {

            /**
             * Callback as used by {@link osmosis.lockup.Query#moduleBalance}.
             * @param error Error, if any
             * @param [response] ModuleBalanceResponse
             */
            type ModuleBalanceCallback = (error: (Error|null), response?: osmosis.lockup.ModuleBalanceResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#moduleLockedAmount}.
             * @param error Error, if any
             * @param [response] ModuleLockedAmountResponse
             */
            type ModuleLockedAmountCallback = (error: (Error|null), response?: osmosis.lockup.ModuleLockedAmountResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountUnlockableCoins}.
             * @param error Error, if any
             * @param [response] AccountUnlockableCoinsResponse
             */
            type AccountUnlockableCoinsCallback = (error: (Error|null), response?: osmosis.lockup.AccountUnlockableCoinsResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountUnlockingCoins}.
             * @param error Error, if any
             * @param [response] AccountUnlockingCoinsResponse
             */
            type AccountUnlockingCoinsCallback = (error: (Error|null), response?: osmosis.lockup.AccountUnlockingCoinsResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedCoins}.
             * @param error Error, if any
             * @param [response] AccountLockedCoinsResponse
             */
            type AccountLockedCoinsCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedCoinsResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedPastTime}.
             * @param error Error, if any
             * @param [response] AccountLockedPastTimeResponse
             */
            type AccountLockedPastTimeCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedPastTimeResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedPastTimeNotUnlockingOnly}.
             * @param error Error, if any
             * @param [response] AccountLockedPastTimeNotUnlockingOnlyResponse
             */
            type AccountLockedPastTimeNotUnlockingOnlyCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountUnlockedBeforeTime}.
             * @param error Error, if any
             * @param [response] AccountUnlockedBeforeTimeResponse
             */
            type AccountUnlockedBeforeTimeCallback = (error: (Error|null), response?: osmosis.lockup.AccountUnlockedBeforeTimeResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedPastTimeDenom}.
             * @param error Error, if any
             * @param [response] AccountLockedPastTimeDenomResponse
             */
            type AccountLockedPastTimeDenomCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedPastTimeDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#lockedDenom}.
             * @param error Error, if any
             * @param [response] LockedDenomResponse
             */
            type LockedDenomCallback = (error: (Error|null), response?: osmosis.lockup.LockedDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#lockedByID}.
             * @param error Error, if any
             * @param [response] LockedResponse
             */
            type LockedByIDCallback = (error: (Error|null), response?: osmosis.lockup.LockedResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#syntheticLockupsByLockupID}.
             * @param error Error, if any
             * @param [response] SyntheticLockupsByLockupIDResponse
             */
            type SyntheticLockupsByLockupIDCallback = (error: (Error|null), response?: osmosis.lockup.SyntheticLockupsByLockupIDResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedLongerDuration}.
             * @param error Error, if any
             * @param [response] AccountLockedLongerDurationResponse
             */
            type AccountLockedLongerDurationCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedLongerDurationResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedDuration}.
             * @param error Error, if any
             * @param [response] AccountLockedDurationResponse
             */
            type AccountLockedDurationCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedDurationResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedLongerDurationNotUnlockingOnly}.
             * @param error Error, if any
             * @param [response] AccountLockedLongerDurationNotUnlockingOnlyResponse
             */
            type AccountLockedLongerDurationNotUnlockingOnlyCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#accountLockedLongerDurationDenom}.
             * @param error Error, if any
             * @param [response] AccountLockedLongerDurationDenomResponse
             */
            type AccountLockedLongerDurationDenomCallback = (error: (Error|null), response?: osmosis.lockup.AccountLockedLongerDurationDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.lockup.Query#params}.
             * @param error Error, if any
             * @param [response] QueryParamsResponse
             */
            type ParamsCallback = (error: (Error|null), response?: osmosis.lockup.QueryParamsResponse) => void;
        }

        /** Properties of a ModuleBalanceRequest. */
        interface IModuleBalanceRequest {
        }

        /** Represents a ModuleBalanceRequest. */
        class ModuleBalanceRequest implements IModuleBalanceRequest {

            /**
             * Constructs a new ModuleBalanceRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IModuleBalanceRequest);

            /**
             * Encodes the specified ModuleBalanceRequest message. Does not implicitly {@link osmosis.lockup.ModuleBalanceRequest.verify|verify} messages.
             * @param message ModuleBalanceRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IModuleBalanceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ModuleBalanceRequest message, length delimited. Does not implicitly {@link osmosis.lockup.ModuleBalanceRequest.verify|verify} messages.
             * @param message ModuleBalanceRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IModuleBalanceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ModuleBalanceRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ModuleBalanceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.ModuleBalanceRequest;

            /**
             * Decodes a ModuleBalanceRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ModuleBalanceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.ModuleBalanceRequest;

            /**
             * Verifies a ModuleBalanceRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ModuleBalanceRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ModuleBalanceRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.ModuleBalanceRequest;

            /**
             * Creates a plain object from a ModuleBalanceRequest message. Also converts values to other types if specified.
             * @param message ModuleBalanceRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.ModuleBalanceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ModuleBalanceRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ModuleBalanceResponse. */
        interface IModuleBalanceResponse {

            /** ModuleBalanceResponse coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a ModuleBalanceResponse. */
        class ModuleBalanceResponse implements IModuleBalanceResponse {

            /**
             * Constructs a new ModuleBalanceResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IModuleBalanceResponse);

            /** ModuleBalanceResponse coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified ModuleBalanceResponse message. Does not implicitly {@link osmosis.lockup.ModuleBalanceResponse.verify|verify} messages.
             * @param message ModuleBalanceResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IModuleBalanceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ModuleBalanceResponse message, length delimited. Does not implicitly {@link osmosis.lockup.ModuleBalanceResponse.verify|verify} messages.
             * @param message ModuleBalanceResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IModuleBalanceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ModuleBalanceResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ModuleBalanceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.ModuleBalanceResponse;

            /**
             * Decodes a ModuleBalanceResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ModuleBalanceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.ModuleBalanceResponse;

            /**
             * Verifies a ModuleBalanceResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ModuleBalanceResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ModuleBalanceResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.ModuleBalanceResponse;

            /**
             * Creates a plain object from a ModuleBalanceResponse message. Also converts values to other types if specified.
             * @param message ModuleBalanceResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.ModuleBalanceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ModuleBalanceResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ModuleLockedAmountRequest. */
        interface IModuleLockedAmountRequest {
        }

        /** Represents a ModuleLockedAmountRequest. */
        class ModuleLockedAmountRequest implements IModuleLockedAmountRequest {

            /**
             * Constructs a new ModuleLockedAmountRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IModuleLockedAmountRequest);

            /**
             * Encodes the specified ModuleLockedAmountRequest message. Does not implicitly {@link osmosis.lockup.ModuleLockedAmountRequest.verify|verify} messages.
             * @param message ModuleLockedAmountRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IModuleLockedAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ModuleLockedAmountRequest message, length delimited. Does not implicitly {@link osmosis.lockup.ModuleLockedAmountRequest.verify|verify} messages.
             * @param message ModuleLockedAmountRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IModuleLockedAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ModuleLockedAmountRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ModuleLockedAmountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.ModuleLockedAmountRequest;

            /**
             * Decodes a ModuleLockedAmountRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ModuleLockedAmountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.ModuleLockedAmountRequest;

            /**
             * Verifies a ModuleLockedAmountRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ModuleLockedAmountRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ModuleLockedAmountRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.ModuleLockedAmountRequest;

            /**
             * Creates a plain object from a ModuleLockedAmountRequest message. Also converts values to other types if specified.
             * @param message ModuleLockedAmountRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.ModuleLockedAmountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ModuleLockedAmountRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ModuleLockedAmountResponse. */
        interface IModuleLockedAmountResponse {

            /** ModuleLockedAmountResponse coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a ModuleLockedAmountResponse. */
        class ModuleLockedAmountResponse implements IModuleLockedAmountResponse {

            /**
             * Constructs a new ModuleLockedAmountResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IModuleLockedAmountResponse);

            /** ModuleLockedAmountResponse coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified ModuleLockedAmountResponse message. Does not implicitly {@link osmosis.lockup.ModuleLockedAmountResponse.verify|verify} messages.
             * @param message ModuleLockedAmountResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IModuleLockedAmountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ModuleLockedAmountResponse message, length delimited. Does not implicitly {@link osmosis.lockup.ModuleLockedAmountResponse.verify|verify} messages.
             * @param message ModuleLockedAmountResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IModuleLockedAmountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ModuleLockedAmountResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ModuleLockedAmountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.ModuleLockedAmountResponse;

            /**
             * Decodes a ModuleLockedAmountResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ModuleLockedAmountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.ModuleLockedAmountResponse;

            /**
             * Verifies a ModuleLockedAmountResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ModuleLockedAmountResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ModuleLockedAmountResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.ModuleLockedAmountResponse;

            /**
             * Creates a plain object from a ModuleLockedAmountResponse message. Also converts values to other types if specified.
             * @param message ModuleLockedAmountResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.ModuleLockedAmountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ModuleLockedAmountResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountUnlockableCoinsRequest. */
        interface IAccountUnlockableCoinsRequest {

            /** AccountUnlockableCoinsRequest owner */
            owner?: (string|null);
        }

        /** Represents an AccountUnlockableCoinsRequest. */
        class AccountUnlockableCoinsRequest implements IAccountUnlockableCoinsRequest {

            /**
             * Constructs a new AccountUnlockableCoinsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountUnlockableCoinsRequest);

            /** AccountUnlockableCoinsRequest owner. */
            public owner: string;

            /**
             * Encodes the specified AccountUnlockableCoinsRequest message. Does not implicitly {@link osmosis.lockup.AccountUnlockableCoinsRequest.verify|verify} messages.
             * @param message AccountUnlockableCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountUnlockableCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountUnlockableCoinsRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountUnlockableCoinsRequest.verify|verify} messages.
             * @param message AccountUnlockableCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountUnlockableCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountUnlockableCoinsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountUnlockableCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountUnlockableCoinsRequest;

            /**
             * Decodes an AccountUnlockableCoinsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountUnlockableCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountUnlockableCoinsRequest;

            /**
             * Verifies an AccountUnlockableCoinsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountUnlockableCoinsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountUnlockableCoinsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountUnlockableCoinsRequest;

            /**
             * Creates a plain object from an AccountUnlockableCoinsRequest message. Also converts values to other types if specified.
             * @param message AccountUnlockableCoinsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountUnlockableCoinsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountUnlockableCoinsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountUnlockableCoinsResponse. */
        interface IAccountUnlockableCoinsResponse {

            /** AccountUnlockableCoinsResponse coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents an AccountUnlockableCoinsResponse. */
        class AccountUnlockableCoinsResponse implements IAccountUnlockableCoinsResponse {

            /**
             * Constructs a new AccountUnlockableCoinsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountUnlockableCoinsResponse);

            /** AccountUnlockableCoinsResponse coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified AccountUnlockableCoinsResponse message. Does not implicitly {@link osmosis.lockup.AccountUnlockableCoinsResponse.verify|verify} messages.
             * @param message AccountUnlockableCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountUnlockableCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountUnlockableCoinsResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountUnlockableCoinsResponse.verify|verify} messages.
             * @param message AccountUnlockableCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountUnlockableCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountUnlockableCoinsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountUnlockableCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountUnlockableCoinsResponse;

            /**
             * Decodes an AccountUnlockableCoinsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountUnlockableCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountUnlockableCoinsResponse;

            /**
             * Verifies an AccountUnlockableCoinsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountUnlockableCoinsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountUnlockableCoinsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountUnlockableCoinsResponse;

            /**
             * Creates a plain object from an AccountUnlockableCoinsResponse message. Also converts values to other types if specified.
             * @param message AccountUnlockableCoinsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountUnlockableCoinsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountUnlockableCoinsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountUnlockingCoinsRequest. */
        interface IAccountUnlockingCoinsRequest {

            /** AccountUnlockingCoinsRequest owner */
            owner?: (string|null);
        }

        /** Represents an AccountUnlockingCoinsRequest. */
        class AccountUnlockingCoinsRequest implements IAccountUnlockingCoinsRequest {

            /**
             * Constructs a new AccountUnlockingCoinsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountUnlockingCoinsRequest);

            /** AccountUnlockingCoinsRequest owner. */
            public owner: string;

            /**
             * Encodes the specified AccountUnlockingCoinsRequest message. Does not implicitly {@link osmosis.lockup.AccountUnlockingCoinsRequest.verify|verify} messages.
             * @param message AccountUnlockingCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountUnlockingCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountUnlockingCoinsRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountUnlockingCoinsRequest.verify|verify} messages.
             * @param message AccountUnlockingCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountUnlockingCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountUnlockingCoinsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountUnlockingCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountUnlockingCoinsRequest;

            /**
             * Decodes an AccountUnlockingCoinsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountUnlockingCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountUnlockingCoinsRequest;

            /**
             * Verifies an AccountUnlockingCoinsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountUnlockingCoinsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountUnlockingCoinsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountUnlockingCoinsRequest;

            /**
             * Creates a plain object from an AccountUnlockingCoinsRequest message. Also converts values to other types if specified.
             * @param message AccountUnlockingCoinsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountUnlockingCoinsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountUnlockingCoinsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountUnlockingCoinsResponse. */
        interface IAccountUnlockingCoinsResponse {

            /** AccountUnlockingCoinsResponse coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents an AccountUnlockingCoinsResponse. */
        class AccountUnlockingCoinsResponse implements IAccountUnlockingCoinsResponse {

            /**
             * Constructs a new AccountUnlockingCoinsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountUnlockingCoinsResponse);

            /** AccountUnlockingCoinsResponse coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified AccountUnlockingCoinsResponse message. Does not implicitly {@link osmosis.lockup.AccountUnlockingCoinsResponse.verify|verify} messages.
             * @param message AccountUnlockingCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountUnlockingCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountUnlockingCoinsResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountUnlockingCoinsResponse.verify|verify} messages.
             * @param message AccountUnlockingCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountUnlockingCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountUnlockingCoinsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountUnlockingCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountUnlockingCoinsResponse;

            /**
             * Decodes an AccountUnlockingCoinsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountUnlockingCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountUnlockingCoinsResponse;

            /**
             * Verifies an AccountUnlockingCoinsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountUnlockingCoinsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountUnlockingCoinsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountUnlockingCoinsResponse;

            /**
             * Creates a plain object from an AccountUnlockingCoinsResponse message. Also converts values to other types if specified.
             * @param message AccountUnlockingCoinsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountUnlockingCoinsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountUnlockingCoinsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedCoinsRequest. */
        interface IAccountLockedCoinsRequest {

            /** AccountLockedCoinsRequest owner */
            owner?: (string|null);
        }

        /** Represents an AccountLockedCoinsRequest. */
        class AccountLockedCoinsRequest implements IAccountLockedCoinsRequest {

            /**
             * Constructs a new AccountLockedCoinsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedCoinsRequest);

            /** AccountLockedCoinsRequest owner. */
            public owner: string;

            /**
             * Encodes the specified AccountLockedCoinsRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedCoinsRequest.verify|verify} messages.
             * @param message AccountLockedCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedCoinsRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedCoinsRequest.verify|verify} messages.
             * @param message AccountLockedCoinsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedCoinsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedCoinsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedCoinsRequest;

            /**
             * Decodes an AccountLockedCoinsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedCoinsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedCoinsRequest;

            /**
             * Verifies an AccountLockedCoinsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedCoinsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedCoinsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedCoinsRequest;

            /**
             * Creates a plain object from an AccountLockedCoinsRequest message. Also converts values to other types if specified.
             * @param message AccountLockedCoinsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedCoinsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedCoinsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedCoinsResponse. */
        interface IAccountLockedCoinsResponse {

            /** AccountLockedCoinsResponse coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents an AccountLockedCoinsResponse. */
        class AccountLockedCoinsResponse implements IAccountLockedCoinsResponse {

            /**
             * Constructs a new AccountLockedCoinsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedCoinsResponse);

            /** AccountLockedCoinsResponse coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified AccountLockedCoinsResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedCoinsResponse.verify|verify} messages.
             * @param message AccountLockedCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedCoinsResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedCoinsResponse.verify|verify} messages.
             * @param message AccountLockedCoinsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedCoinsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedCoinsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedCoinsResponse;

            /**
             * Decodes an AccountLockedCoinsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedCoinsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedCoinsResponse;

            /**
             * Verifies an AccountLockedCoinsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedCoinsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedCoinsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedCoinsResponse;

            /**
             * Creates a plain object from an AccountLockedCoinsResponse message. Also converts values to other types if specified.
             * @param message AccountLockedCoinsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedCoinsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedCoinsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedPastTimeRequest. */
        interface IAccountLockedPastTimeRequest {

            /** AccountLockedPastTimeRequest owner */
            owner?: (string|null);

            /** AccountLockedPastTimeRequest timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents an AccountLockedPastTimeRequest. */
        class AccountLockedPastTimeRequest implements IAccountLockedPastTimeRequest {

            /**
             * Constructs a new AccountLockedPastTimeRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedPastTimeRequest);

            /** AccountLockedPastTimeRequest owner. */
            public owner: string;

            /** AccountLockedPastTimeRequest timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified AccountLockedPastTimeRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeRequest.verify|verify} messages.
             * @param message AccountLockedPastTimeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedPastTimeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedPastTimeRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeRequest.verify|verify} messages.
             * @param message AccountLockedPastTimeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedPastTimeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedPastTimeRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedPastTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedPastTimeRequest;

            /**
             * Decodes an AccountLockedPastTimeRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedPastTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedPastTimeRequest;

            /**
             * Verifies an AccountLockedPastTimeRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedPastTimeRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedPastTimeRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedPastTimeRequest;

            /**
             * Creates a plain object from an AccountLockedPastTimeRequest message. Also converts values to other types if specified.
             * @param message AccountLockedPastTimeRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedPastTimeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedPastTimeRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedPastTimeResponse. */
        interface IAccountLockedPastTimeResponse {

            /** AccountLockedPastTimeResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountLockedPastTimeResponse. */
        class AccountLockedPastTimeResponse implements IAccountLockedPastTimeResponse {

            /**
             * Constructs a new AccountLockedPastTimeResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedPastTimeResponse);

            /** AccountLockedPastTimeResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountLockedPastTimeResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeResponse.verify|verify} messages.
             * @param message AccountLockedPastTimeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedPastTimeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedPastTimeResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeResponse.verify|verify} messages.
             * @param message AccountLockedPastTimeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedPastTimeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedPastTimeResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedPastTimeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedPastTimeResponse;

            /**
             * Decodes an AccountLockedPastTimeResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedPastTimeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedPastTimeResponse;

            /**
             * Verifies an AccountLockedPastTimeResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedPastTimeResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedPastTimeResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedPastTimeResponse;

            /**
             * Creates a plain object from an AccountLockedPastTimeResponse message. Also converts values to other types if specified.
             * @param message AccountLockedPastTimeResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedPastTimeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedPastTimeResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedPastTimeNotUnlockingOnlyRequest. */
        interface IAccountLockedPastTimeNotUnlockingOnlyRequest {

            /** AccountLockedPastTimeNotUnlockingOnlyRequest owner */
            owner?: (string|null);

            /** AccountLockedPastTimeNotUnlockingOnlyRequest timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents an AccountLockedPastTimeNotUnlockingOnlyRequest. */
        class AccountLockedPastTimeNotUnlockingOnlyRequest implements IAccountLockedPastTimeNotUnlockingOnlyRequest {

            /**
             * Constructs a new AccountLockedPastTimeNotUnlockingOnlyRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyRequest);

            /** AccountLockedPastTimeNotUnlockingOnlyRequest owner. */
            public owner: string;

            /** AccountLockedPastTimeNotUnlockingOnlyRequest timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified AccountLockedPastTimeNotUnlockingOnlyRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest.verify|verify} messages.
             * @param message AccountLockedPastTimeNotUnlockingOnlyRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedPastTimeNotUnlockingOnlyRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest.verify|verify} messages.
             * @param message AccountLockedPastTimeNotUnlockingOnlyRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedPastTimeNotUnlockingOnlyRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedPastTimeNotUnlockingOnlyRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest;

            /**
             * Decodes an AccountLockedPastTimeNotUnlockingOnlyRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedPastTimeNotUnlockingOnlyRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest;

            /**
             * Verifies an AccountLockedPastTimeNotUnlockingOnlyRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedPastTimeNotUnlockingOnlyRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedPastTimeNotUnlockingOnlyRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest;

            /**
             * Creates a plain object from an AccountLockedPastTimeNotUnlockingOnlyRequest message. Also converts values to other types if specified.
             * @param message AccountLockedPastTimeNotUnlockingOnlyRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedPastTimeNotUnlockingOnlyRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedPastTimeNotUnlockingOnlyResponse. */
        interface IAccountLockedPastTimeNotUnlockingOnlyResponse {

            /** AccountLockedPastTimeNotUnlockingOnlyResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountLockedPastTimeNotUnlockingOnlyResponse. */
        class AccountLockedPastTimeNotUnlockingOnlyResponse implements IAccountLockedPastTimeNotUnlockingOnlyResponse {

            /**
             * Constructs a new AccountLockedPastTimeNotUnlockingOnlyResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyResponse);

            /** AccountLockedPastTimeNotUnlockingOnlyResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountLockedPastTimeNotUnlockingOnlyResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse.verify|verify} messages.
             * @param message AccountLockedPastTimeNotUnlockingOnlyResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedPastTimeNotUnlockingOnlyResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse.verify|verify} messages.
             * @param message AccountLockedPastTimeNotUnlockingOnlyResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedPastTimeNotUnlockingOnlyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedPastTimeNotUnlockingOnlyResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedPastTimeNotUnlockingOnlyResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse;

            /**
             * Decodes an AccountLockedPastTimeNotUnlockingOnlyResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedPastTimeNotUnlockingOnlyResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse;

            /**
             * Verifies an AccountLockedPastTimeNotUnlockingOnlyResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedPastTimeNotUnlockingOnlyResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedPastTimeNotUnlockingOnlyResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse;

            /**
             * Creates a plain object from an AccountLockedPastTimeNotUnlockingOnlyResponse message. Also converts values to other types if specified.
             * @param message AccountLockedPastTimeNotUnlockingOnlyResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedPastTimeNotUnlockingOnlyResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountUnlockedBeforeTimeRequest. */
        interface IAccountUnlockedBeforeTimeRequest {

            /** AccountUnlockedBeforeTimeRequest owner */
            owner?: (string|null);

            /** AccountUnlockedBeforeTimeRequest timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);
        }

        /** Represents an AccountUnlockedBeforeTimeRequest. */
        class AccountUnlockedBeforeTimeRequest implements IAccountUnlockedBeforeTimeRequest {

            /**
             * Constructs a new AccountUnlockedBeforeTimeRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountUnlockedBeforeTimeRequest);

            /** AccountUnlockedBeforeTimeRequest owner. */
            public owner: string;

            /** AccountUnlockedBeforeTimeRequest timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /**
             * Encodes the specified AccountUnlockedBeforeTimeRequest message. Does not implicitly {@link osmosis.lockup.AccountUnlockedBeforeTimeRequest.verify|verify} messages.
             * @param message AccountUnlockedBeforeTimeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountUnlockedBeforeTimeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountUnlockedBeforeTimeRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountUnlockedBeforeTimeRequest.verify|verify} messages.
             * @param message AccountUnlockedBeforeTimeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountUnlockedBeforeTimeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountUnlockedBeforeTimeRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountUnlockedBeforeTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountUnlockedBeforeTimeRequest;

            /**
             * Decodes an AccountUnlockedBeforeTimeRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountUnlockedBeforeTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountUnlockedBeforeTimeRequest;

            /**
             * Verifies an AccountUnlockedBeforeTimeRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountUnlockedBeforeTimeRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountUnlockedBeforeTimeRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountUnlockedBeforeTimeRequest;

            /**
             * Creates a plain object from an AccountUnlockedBeforeTimeRequest message. Also converts values to other types if specified.
             * @param message AccountUnlockedBeforeTimeRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountUnlockedBeforeTimeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountUnlockedBeforeTimeRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountUnlockedBeforeTimeResponse. */
        interface IAccountUnlockedBeforeTimeResponse {

            /** AccountUnlockedBeforeTimeResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountUnlockedBeforeTimeResponse. */
        class AccountUnlockedBeforeTimeResponse implements IAccountUnlockedBeforeTimeResponse {

            /**
             * Constructs a new AccountUnlockedBeforeTimeResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountUnlockedBeforeTimeResponse);

            /** AccountUnlockedBeforeTimeResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountUnlockedBeforeTimeResponse message. Does not implicitly {@link osmosis.lockup.AccountUnlockedBeforeTimeResponse.verify|verify} messages.
             * @param message AccountUnlockedBeforeTimeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountUnlockedBeforeTimeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountUnlockedBeforeTimeResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountUnlockedBeforeTimeResponse.verify|verify} messages.
             * @param message AccountUnlockedBeforeTimeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountUnlockedBeforeTimeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountUnlockedBeforeTimeResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountUnlockedBeforeTimeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountUnlockedBeforeTimeResponse;

            /**
             * Decodes an AccountUnlockedBeforeTimeResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountUnlockedBeforeTimeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountUnlockedBeforeTimeResponse;

            /**
             * Verifies an AccountUnlockedBeforeTimeResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountUnlockedBeforeTimeResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountUnlockedBeforeTimeResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountUnlockedBeforeTimeResponse;

            /**
             * Creates a plain object from an AccountUnlockedBeforeTimeResponse message. Also converts values to other types if specified.
             * @param message AccountUnlockedBeforeTimeResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountUnlockedBeforeTimeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountUnlockedBeforeTimeResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedPastTimeDenomRequest. */
        interface IAccountLockedPastTimeDenomRequest {

            /** AccountLockedPastTimeDenomRequest owner */
            owner?: (string|null);

            /** AccountLockedPastTimeDenomRequest timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** AccountLockedPastTimeDenomRequest denom */
            denom?: (string|null);
        }

        /** Represents an AccountLockedPastTimeDenomRequest. */
        class AccountLockedPastTimeDenomRequest implements IAccountLockedPastTimeDenomRequest {

            /**
             * Constructs a new AccountLockedPastTimeDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedPastTimeDenomRequest);

            /** AccountLockedPastTimeDenomRequest owner. */
            public owner: string;

            /** AccountLockedPastTimeDenomRequest timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** AccountLockedPastTimeDenomRequest denom. */
            public denom: string;

            /**
             * Encodes the specified AccountLockedPastTimeDenomRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeDenomRequest.verify|verify} messages.
             * @param message AccountLockedPastTimeDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedPastTimeDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedPastTimeDenomRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeDenomRequest.verify|verify} messages.
             * @param message AccountLockedPastTimeDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedPastTimeDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedPastTimeDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedPastTimeDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedPastTimeDenomRequest;

            /**
             * Decodes an AccountLockedPastTimeDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedPastTimeDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedPastTimeDenomRequest;

            /**
             * Verifies an AccountLockedPastTimeDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedPastTimeDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedPastTimeDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedPastTimeDenomRequest;

            /**
             * Creates a plain object from an AccountLockedPastTimeDenomRequest message. Also converts values to other types if specified.
             * @param message AccountLockedPastTimeDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedPastTimeDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedPastTimeDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedPastTimeDenomResponse. */
        interface IAccountLockedPastTimeDenomResponse {

            /** AccountLockedPastTimeDenomResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountLockedPastTimeDenomResponse. */
        class AccountLockedPastTimeDenomResponse implements IAccountLockedPastTimeDenomResponse {

            /**
             * Constructs a new AccountLockedPastTimeDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedPastTimeDenomResponse);

            /** AccountLockedPastTimeDenomResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountLockedPastTimeDenomResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeDenomResponse.verify|verify} messages.
             * @param message AccountLockedPastTimeDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedPastTimeDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedPastTimeDenomResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedPastTimeDenomResponse.verify|verify} messages.
             * @param message AccountLockedPastTimeDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedPastTimeDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedPastTimeDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedPastTimeDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedPastTimeDenomResponse;

            /**
             * Decodes an AccountLockedPastTimeDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedPastTimeDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedPastTimeDenomResponse;

            /**
             * Verifies an AccountLockedPastTimeDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedPastTimeDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedPastTimeDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedPastTimeDenomResponse;

            /**
             * Creates a plain object from an AccountLockedPastTimeDenomResponse message. Also converts values to other types if specified.
             * @param message AccountLockedPastTimeDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedPastTimeDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedPastTimeDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LockedDenomRequest. */
        interface ILockedDenomRequest {

            /** LockedDenomRequest denom */
            denom?: (string|null);

            /** LockedDenomRequest duration */
            duration?: (google.protobuf.IDuration|null);
        }

        /** Represents a LockedDenomRequest. */
        class LockedDenomRequest implements ILockedDenomRequest {

            /**
             * Constructs a new LockedDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.ILockedDenomRequest);

            /** LockedDenomRequest denom. */
            public denom: string;

            /** LockedDenomRequest duration. */
            public duration?: (google.protobuf.IDuration|null);

            /**
             * Encodes the specified LockedDenomRequest message. Does not implicitly {@link osmosis.lockup.LockedDenomRequest.verify|verify} messages.
             * @param message LockedDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.ILockedDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LockedDenomRequest message, length delimited. Does not implicitly {@link osmosis.lockup.LockedDenomRequest.verify|verify} messages.
             * @param message LockedDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.ILockedDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LockedDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LockedDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.LockedDenomRequest;

            /**
             * Decodes a LockedDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LockedDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.LockedDenomRequest;

            /**
             * Verifies a LockedDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LockedDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LockedDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.LockedDenomRequest;

            /**
             * Creates a plain object from a LockedDenomRequest message. Also converts values to other types if specified.
             * @param message LockedDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.LockedDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LockedDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LockedDenomResponse. */
        interface ILockedDenomResponse {

            /** LockedDenomResponse amount */
            amount?: (string|null);
        }

        /** Represents a LockedDenomResponse. */
        class LockedDenomResponse implements ILockedDenomResponse {

            /**
             * Constructs a new LockedDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.ILockedDenomResponse);

            /** LockedDenomResponse amount. */
            public amount: string;

            /**
             * Encodes the specified LockedDenomResponse message. Does not implicitly {@link osmosis.lockup.LockedDenomResponse.verify|verify} messages.
             * @param message LockedDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.ILockedDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LockedDenomResponse message, length delimited. Does not implicitly {@link osmosis.lockup.LockedDenomResponse.verify|verify} messages.
             * @param message LockedDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.ILockedDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LockedDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LockedDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.LockedDenomResponse;

            /**
             * Decodes a LockedDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LockedDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.LockedDenomResponse;

            /**
             * Verifies a LockedDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LockedDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LockedDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.LockedDenomResponse;

            /**
             * Creates a plain object from a LockedDenomResponse message. Also converts values to other types if specified.
             * @param message LockedDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.LockedDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LockedDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LockedRequest. */
        interface ILockedRequest {

            /** LockedRequest lock_id */
            lock_id?: (Long|null);
        }

        /** Represents a LockedRequest. */
        class LockedRequest implements ILockedRequest {

            /**
             * Constructs a new LockedRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.ILockedRequest);

            /** LockedRequest lock_id. */
            public lock_id: Long;

            /**
             * Encodes the specified LockedRequest message. Does not implicitly {@link osmosis.lockup.LockedRequest.verify|verify} messages.
             * @param message LockedRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.ILockedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LockedRequest message, length delimited. Does not implicitly {@link osmosis.lockup.LockedRequest.verify|verify} messages.
             * @param message LockedRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.ILockedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LockedRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LockedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.LockedRequest;

            /**
             * Decodes a LockedRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LockedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.LockedRequest;

            /**
             * Verifies a LockedRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LockedRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LockedRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.LockedRequest;

            /**
             * Creates a plain object from a LockedRequest message. Also converts values to other types if specified.
             * @param message LockedRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.LockedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LockedRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LockedResponse. */
        interface ILockedResponse {

            /** LockedResponse lock */
            lock?: (osmosis.lockup.IPeriodLock|null);
        }

        /** Represents a LockedResponse. */
        class LockedResponse implements ILockedResponse {

            /**
             * Constructs a new LockedResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.ILockedResponse);

            /** LockedResponse lock. */
            public lock?: (osmosis.lockup.IPeriodLock|null);

            /**
             * Encodes the specified LockedResponse message. Does not implicitly {@link osmosis.lockup.LockedResponse.verify|verify} messages.
             * @param message LockedResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.ILockedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LockedResponse message, length delimited. Does not implicitly {@link osmosis.lockup.LockedResponse.verify|verify} messages.
             * @param message LockedResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.ILockedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LockedResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LockedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.LockedResponse;

            /**
             * Decodes a LockedResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LockedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.LockedResponse;

            /**
             * Verifies a LockedResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LockedResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LockedResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.LockedResponse;

            /**
             * Creates a plain object from a LockedResponse message. Also converts values to other types if specified.
             * @param message LockedResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.LockedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LockedResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SyntheticLockupsByLockupIDRequest. */
        interface ISyntheticLockupsByLockupIDRequest {

            /** SyntheticLockupsByLockupIDRequest lock_id */
            lock_id?: (Long|null);
        }

        /** Represents a SyntheticLockupsByLockupIDRequest. */
        class SyntheticLockupsByLockupIDRequest implements ISyntheticLockupsByLockupIDRequest {

            /**
             * Constructs a new SyntheticLockupsByLockupIDRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.ISyntheticLockupsByLockupIDRequest);

            /** SyntheticLockupsByLockupIDRequest lock_id. */
            public lock_id: Long;

            /**
             * Encodes the specified SyntheticLockupsByLockupIDRequest message. Does not implicitly {@link osmosis.lockup.SyntheticLockupsByLockupIDRequest.verify|verify} messages.
             * @param message SyntheticLockupsByLockupIDRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.ISyntheticLockupsByLockupIDRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SyntheticLockupsByLockupIDRequest message, length delimited. Does not implicitly {@link osmosis.lockup.SyntheticLockupsByLockupIDRequest.verify|verify} messages.
             * @param message SyntheticLockupsByLockupIDRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.ISyntheticLockupsByLockupIDRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SyntheticLockupsByLockupIDRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SyntheticLockupsByLockupIDRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.SyntheticLockupsByLockupIDRequest;

            /**
             * Decodes a SyntheticLockupsByLockupIDRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SyntheticLockupsByLockupIDRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.SyntheticLockupsByLockupIDRequest;

            /**
             * Verifies a SyntheticLockupsByLockupIDRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SyntheticLockupsByLockupIDRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SyntheticLockupsByLockupIDRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.SyntheticLockupsByLockupIDRequest;

            /**
             * Creates a plain object from a SyntheticLockupsByLockupIDRequest message. Also converts values to other types if specified.
             * @param message SyntheticLockupsByLockupIDRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.SyntheticLockupsByLockupIDRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SyntheticLockupsByLockupIDRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SyntheticLockupsByLockupIDResponse. */
        interface ISyntheticLockupsByLockupIDResponse {

            /** SyntheticLockupsByLockupIDResponse synthetic_locks */
            synthetic_locks?: (osmosis.lockup.ISyntheticLock[]|null);
        }

        /** Represents a SyntheticLockupsByLockupIDResponse. */
        class SyntheticLockupsByLockupIDResponse implements ISyntheticLockupsByLockupIDResponse {

            /**
             * Constructs a new SyntheticLockupsByLockupIDResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.ISyntheticLockupsByLockupIDResponse);

            /** SyntheticLockupsByLockupIDResponse synthetic_locks. */
            public synthetic_locks: osmosis.lockup.ISyntheticLock[];

            /**
             * Encodes the specified SyntheticLockupsByLockupIDResponse message. Does not implicitly {@link osmosis.lockup.SyntheticLockupsByLockupIDResponse.verify|verify} messages.
             * @param message SyntheticLockupsByLockupIDResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.ISyntheticLockupsByLockupIDResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SyntheticLockupsByLockupIDResponse message, length delimited. Does not implicitly {@link osmosis.lockup.SyntheticLockupsByLockupIDResponse.verify|verify} messages.
             * @param message SyntheticLockupsByLockupIDResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.ISyntheticLockupsByLockupIDResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SyntheticLockupsByLockupIDResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SyntheticLockupsByLockupIDResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.SyntheticLockupsByLockupIDResponse;

            /**
             * Decodes a SyntheticLockupsByLockupIDResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SyntheticLockupsByLockupIDResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.SyntheticLockupsByLockupIDResponse;

            /**
             * Verifies a SyntheticLockupsByLockupIDResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SyntheticLockupsByLockupIDResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SyntheticLockupsByLockupIDResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.SyntheticLockupsByLockupIDResponse;

            /**
             * Creates a plain object from a SyntheticLockupsByLockupIDResponse message. Also converts values to other types if specified.
             * @param message SyntheticLockupsByLockupIDResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.SyntheticLockupsByLockupIDResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SyntheticLockupsByLockupIDResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedLongerDurationRequest. */
        interface IAccountLockedLongerDurationRequest {

            /** AccountLockedLongerDurationRequest owner */
            owner?: (string|null);

            /** AccountLockedLongerDurationRequest duration */
            duration?: (google.protobuf.IDuration|null);
        }

        /** Represents an AccountLockedLongerDurationRequest. */
        class AccountLockedLongerDurationRequest implements IAccountLockedLongerDurationRequest {

            /**
             * Constructs a new AccountLockedLongerDurationRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedLongerDurationRequest);

            /** AccountLockedLongerDurationRequest owner. */
            public owner: string;

            /** AccountLockedLongerDurationRequest duration. */
            public duration?: (google.protobuf.IDuration|null);

            /**
             * Encodes the specified AccountLockedLongerDurationRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationRequest.verify|verify} messages.
             * @param message AccountLockedLongerDurationRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedLongerDurationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedLongerDurationRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationRequest.verify|verify} messages.
             * @param message AccountLockedLongerDurationRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedLongerDurationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedLongerDurationRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedLongerDurationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedLongerDurationRequest;

            /**
             * Decodes an AccountLockedLongerDurationRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedLongerDurationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedLongerDurationRequest;

            /**
             * Verifies an AccountLockedLongerDurationRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedLongerDurationRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedLongerDurationRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedLongerDurationRequest;

            /**
             * Creates a plain object from an AccountLockedLongerDurationRequest message. Also converts values to other types if specified.
             * @param message AccountLockedLongerDurationRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedLongerDurationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedLongerDurationRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedLongerDurationResponse. */
        interface IAccountLockedLongerDurationResponse {

            /** AccountLockedLongerDurationResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountLockedLongerDurationResponse. */
        class AccountLockedLongerDurationResponse implements IAccountLockedLongerDurationResponse {

            /**
             * Constructs a new AccountLockedLongerDurationResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedLongerDurationResponse);

            /** AccountLockedLongerDurationResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountLockedLongerDurationResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationResponse.verify|verify} messages.
             * @param message AccountLockedLongerDurationResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedLongerDurationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedLongerDurationResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationResponse.verify|verify} messages.
             * @param message AccountLockedLongerDurationResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedLongerDurationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedLongerDurationResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedLongerDurationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedLongerDurationResponse;

            /**
             * Decodes an AccountLockedLongerDurationResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedLongerDurationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedLongerDurationResponse;

            /**
             * Verifies an AccountLockedLongerDurationResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedLongerDurationResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedLongerDurationResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedLongerDurationResponse;

            /**
             * Creates a plain object from an AccountLockedLongerDurationResponse message. Also converts values to other types if specified.
             * @param message AccountLockedLongerDurationResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedLongerDurationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedLongerDurationResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedDurationRequest. */
        interface IAccountLockedDurationRequest {

            /** AccountLockedDurationRequest owner */
            owner?: (string|null);

            /** AccountLockedDurationRequest duration */
            duration?: (google.protobuf.IDuration|null);
        }

        /** Represents an AccountLockedDurationRequest. */
        class AccountLockedDurationRequest implements IAccountLockedDurationRequest {

            /**
             * Constructs a new AccountLockedDurationRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedDurationRequest);

            /** AccountLockedDurationRequest owner. */
            public owner: string;

            /** AccountLockedDurationRequest duration. */
            public duration?: (google.protobuf.IDuration|null);

            /**
             * Encodes the specified AccountLockedDurationRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedDurationRequest.verify|verify} messages.
             * @param message AccountLockedDurationRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedDurationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedDurationRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedDurationRequest.verify|verify} messages.
             * @param message AccountLockedDurationRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedDurationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedDurationRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedDurationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedDurationRequest;

            /**
             * Decodes an AccountLockedDurationRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedDurationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedDurationRequest;

            /**
             * Verifies an AccountLockedDurationRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedDurationRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedDurationRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedDurationRequest;

            /**
             * Creates a plain object from an AccountLockedDurationRequest message. Also converts values to other types if specified.
             * @param message AccountLockedDurationRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedDurationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedDurationRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedDurationResponse. */
        interface IAccountLockedDurationResponse {

            /** AccountLockedDurationResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountLockedDurationResponse. */
        class AccountLockedDurationResponse implements IAccountLockedDurationResponse {

            /**
             * Constructs a new AccountLockedDurationResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedDurationResponse);

            /** AccountLockedDurationResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountLockedDurationResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedDurationResponse.verify|verify} messages.
             * @param message AccountLockedDurationResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedDurationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedDurationResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedDurationResponse.verify|verify} messages.
             * @param message AccountLockedDurationResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedDurationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedDurationResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedDurationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedDurationResponse;

            /**
             * Decodes an AccountLockedDurationResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedDurationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedDurationResponse;

            /**
             * Verifies an AccountLockedDurationResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedDurationResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedDurationResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedDurationResponse;

            /**
             * Creates a plain object from an AccountLockedDurationResponse message. Also converts values to other types if specified.
             * @param message AccountLockedDurationResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedDurationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedDurationResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedLongerDurationNotUnlockingOnlyRequest. */
        interface IAccountLockedLongerDurationNotUnlockingOnlyRequest {

            /** AccountLockedLongerDurationNotUnlockingOnlyRequest owner */
            owner?: (string|null);

            /** AccountLockedLongerDurationNotUnlockingOnlyRequest duration */
            duration?: (google.protobuf.IDuration|null);
        }

        /** Represents an AccountLockedLongerDurationNotUnlockingOnlyRequest. */
        class AccountLockedLongerDurationNotUnlockingOnlyRequest implements IAccountLockedLongerDurationNotUnlockingOnlyRequest {

            /**
             * Constructs a new AccountLockedLongerDurationNotUnlockingOnlyRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyRequest);

            /** AccountLockedLongerDurationNotUnlockingOnlyRequest owner. */
            public owner: string;

            /** AccountLockedLongerDurationNotUnlockingOnlyRequest duration. */
            public duration?: (google.protobuf.IDuration|null);

            /**
             * Encodes the specified AccountLockedLongerDurationNotUnlockingOnlyRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest.verify|verify} messages.
             * @param message AccountLockedLongerDurationNotUnlockingOnlyRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedLongerDurationNotUnlockingOnlyRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest.verify|verify} messages.
             * @param message AccountLockedLongerDurationNotUnlockingOnlyRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedLongerDurationNotUnlockingOnlyRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedLongerDurationNotUnlockingOnlyRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest;

            /**
             * Decodes an AccountLockedLongerDurationNotUnlockingOnlyRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedLongerDurationNotUnlockingOnlyRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest;

            /**
             * Verifies an AccountLockedLongerDurationNotUnlockingOnlyRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedLongerDurationNotUnlockingOnlyRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedLongerDurationNotUnlockingOnlyRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest;

            /**
             * Creates a plain object from an AccountLockedLongerDurationNotUnlockingOnlyRequest message. Also converts values to other types if specified.
             * @param message AccountLockedLongerDurationNotUnlockingOnlyRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedLongerDurationNotUnlockingOnlyRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedLongerDurationNotUnlockingOnlyResponse. */
        interface IAccountLockedLongerDurationNotUnlockingOnlyResponse {

            /** AccountLockedLongerDurationNotUnlockingOnlyResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountLockedLongerDurationNotUnlockingOnlyResponse. */
        class AccountLockedLongerDurationNotUnlockingOnlyResponse implements IAccountLockedLongerDurationNotUnlockingOnlyResponse {

            /**
             * Constructs a new AccountLockedLongerDurationNotUnlockingOnlyResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyResponse);

            /** AccountLockedLongerDurationNotUnlockingOnlyResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountLockedLongerDurationNotUnlockingOnlyResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse.verify|verify} messages.
             * @param message AccountLockedLongerDurationNotUnlockingOnlyResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedLongerDurationNotUnlockingOnlyResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse.verify|verify} messages.
             * @param message AccountLockedLongerDurationNotUnlockingOnlyResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedLongerDurationNotUnlockingOnlyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedLongerDurationNotUnlockingOnlyResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedLongerDurationNotUnlockingOnlyResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse;

            /**
             * Decodes an AccountLockedLongerDurationNotUnlockingOnlyResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedLongerDurationNotUnlockingOnlyResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse;

            /**
             * Verifies an AccountLockedLongerDurationNotUnlockingOnlyResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedLongerDurationNotUnlockingOnlyResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedLongerDurationNotUnlockingOnlyResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse;

            /**
             * Creates a plain object from an AccountLockedLongerDurationNotUnlockingOnlyResponse message. Also converts values to other types if specified.
             * @param message AccountLockedLongerDurationNotUnlockingOnlyResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedLongerDurationNotUnlockingOnlyResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedLongerDurationDenomRequest. */
        interface IAccountLockedLongerDurationDenomRequest {

            /** AccountLockedLongerDurationDenomRequest owner */
            owner?: (string|null);

            /** AccountLockedLongerDurationDenomRequest duration */
            duration?: (google.protobuf.IDuration|null);

            /** AccountLockedLongerDurationDenomRequest denom */
            denom?: (string|null);
        }

        /** Represents an AccountLockedLongerDurationDenomRequest. */
        class AccountLockedLongerDurationDenomRequest implements IAccountLockedLongerDurationDenomRequest {

            /**
             * Constructs a new AccountLockedLongerDurationDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedLongerDurationDenomRequest);

            /** AccountLockedLongerDurationDenomRequest owner. */
            public owner: string;

            /** AccountLockedLongerDurationDenomRequest duration. */
            public duration?: (google.protobuf.IDuration|null);

            /** AccountLockedLongerDurationDenomRequest denom. */
            public denom: string;

            /**
             * Encodes the specified AccountLockedLongerDurationDenomRequest message. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationDenomRequest.verify|verify} messages.
             * @param message AccountLockedLongerDurationDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedLongerDurationDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedLongerDurationDenomRequest message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationDenomRequest.verify|verify} messages.
             * @param message AccountLockedLongerDurationDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedLongerDurationDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedLongerDurationDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedLongerDurationDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedLongerDurationDenomRequest;

            /**
             * Decodes an AccountLockedLongerDurationDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedLongerDurationDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedLongerDurationDenomRequest;

            /**
             * Verifies an AccountLockedLongerDurationDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedLongerDurationDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedLongerDurationDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedLongerDurationDenomRequest;

            /**
             * Creates a plain object from an AccountLockedLongerDurationDenomRequest message. Also converts values to other types if specified.
             * @param message AccountLockedLongerDurationDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedLongerDurationDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedLongerDurationDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AccountLockedLongerDurationDenomResponse. */
        interface IAccountLockedLongerDurationDenomResponse {

            /** AccountLockedLongerDurationDenomResponse locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);
        }

        /** Represents an AccountLockedLongerDurationDenomResponse. */
        class AccountLockedLongerDurationDenomResponse implements IAccountLockedLongerDurationDenomResponse {

            /**
             * Constructs a new AccountLockedLongerDurationDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IAccountLockedLongerDurationDenomResponse);

            /** AccountLockedLongerDurationDenomResponse locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /**
             * Encodes the specified AccountLockedLongerDurationDenomResponse message. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationDenomResponse.verify|verify} messages.
             * @param message AccountLockedLongerDurationDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IAccountLockedLongerDurationDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccountLockedLongerDurationDenomResponse message, length delimited. Does not implicitly {@link osmosis.lockup.AccountLockedLongerDurationDenomResponse.verify|verify} messages.
             * @param message AccountLockedLongerDurationDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IAccountLockedLongerDurationDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccountLockedLongerDurationDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccountLockedLongerDurationDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.AccountLockedLongerDurationDenomResponse;

            /**
             * Decodes an AccountLockedLongerDurationDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccountLockedLongerDurationDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.AccountLockedLongerDurationDenomResponse;

            /**
             * Verifies an AccountLockedLongerDurationDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccountLockedLongerDurationDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccountLockedLongerDurationDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.AccountLockedLongerDurationDenomResponse;

            /**
             * Creates a plain object from an AccountLockedLongerDurationDenomResponse message. Also converts values to other types if specified.
             * @param message AccountLockedLongerDurationDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.AccountLockedLongerDurationDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccountLockedLongerDurationDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryParamsRequest. */
        interface IQueryParamsRequest {
        }

        /** Represents a QueryParamsRequest. */
        class QueryParamsRequest implements IQueryParamsRequest {

            /**
             * Constructs a new QueryParamsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IQueryParamsRequest);

            /**
             * Encodes the specified QueryParamsRequest message. Does not implicitly {@link osmosis.lockup.QueryParamsRequest.verify|verify} messages.
             * @param message QueryParamsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link osmosis.lockup.QueryParamsRequest.verify|verify} messages.
             * @param message QueryParamsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.QueryParamsRequest;

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.QueryParamsRequest;

            /**
             * Verifies a QueryParamsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryParamsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.QueryParamsRequest;

            /**
             * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
             * @param message QueryParamsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryParamsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryParamsResponse. */
        interface IQueryParamsResponse {

            /** QueryParamsResponse params */
            params?: (osmosis.lockup.IParams|null);
        }

        /** Represents a QueryParamsResponse. */
        class QueryParamsResponse implements IQueryParamsResponse {

            /**
             * Constructs a new QueryParamsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IQueryParamsResponse);

            /** QueryParamsResponse params. */
            public params?: (osmosis.lockup.IParams|null);

            /**
             * Encodes the specified QueryParamsResponse message. Does not implicitly {@link osmosis.lockup.QueryParamsResponse.verify|verify} messages.
             * @param message QueryParamsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link osmosis.lockup.QueryParamsResponse.verify|verify} messages.
             * @param message QueryParamsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.QueryParamsResponse;

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.QueryParamsResponse;

            /**
             * Verifies a QueryParamsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryParamsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.QueryParamsResponse;

            /**
             * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
             * @param message QueryParamsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryParamsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Params. */
        interface IParams {

            /** Params force_unlock_allowed_addresses */
            force_unlock_allowed_addresses?: (string[]|null);
        }

        /** Represents a Params. */
        class Params implements IParams {

            /**
             * Constructs a new Params.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IParams);

            /** Params force_unlock_allowed_addresses. */
            public force_unlock_allowed_addresses: string[];

            /**
             * Encodes the specified Params message. Does not implicitly {@link osmosis.lockup.Params.verify|verify} messages.
             * @param message Params message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.lockup.Params.verify|verify} messages.
             * @param message Params message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.Params;

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.Params;

            /**
             * Verifies a Params message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Params
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.Params;

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @param message Params
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Params to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GenesisState. */
        interface IGenesisState {

            /** GenesisState last_lock_id */
            last_lock_id?: (Long|null);

            /** GenesisState locks */
            locks?: (osmosis.lockup.IPeriodLock[]|null);

            /** GenesisState synthetic_locks */
            synthetic_locks?: (osmosis.lockup.ISyntheticLock[]|null);
        }

        /** Represents a GenesisState. */
        class GenesisState implements IGenesisState {

            /**
             * Constructs a new GenesisState.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.lockup.IGenesisState);

            /** GenesisState last_lock_id. */
            public last_lock_id: Long;

            /** GenesisState locks. */
            public locks: osmosis.lockup.IPeriodLock[];

            /** GenesisState synthetic_locks. */
            public synthetic_locks: osmosis.lockup.ISyntheticLock[];

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.lockup.GenesisState.verify|verify} messages.
             * @param message GenesisState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.lockup.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.lockup.GenesisState.verify|verify} messages.
             * @param message GenesisState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.lockup.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.lockup.GenesisState;

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.lockup.GenesisState;

            /**
             * Verifies a GenesisState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GenesisState
             */
            public static fromObject(object: { [k: string]: any }): osmosis.lockup.GenesisState;

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @param message GenesisState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.lockup.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GenesisState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace mint. */
    namespace mint {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: osmosis.mint.v1beta1.IQueryParamsRequest, callback: osmosis.mint.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: osmosis.mint.v1beta1.IQueryParamsRequest): Promise<osmosis.mint.v1beta1.QueryParamsResponse>;

                /**
                 * Calls EpochProvisions.
                 * @param request QueryEpochProvisionsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryEpochProvisionsResponse
                 */
                public epochProvisions(request: osmosis.mint.v1beta1.IQueryEpochProvisionsRequest, callback: osmosis.mint.v1beta1.Query.EpochProvisionsCallback): void;

                /**
                 * Calls EpochProvisions.
                 * @param request QueryEpochProvisionsRequest message or plain object
                 * @returns Promise
                 */
                public epochProvisions(request: osmosis.mint.v1beta1.IQueryEpochProvisionsRequest): Promise<osmosis.mint.v1beta1.QueryEpochProvisionsResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.mint.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: osmosis.mint.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.mint.v1beta1.Query#epochProvisions}.
                 * @param error Error, if any
                 * @param [response] QueryEpochProvisionsResponse
                 */
                type EpochProvisionsCallback = (error: (Error|null), response?: osmosis.mint.v1beta1.QueryEpochProvisionsResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link osmosis.mint.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (osmosis.mint.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (osmosis.mint.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link osmosis.mint.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryEpochProvisionsRequest. */
            interface IQueryEpochProvisionsRequest {
            }

            /** Represents a QueryEpochProvisionsRequest. */
            class QueryEpochProvisionsRequest implements IQueryEpochProvisionsRequest {

                /**
                 * Constructs a new QueryEpochProvisionsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IQueryEpochProvisionsRequest);

                /**
                 * Encodes the specified QueryEpochProvisionsRequest message. Does not implicitly {@link osmosis.mint.v1beta1.QueryEpochProvisionsRequest.verify|verify} messages.
                 * @param message QueryEpochProvisionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IQueryEpochProvisionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEpochProvisionsRequest message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.QueryEpochProvisionsRequest.verify|verify} messages.
                 * @param message QueryEpochProvisionsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IQueryEpochProvisionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEpochProvisionsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEpochProvisionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.QueryEpochProvisionsRequest;

                /**
                 * Decodes a QueryEpochProvisionsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEpochProvisionsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.QueryEpochProvisionsRequest;

                /**
                 * Verifies a QueryEpochProvisionsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEpochProvisionsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEpochProvisionsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.QueryEpochProvisionsRequest;

                /**
                 * Creates a plain object from a QueryEpochProvisionsRequest message. Also converts values to other types if specified.
                 * @param message QueryEpochProvisionsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.QueryEpochProvisionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEpochProvisionsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryEpochProvisionsResponse. */
            interface IQueryEpochProvisionsResponse {

                /** QueryEpochProvisionsResponse epoch_provisions */
                epoch_provisions?: (Uint8Array|null);
            }

            /** Represents a QueryEpochProvisionsResponse. */
            class QueryEpochProvisionsResponse implements IQueryEpochProvisionsResponse {

                /**
                 * Constructs a new QueryEpochProvisionsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IQueryEpochProvisionsResponse);

                /** QueryEpochProvisionsResponse epoch_provisions. */
                public epoch_provisions: Uint8Array;

                /**
                 * Encodes the specified QueryEpochProvisionsResponse message. Does not implicitly {@link osmosis.mint.v1beta1.QueryEpochProvisionsResponse.verify|verify} messages.
                 * @param message QueryEpochProvisionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IQueryEpochProvisionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryEpochProvisionsResponse message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.QueryEpochProvisionsResponse.verify|verify} messages.
                 * @param message QueryEpochProvisionsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IQueryEpochProvisionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryEpochProvisionsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryEpochProvisionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.QueryEpochProvisionsResponse;

                /**
                 * Decodes a QueryEpochProvisionsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryEpochProvisionsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.QueryEpochProvisionsResponse;

                /**
                 * Verifies a QueryEpochProvisionsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryEpochProvisionsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryEpochProvisionsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.QueryEpochProvisionsResponse;

                /**
                 * Creates a plain object from a QueryEpochProvisionsResponse message. Also converts values to other types if specified.
                 * @param message QueryEpochProvisionsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.QueryEpochProvisionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryEpochProvisionsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Minter. */
            interface IMinter {

                /** Minter epoch_provisions */
                epoch_provisions?: (string|null);
            }

            /** Represents a Minter. */
            class Minter implements IMinter {

                /**
                 * Constructs a new Minter.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IMinter);

                /** Minter epoch_provisions. */
                public epoch_provisions: string;

                /**
                 * Encodes the specified Minter message. Does not implicitly {@link osmosis.mint.v1beta1.Minter.verify|verify} messages.
                 * @param message Minter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IMinter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Minter message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.Minter.verify|verify} messages.
                 * @param message Minter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IMinter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Minter message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Minter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.Minter;

                /**
                 * Decodes a Minter message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Minter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.Minter;

                /**
                 * Verifies a Minter message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Minter message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Minter
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.Minter;

                /**
                 * Creates a plain object from a Minter message. Also converts values to other types if specified.
                 * @param message Minter
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.Minter, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Minter to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a WeightedAddress. */
            interface IWeightedAddress {

                /** WeightedAddress address */
                address?: (string|null);

                /** WeightedAddress weight */
                weight?: (string|null);
            }

            /** Represents a WeightedAddress. */
            class WeightedAddress implements IWeightedAddress {

                /**
                 * Constructs a new WeightedAddress.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IWeightedAddress);

                /** WeightedAddress address. */
                public address: string;

                /** WeightedAddress weight. */
                public weight: string;

                /**
                 * Encodes the specified WeightedAddress message. Does not implicitly {@link osmosis.mint.v1beta1.WeightedAddress.verify|verify} messages.
                 * @param message WeightedAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IWeightedAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WeightedAddress message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.WeightedAddress.verify|verify} messages.
                 * @param message WeightedAddress message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IWeightedAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WeightedAddress message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WeightedAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.WeightedAddress;

                /**
                 * Decodes a WeightedAddress message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WeightedAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.WeightedAddress;

                /**
                 * Verifies a WeightedAddress message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WeightedAddress message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WeightedAddress
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.WeightedAddress;

                /**
                 * Creates a plain object from a WeightedAddress message. Also converts values to other types if specified.
                 * @param message WeightedAddress
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.WeightedAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WeightedAddress to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DistributionProportions. */
            interface IDistributionProportions {

                /** DistributionProportions staking */
                staking?: (string|null);

                /** DistributionProportions pool_incentives */
                pool_incentives?: (string|null);

                /** DistributionProportions developer_rewards */
                developer_rewards?: (string|null);

                /** DistributionProportions community_pool */
                community_pool?: (string|null);
            }

            /** Represents a DistributionProportions. */
            class DistributionProportions implements IDistributionProportions {

                /**
                 * Constructs a new DistributionProportions.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IDistributionProportions);

                /** DistributionProportions staking. */
                public staking: string;

                /** DistributionProportions pool_incentives. */
                public pool_incentives: string;

                /** DistributionProportions developer_rewards. */
                public developer_rewards: string;

                /** DistributionProportions community_pool. */
                public community_pool: string;

                /**
                 * Encodes the specified DistributionProportions message. Does not implicitly {@link osmosis.mint.v1beta1.DistributionProportions.verify|verify} messages.
                 * @param message DistributionProportions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IDistributionProportions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DistributionProportions message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.DistributionProportions.verify|verify} messages.
                 * @param message DistributionProportions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IDistributionProportions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DistributionProportions message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DistributionProportions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.DistributionProportions;

                /**
                 * Decodes a DistributionProportions message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DistributionProportions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.DistributionProportions;

                /**
                 * Verifies a DistributionProportions message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DistributionProportions message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DistributionProportions
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.DistributionProportions;

                /**
                 * Creates a plain object from a DistributionProportions message. Also converts values to other types if specified.
                 * @param message DistributionProportions
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.DistributionProportions, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DistributionProportions to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params mint_denom */
                mint_denom?: (string|null);

                /** Params genesis_epoch_provisions */
                genesis_epoch_provisions?: (string|null);

                /** Params epoch_identifier */
                epoch_identifier?: (string|null);

                /** Params reduction_period_in_epochs */
                reduction_period_in_epochs?: (Long|null);

                /** Params reduction_factor */
                reduction_factor?: (string|null);

                /** Params distribution_proportions */
                distribution_proportions?: (osmosis.mint.v1beta1.IDistributionProportions|null);

                /** Params weighted_developer_rewards_receivers */
                weighted_developer_rewards_receivers?: (osmosis.mint.v1beta1.IWeightedAddress[]|null);

                /** Params minting_rewards_distribution_start_epoch */
                minting_rewards_distribution_start_epoch?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IParams);

                /** Params mint_denom. */
                public mint_denom: string;

                /** Params genesis_epoch_provisions. */
                public genesis_epoch_provisions: string;

                /** Params epoch_identifier. */
                public epoch_identifier: string;

                /** Params reduction_period_in_epochs. */
                public reduction_period_in_epochs: Long;

                /** Params reduction_factor. */
                public reduction_factor: string;

                /** Params distribution_proportions. */
                public distribution_proportions?: (osmosis.mint.v1beta1.IDistributionProportions|null);

                /** Params weighted_developer_rewards_receivers. */
                public weighted_developer_rewards_receivers: osmosis.mint.v1beta1.IWeightedAddress[];

                /** Params minting_rewards_distribution_start_epoch. */
                public minting_rewards_distribution_start_epoch: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link osmosis.mint.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState minter */
                minter?: (osmosis.mint.v1beta1.IMinter|null);

                /** GenesisState params */
                params?: (osmosis.mint.v1beta1.IParams|null);

                /** GenesisState reduction_started_epoch */
                reduction_started_epoch?: (Long|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.mint.v1beta1.IGenesisState);

                /** GenesisState minter. */
                public minter?: (osmosis.mint.v1beta1.IMinter|null);

                /** GenesisState params. */
                public params?: (osmosis.mint.v1beta1.IParams|null);

                /** GenesisState reduction_started_epoch. */
                public reduction_started_epoch: Long;

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.mint.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.mint.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.mint.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.mint.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.mint.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.mint.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.mint.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.mint.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace poolincentives. */
    namespace poolincentives {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a ReplacePoolIncentivesProposal. */
            interface IReplacePoolIncentivesProposal {

                /** ReplacePoolIncentivesProposal title */
                title?: (string|null);

                /** ReplacePoolIncentivesProposal description */
                description?: (string|null);

                /** ReplacePoolIncentivesProposal records */
                records?: (osmosis.poolincentives.v1beta1.IDistrRecord[]|null);
            }

            /** Represents a ReplacePoolIncentivesProposal. */
            class ReplacePoolIncentivesProposal implements IReplacePoolIncentivesProposal {

                /**
                 * Constructs a new ReplacePoolIncentivesProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IReplacePoolIncentivesProposal);

                /** ReplacePoolIncentivesProposal title. */
                public title: string;

                /** ReplacePoolIncentivesProposal description. */
                public description: string;

                /** ReplacePoolIncentivesProposal records. */
                public records: osmosis.poolincentives.v1beta1.IDistrRecord[];

                /**
                 * Encodes the specified ReplacePoolIncentivesProposal message. Does not implicitly {@link osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal.verify|verify} messages.
                 * @param message ReplacePoolIncentivesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IReplacePoolIncentivesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReplacePoolIncentivesProposal message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal.verify|verify} messages.
                 * @param message ReplacePoolIncentivesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IReplacePoolIncentivesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReplacePoolIncentivesProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReplacePoolIncentivesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal;

                /**
                 * Decodes a ReplacePoolIncentivesProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReplacePoolIncentivesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal;

                /**
                 * Verifies a ReplacePoolIncentivesProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReplacePoolIncentivesProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReplacePoolIncentivesProposal
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal;

                /**
                 * Creates a plain object from a ReplacePoolIncentivesProposal message. Also converts values to other types if specified.
                 * @param message ReplacePoolIncentivesProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReplacePoolIncentivesProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdatePoolIncentivesProposal. */
            interface IUpdatePoolIncentivesProposal {

                /** UpdatePoolIncentivesProposal title */
                title?: (string|null);

                /** UpdatePoolIncentivesProposal description */
                description?: (string|null);

                /** UpdatePoolIncentivesProposal records */
                records?: (osmosis.poolincentives.v1beta1.IDistrRecord[]|null);
            }

            /** Represents an UpdatePoolIncentivesProposal. */
            class UpdatePoolIncentivesProposal implements IUpdatePoolIncentivesProposal {

                /**
                 * Constructs a new UpdatePoolIncentivesProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IUpdatePoolIncentivesProposal);

                /** UpdatePoolIncentivesProposal title. */
                public title: string;

                /** UpdatePoolIncentivesProposal description. */
                public description: string;

                /** UpdatePoolIncentivesProposal records. */
                public records: osmosis.poolincentives.v1beta1.IDistrRecord[];

                /**
                 * Encodes the specified UpdatePoolIncentivesProposal message. Does not implicitly {@link osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal.verify|verify} messages.
                 * @param message UpdatePoolIncentivesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IUpdatePoolIncentivesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdatePoolIncentivesProposal message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal.verify|verify} messages.
                 * @param message UpdatePoolIncentivesProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IUpdatePoolIncentivesProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdatePoolIncentivesProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdatePoolIncentivesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal;

                /**
                 * Decodes an UpdatePoolIncentivesProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdatePoolIncentivesProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal;

                /**
                 * Verifies an UpdatePoolIncentivesProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdatePoolIncentivesProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdatePoolIncentivesProposal
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal;

                /**
                 * Creates a plain object from an UpdatePoolIncentivesProposal message. Also converts values to other types if specified.
                 * @param message UpdatePoolIncentivesProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdatePoolIncentivesProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params minted_denom */
                minted_denom?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IParams);

                /** Params minted_denom. */
                public minted_denom: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link osmosis.poolincentives.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LockableDurationsInfo. */
            interface ILockableDurationsInfo {

                /** LockableDurationsInfo lockable_durations */
                lockable_durations?: (google.protobuf.IDuration[]|null);
            }

            /** Represents a LockableDurationsInfo. */
            class LockableDurationsInfo implements ILockableDurationsInfo {

                /**
                 * Constructs a new LockableDurationsInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.ILockableDurationsInfo);

                /** LockableDurationsInfo lockable_durations. */
                public lockable_durations: google.protobuf.IDuration[];

                /**
                 * Encodes the specified LockableDurationsInfo message. Does not implicitly {@link osmosis.poolincentives.v1beta1.LockableDurationsInfo.verify|verify} messages.
                 * @param message LockableDurationsInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.ILockableDurationsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LockableDurationsInfo message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.LockableDurationsInfo.verify|verify} messages.
                 * @param message LockableDurationsInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.ILockableDurationsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LockableDurationsInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LockableDurationsInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.LockableDurationsInfo;

                /**
                 * Decodes a LockableDurationsInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LockableDurationsInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.LockableDurationsInfo;

                /**
                 * Verifies a LockableDurationsInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LockableDurationsInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LockableDurationsInfo
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.LockableDurationsInfo;

                /**
                 * Creates a plain object from a LockableDurationsInfo message. Also converts values to other types if specified.
                 * @param message LockableDurationsInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.LockableDurationsInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LockableDurationsInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DistrInfo. */
            interface IDistrInfo {

                /** DistrInfo total_weight */
                total_weight?: (string|null);

                /** DistrInfo records */
                records?: (osmosis.poolincentives.v1beta1.IDistrRecord[]|null);
            }

            /** Represents a DistrInfo. */
            class DistrInfo implements IDistrInfo {

                /**
                 * Constructs a new DistrInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IDistrInfo);

                /** DistrInfo total_weight. */
                public total_weight: string;

                /** DistrInfo records. */
                public records: osmosis.poolincentives.v1beta1.IDistrRecord[];

                /**
                 * Encodes the specified DistrInfo message. Does not implicitly {@link osmosis.poolincentives.v1beta1.DistrInfo.verify|verify} messages.
                 * @param message DistrInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IDistrInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DistrInfo message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.DistrInfo.verify|verify} messages.
                 * @param message DistrInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IDistrInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DistrInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DistrInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.DistrInfo;

                /**
                 * Decodes a DistrInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DistrInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.DistrInfo;

                /**
                 * Verifies a DistrInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DistrInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DistrInfo
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.DistrInfo;

                /**
                 * Creates a plain object from a DistrInfo message. Also converts values to other types if specified.
                 * @param message DistrInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.DistrInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DistrInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DistrRecord. */
            interface IDistrRecord {

                /** DistrRecord gauge_id */
                gauge_id?: (Long|null);

                /** DistrRecord weight */
                weight?: (string|null);
            }

            /** Represents a DistrRecord. */
            class DistrRecord implements IDistrRecord {

                /**
                 * Constructs a new DistrRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IDistrRecord);

                /** DistrRecord gauge_id. */
                public gauge_id: Long;

                /** DistrRecord weight. */
                public weight: string;

                /**
                 * Encodes the specified DistrRecord message. Does not implicitly {@link osmosis.poolincentives.v1beta1.DistrRecord.verify|verify} messages.
                 * @param message DistrRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IDistrRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DistrRecord message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.DistrRecord.verify|verify} messages.
                 * @param message DistrRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IDistrRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DistrRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DistrRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.DistrRecord;

                /**
                 * Decodes a DistrRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DistrRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.DistrRecord;

                /**
                 * Verifies a DistrRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DistrRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DistrRecord
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.DistrRecord;

                /**
                 * Creates a plain object from a DistrRecord message. Also converts values to other types if specified.
                 * @param message DistrRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.DistrRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DistrRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PoolToGauge. */
            interface IPoolToGauge {

                /** PoolToGauge pool_id */
                pool_id?: (Long|null);

                /** PoolToGauge gauge_id */
                gauge_id?: (Long|null);

                /** PoolToGauge duration */
                duration?: (google.protobuf.IDuration|null);
            }

            /** Represents a PoolToGauge. */
            class PoolToGauge implements IPoolToGauge {

                /**
                 * Constructs a new PoolToGauge.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IPoolToGauge);

                /** PoolToGauge pool_id. */
                public pool_id: Long;

                /** PoolToGauge gauge_id. */
                public gauge_id: Long;

                /** PoolToGauge duration. */
                public duration?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified PoolToGauge message. Does not implicitly {@link osmosis.poolincentives.v1beta1.PoolToGauge.verify|verify} messages.
                 * @param message PoolToGauge message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IPoolToGauge, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PoolToGauge message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.PoolToGauge.verify|verify} messages.
                 * @param message PoolToGauge message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IPoolToGauge, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PoolToGauge message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PoolToGauge
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.PoolToGauge;

                /**
                 * Decodes a PoolToGauge message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PoolToGauge
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.PoolToGauge;

                /**
                 * Verifies a PoolToGauge message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PoolToGauge message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PoolToGauge
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.PoolToGauge;

                /**
                 * Creates a plain object from a PoolToGauge message. Also converts values to other types if specified.
                 * @param message PoolToGauge
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.PoolToGauge, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PoolToGauge to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a PoolToGauges. */
            interface IPoolToGauges {

                /** PoolToGauges pool_to_gauge */
                pool_to_gauge?: (osmosis.poolincentives.v1beta1.IPoolToGauge[]|null);
            }

            /** Represents a PoolToGauges. */
            class PoolToGauges implements IPoolToGauges {

                /**
                 * Constructs a new PoolToGauges.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IPoolToGauges);

                /** PoolToGauges pool_to_gauge. */
                public pool_to_gauge: osmosis.poolincentives.v1beta1.IPoolToGauge[];

                /**
                 * Encodes the specified PoolToGauges message. Does not implicitly {@link osmosis.poolincentives.v1beta1.PoolToGauges.verify|verify} messages.
                 * @param message PoolToGauges message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IPoolToGauges, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PoolToGauges message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.PoolToGauges.verify|verify} messages.
                 * @param message PoolToGauges message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IPoolToGauges, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PoolToGauges message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PoolToGauges
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.PoolToGauges;

                /**
                 * Decodes a PoolToGauges message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PoolToGauges
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.PoolToGauges;

                /**
                 * Verifies a PoolToGauges message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PoolToGauges message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PoolToGauges
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.PoolToGauges;

                /**
                 * Creates a plain object from a PoolToGauges message. Also converts values to other types if specified.
                 * @param message PoolToGauges
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.PoolToGauges, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PoolToGauges to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls GaugeIds.
                 * @param request QueryGaugeIdsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryGaugeIdsResponse
                 */
                public gaugeIds(request: osmosis.poolincentives.v1beta1.IQueryGaugeIdsRequest, callback: osmosis.poolincentives.v1beta1.Query.GaugeIdsCallback): void;

                /**
                 * Calls GaugeIds.
                 * @param request QueryGaugeIdsRequest message or plain object
                 * @returns Promise
                 */
                public gaugeIds(request: osmosis.poolincentives.v1beta1.IQueryGaugeIdsRequest): Promise<osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse>;

                /**
                 * Calls DistrInfo.
                 * @param request QueryDistrInfoRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDistrInfoResponse
                 */
                public distrInfo(request: osmosis.poolincentives.v1beta1.IQueryDistrInfoRequest, callback: osmosis.poolincentives.v1beta1.Query.DistrInfoCallback): void;

                /**
                 * Calls DistrInfo.
                 * @param request QueryDistrInfoRequest message or plain object
                 * @returns Promise
                 */
                public distrInfo(request: osmosis.poolincentives.v1beta1.IQueryDistrInfoRequest): Promise<osmosis.poolincentives.v1beta1.QueryDistrInfoResponse>;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: osmosis.poolincentives.v1beta1.IQueryParamsRequest, callback: osmosis.poolincentives.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: osmosis.poolincentives.v1beta1.IQueryParamsRequest): Promise<osmosis.poolincentives.v1beta1.QueryParamsResponse>;

                /**
                 * Calls LockableDurations.
                 * @param request QueryLockableDurationsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryLockableDurationsResponse
                 */
                public lockableDurations(request: osmosis.poolincentives.v1beta1.IQueryLockableDurationsRequest, callback: osmosis.poolincentives.v1beta1.Query.LockableDurationsCallback): void;

                /**
                 * Calls LockableDurations.
                 * @param request QueryLockableDurationsRequest message or plain object
                 * @returns Promise
                 */
                public lockableDurations(request: osmosis.poolincentives.v1beta1.IQueryLockableDurationsRequest): Promise<osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse>;

                /**
                 * Calls IncentivizedPools.
                 * @param request QueryIncentivizedPoolsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryIncentivizedPoolsResponse
                 */
                public incentivizedPools(request: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsRequest, callback: osmosis.poolincentives.v1beta1.Query.IncentivizedPoolsCallback): void;

                /**
                 * Calls IncentivizedPools.
                 * @param request QueryIncentivizedPoolsRequest message or plain object
                 * @returns Promise
                 */
                public incentivizedPools(request: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsRequest): Promise<osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse>;

                /**
                 * Calls ExternalIncentiveGauges.
                 * @param request QueryExternalIncentiveGaugesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryExternalIncentiveGaugesResponse
                 */
                public externalIncentiveGauges(request: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesRequest, callback: osmosis.poolincentives.v1beta1.Query.ExternalIncentiveGaugesCallback): void;

                /**
                 * Calls ExternalIncentiveGauges.
                 * @param request QueryExternalIncentiveGaugesRequest message or plain object
                 * @returns Promise
                 */
                public externalIncentiveGauges(request: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesRequest): Promise<osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.poolincentives.v1beta1.Query#gaugeIds}.
                 * @param error Error, if any
                 * @param [response] QueryGaugeIdsResponse
                 */
                type GaugeIdsCallback = (error: (Error|null), response?: osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.poolincentives.v1beta1.Query#distrInfo}.
                 * @param error Error, if any
                 * @param [response] QueryDistrInfoResponse
                 */
                type DistrInfoCallback = (error: (Error|null), response?: osmosis.poolincentives.v1beta1.QueryDistrInfoResponse) => void;

                /**
                 * Callback as used by {@link osmosis.poolincentives.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: osmosis.poolincentives.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.poolincentives.v1beta1.Query#lockableDurations}.
                 * @param error Error, if any
                 * @param [response] QueryLockableDurationsResponse
                 */
                type LockableDurationsCallback = (error: (Error|null), response?: osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.poolincentives.v1beta1.Query#incentivizedPools}.
                 * @param error Error, if any
                 * @param [response] QueryIncentivizedPoolsResponse
                 */
                type IncentivizedPoolsCallback = (error: (Error|null), response?: osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.poolincentives.v1beta1.Query#externalIncentiveGauges}.
                 * @param error Error, if any
                 * @param [response] QueryExternalIncentiveGaugesResponse
                 */
                type ExternalIncentiveGaugesCallback = (error: (Error|null), response?: osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse) => void;
            }

            /** Properties of a QueryGaugeIdsRequest. */
            interface IQueryGaugeIdsRequest {

                /** QueryGaugeIdsRequest pool_id */
                pool_id?: (Long|null);
            }

            /** Represents a QueryGaugeIdsRequest. */
            class QueryGaugeIdsRequest implements IQueryGaugeIdsRequest {

                /**
                 * Constructs a new QueryGaugeIdsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryGaugeIdsRequest);

                /** QueryGaugeIdsRequest pool_id. */
                public pool_id: Long;

                /**
                 * Encodes the specified QueryGaugeIdsRequest message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest.verify|verify} messages.
                 * @param message QueryGaugeIdsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryGaugeIdsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryGaugeIdsRequest message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest.verify|verify} messages.
                 * @param message QueryGaugeIdsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryGaugeIdsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryGaugeIdsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryGaugeIdsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest;

                /**
                 * Decodes a QueryGaugeIdsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryGaugeIdsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest;

                /**
                 * Verifies a QueryGaugeIdsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryGaugeIdsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryGaugeIdsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest;

                /**
                 * Creates a plain object from a QueryGaugeIdsRequest message. Also converts values to other types if specified.
                 * @param message QueryGaugeIdsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryGaugeIdsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryGaugeIdsResponse. */
            interface IQueryGaugeIdsResponse {

                /** QueryGaugeIdsResponse gauge_ids_with_duration */
                gauge_ids_with_duration?: (osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.IGaugeIdWithDuration[]|null);
            }

            /** Represents a QueryGaugeIdsResponse. */
            class QueryGaugeIdsResponse implements IQueryGaugeIdsResponse {

                /**
                 * Constructs a new QueryGaugeIdsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryGaugeIdsResponse);

                /** QueryGaugeIdsResponse gauge_ids_with_duration. */
                public gauge_ids_with_duration: osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.IGaugeIdWithDuration[];

                /**
                 * Encodes the specified QueryGaugeIdsResponse message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.verify|verify} messages.
                 * @param message QueryGaugeIdsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryGaugeIdsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryGaugeIdsResponse message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.verify|verify} messages.
                 * @param message QueryGaugeIdsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryGaugeIdsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryGaugeIdsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryGaugeIdsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse;

                /**
                 * Decodes a QueryGaugeIdsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryGaugeIdsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse;

                /**
                 * Verifies a QueryGaugeIdsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryGaugeIdsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryGaugeIdsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse;

                /**
                 * Creates a plain object from a QueryGaugeIdsResponse message. Also converts values to other types if specified.
                 * @param message QueryGaugeIdsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryGaugeIdsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace QueryGaugeIdsResponse {

                /** Properties of a GaugeIdWithDuration. */
                interface IGaugeIdWithDuration {

                    /** GaugeIdWithDuration gauge_id */
                    gauge_id?: (Long|null);

                    /** GaugeIdWithDuration duration */
                    duration?: (google.protobuf.IDuration|null);

                    /** GaugeIdWithDuration gauge_incentive_percentage */
                    gauge_incentive_percentage?: (string|null);
                }

                /** Represents a GaugeIdWithDuration. */
                class GaugeIdWithDuration implements IGaugeIdWithDuration {

                    /**
                     * Constructs a new GaugeIdWithDuration.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.IGaugeIdWithDuration);

                    /** GaugeIdWithDuration gauge_id. */
                    public gauge_id: Long;

                    /** GaugeIdWithDuration duration. */
                    public duration?: (google.protobuf.IDuration|null);

                    /** GaugeIdWithDuration gauge_incentive_percentage. */
                    public gauge_incentive_percentage: string;

                    /**
                     * Encodes the specified GaugeIdWithDuration message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration.verify|verify} messages.
                     * @param message GaugeIdWithDuration message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.IGaugeIdWithDuration, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GaugeIdWithDuration message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration.verify|verify} messages.
                     * @param message GaugeIdWithDuration message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.IGaugeIdWithDuration, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GaugeIdWithDuration message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GaugeIdWithDuration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration;

                    /**
                     * Decodes a GaugeIdWithDuration message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GaugeIdWithDuration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration;

                    /**
                     * Verifies a GaugeIdWithDuration message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GaugeIdWithDuration message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GaugeIdWithDuration
                     */
                    public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration;

                    /**
                     * Creates a plain object from a GaugeIdWithDuration message. Also converts values to other types if specified.
                     * @param message GaugeIdWithDuration
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GaugeIdWithDuration to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Properties of a QueryDistrInfoRequest. */
            interface IQueryDistrInfoRequest {
            }

            /** Represents a QueryDistrInfoRequest. */
            class QueryDistrInfoRequest implements IQueryDistrInfoRequest {

                /**
                 * Constructs a new QueryDistrInfoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryDistrInfoRequest);

                /**
                 * Encodes the specified QueryDistrInfoRequest message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryDistrInfoRequest.verify|verify} messages.
                 * @param message QueryDistrInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryDistrInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDistrInfoRequest message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryDistrInfoRequest.verify|verify} messages.
                 * @param message QueryDistrInfoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryDistrInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDistrInfoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDistrInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryDistrInfoRequest;

                /**
                 * Decodes a QueryDistrInfoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDistrInfoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryDistrInfoRequest;

                /**
                 * Verifies a QueryDistrInfoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDistrInfoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDistrInfoRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryDistrInfoRequest;

                /**
                 * Creates a plain object from a QueryDistrInfoRequest message. Also converts values to other types if specified.
                 * @param message QueryDistrInfoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryDistrInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDistrInfoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDistrInfoResponse. */
            interface IQueryDistrInfoResponse {

                /** QueryDistrInfoResponse distr_info */
                distr_info?: (osmosis.poolincentives.v1beta1.IDistrInfo|null);
            }

            /** Represents a QueryDistrInfoResponse. */
            class QueryDistrInfoResponse implements IQueryDistrInfoResponse {

                /**
                 * Constructs a new QueryDistrInfoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryDistrInfoResponse);

                /** QueryDistrInfoResponse distr_info. */
                public distr_info?: (osmosis.poolincentives.v1beta1.IDistrInfo|null);

                /**
                 * Encodes the specified QueryDistrInfoResponse message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryDistrInfoResponse.verify|verify} messages.
                 * @param message QueryDistrInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryDistrInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDistrInfoResponse message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryDistrInfoResponse.verify|verify} messages.
                 * @param message QueryDistrInfoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryDistrInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDistrInfoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDistrInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryDistrInfoResponse;

                /**
                 * Decodes a QueryDistrInfoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDistrInfoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryDistrInfoResponse;

                /**
                 * Verifies a QueryDistrInfoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDistrInfoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDistrInfoResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryDistrInfoResponse;

                /**
                 * Creates a plain object from a QueryDistrInfoResponse message. Also converts values to other types if specified.
                 * @param message QueryDistrInfoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryDistrInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDistrInfoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (osmosis.poolincentives.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (osmosis.poolincentives.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLockableDurationsRequest. */
            interface IQueryLockableDurationsRequest {
            }

            /** Represents a QueryLockableDurationsRequest. */
            class QueryLockableDurationsRequest implements IQueryLockableDurationsRequest {

                /**
                 * Constructs a new QueryLockableDurationsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryLockableDurationsRequest);

                /**
                 * Encodes the specified QueryLockableDurationsRequest message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest.verify|verify} messages.
                 * @param message QueryLockableDurationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryLockableDurationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLockableDurationsRequest message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest.verify|verify} messages.
                 * @param message QueryLockableDurationsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryLockableDurationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLockableDurationsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLockableDurationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest;

                /**
                 * Decodes a QueryLockableDurationsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLockableDurationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest;

                /**
                 * Verifies a QueryLockableDurationsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLockableDurationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLockableDurationsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest;

                /**
                 * Creates a plain object from a QueryLockableDurationsRequest message. Also converts values to other types if specified.
                 * @param message QueryLockableDurationsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLockableDurationsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryLockableDurationsResponse. */
            interface IQueryLockableDurationsResponse {

                /** QueryLockableDurationsResponse lockable_durations */
                lockable_durations?: (google.protobuf.IDuration[]|null);
            }

            /** Represents a QueryLockableDurationsResponse. */
            class QueryLockableDurationsResponse implements IQueryLockableDurationsResponse {

                /**
                 * Constructs a new QueryLockableDurationsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryLockableDurationsResponse);

                /** QueryLockableDurationsResponse lockable_durations. */
                public lockable_durations: google.protobuf.IDuration[];

                /**
                 * Encodes the specified QueryLockableDurationsResponse message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse.verify|verify} messages.
                 * @param message QueryLockableDurationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryLockableDurationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryLockableDurationsResponse message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse.verify|verify} messages.
                 * @param message QueryLockableDurationsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryLockableDurationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryLockableDurationsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryLockableDurationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse;

                /**
                 * Decodes a QueryLockableDurationsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryLockableDurationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse;

                /**
                 * Verifies a QueryLockableDurationsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryLockableDurationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryLockableDurationsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse;

                /**
                 * Creates a plain object from a QueryLockableDurationsResponse message. Also converts values to other types if specified.
                 * @param message QueryLockableDurationsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryLockableDurationsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryIncentivizedPoolsRequest. */
            interface IQueryIncentivizedPoolsRequest {
            }

            /** Represents a QueryIncentivizedPoolsRequest. */
            class QueryIncentivizedPoolsRequest implements IQueryIncentivizedPoolsRequest {

                /**
                 * Constructs a new QueryIncentivizedPoolsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsRequest);

                /**
                 * Encodes the specified QueryIncentivizedPoolsRequest message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest.verify|verify} messages.
                 * @param message QueryIncentivizedPoolsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryIncentivizedPoolsRequest message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest.verify|verify} messages.
                 * @param message QueryIncentivizedPoolsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryIncentivizedPoolsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryIncentivizedPoolsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest;

                /**
                 * Decodes a QueryIncentivizedPoolsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryIncentivizedPoolsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest;

                /**
                 * Verifies a QueryIncentivizedPoolsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryIncentivizedPoolsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryIncentivizedPoolsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest;

                /**
                 * Creates a plain object from a QueryIncentivizedPoolsRequest message. Also converts values to other types if specified.
                 * @param message QueryIncentivizedPoolsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryIncentivizedPoolsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an IncentivizedPool. */
            interface IIncentivizedPool {

                /** IncentivizedPool pool_id */
                pool_id?: (Long|null);

                /** IncentivizedPool lockable_duration */
                lockable_duration?: (google.protobuf.IDuration|null);

                /** IncentivizedPool gauge_id */
                gauge_id?: (Long|null);
            }

            /** Represents an IncentivizedPool. */
            class IncentivizedPool implements IIncentivizedPool {

                /**
                 * Constructs a new IncentivizedPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IIncentivizedPool);

                /** IncentivizedPool pool_id. */
                public pool_id: Long;

                /** IncentivizedPool lockable_duration. */
                public lockable_duration?: (google.protobuf.IDuration|null);

                /** IncentivizedPool gauge_id. */
                public gauge_id: Long;

                /**
                 * Encodes the specified IncentivizedPool message. Does not implicitly {@link osmosis.poolincentives.v1beta1.IncentivizedPool.verify|verify} messages.
                 * @param message IncentivizedPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IIncentivizedPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IncentivizedPool message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.IncentivizedPool.verify|verify} messages.
                 * @param message IncentivizedPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IIncentivizedPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IncentivizedPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IncentivizedPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.IncentivizedPool;

                /**
                 * Decodes an IncentivizedPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IncentivizedPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.IncentivizedPool;

                /**
                 * Verifies an IncentivizedPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IncentivizedPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IncentivizedPool
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.IncentivizedPool;

                /**
                 * Creates a plain object from an IncentivizedPool message. Also converts values to other types if specified.
                 * @param message IncentivizedPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.IncentivizedPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IncentivizedPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryIncentivizedPoolsResponse. */
            interface IQueryIncentivizedPoolsResponse {

                /** QueryIncentivizedPoolsResponse incentivized_pools */
                incentivized_pools?: (osmosis.poolincentives.v1beta1.IIncentivizedPool[]|null);
            }

            /** Represents a QueryIncentivizedPoolsResponse. */
            class QueryIncentivizedPoolsResponse implements IQueryIncentivizedPoolsResponse {

                /**
                 * Constructs a new QueryIncentivizedPoolsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsResponse);

                /** QueryIncentivizedPoolsResponse incentivized_pools. */
                public incentivized_pools: osmosis.poolincentives.v1beta1.IIncentivizedPool[];

                /**
                 * Encodes the specified QueryIncentivizedPoolsResponse message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse.verify|verify} messages.
                 * @param message QueryIncentivizedPoolsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryIncentivizedPoolsResponse message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse.verify|verify} messages.
                 * @param message QueryIncentivizedPoolsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryIncentivizedPoolsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryIncentivizedPoolsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryIncentivizedPoolsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse;

                /**
                 * Decodes a QueryIncentivizedPoolsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryIncentivizedPoolsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse;

                /**
                 * Verifies a QueryIncentivizedPoolsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryIncentivizedPoolsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryIncentivizedPoolsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse;

                /**
                 * Creates a plain object from a QueryIncentivizedPoolsResponse message. Also converts values to other types if specified.
                 * @param message QueryIncentivizedPoolsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryIncentivizedPoolsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExternalIncentiveGaugesRequest. */
            interface IQueryExternalIncentiveGaugesRequest {
            }

            /** Represents a QueryExternalIncentiveGaugesRequest. */
            class QueryExternalIncentiveGaugesRequest implements IQueryExternalIncentiveGaugesRequest {

                /**
                 * Constructs a new QueryExternalIncentiveGaugesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesRequest);

                /**
                 * Encodes the specified QueryExternalIncentiveGaugesRequest message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest.verify|verify} messages.
                 * @param message QueryExternalIncentiveGaugesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExternalIncentiveGaugesRequest message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest.verify|verify} messages.
                 * @param message QueryExternalIncentiveGaugesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExternalIncentiveGaugesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExternalIncentiveGaugesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest;

                /**
                 * Decodes a QueryExternalIncentiveGaugesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExternalIncentiveGaugesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest;

                /**
                 * Verifies a QueryExternalIncentiveGaugesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExternalIncentiveGaugesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExternalIncentiveGaugesRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest;

                /**
                 * Creates a plain object from a QueryExternalIncentiveGaugesRequest message. Also converts values to other types if specified.
                 * @param message QueryExternalIncentiveGaugesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExternalIncentiveGaugesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryExternalIncentiveGaugesResponse. */
            interface IQueryExternalIncentiveGaugesResponse {

                /** QueryExternalIncentiveGaugesResponse data */
                data?: (osmosis.incentives.IGauge[]|null);
            }

            /** Represents a QueryExternalIncentiveGaugesResponse. */
            class QueryExternalIncentiveGaugesResponse implements IQueryExternalIncentiveGaugesResponse {

                /**
                 * Constructs a new QueryExternalIncentiveGaugesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesResponse);

                /** QueryExternalIncentiveGaugesResponse data. */
                public data: osmosis.incentives.IGauge[];

                /**
                 * Encodes the specified QueryExternalIncentiveGaugesResponse message. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse.verify|verify} messages.
                 * @param message QueryExternalIncentiveGaugesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryExternalIncentiveGaugesResponse message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse.verify|verify} messages.
                 * @param message QueryExternalIncentiveGaugesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IQueryExternalIncentiveGaugesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryExternalIncentiveGaugesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryExternalIncentiveGaugesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse;

                /**
                 * Decodes a QueryExternalIncentiveGaugesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryExternalIncentiveGaugesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse;

                /**
                 * Verifies a QueryExternalIncentiveGaugesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryExternalIncentiveGaugesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryExternalIncentiveGaugesResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse;

                /**
                 * Creates a plain object from a QueryExternalIncentiveGaugesResponse message. Also converts values to other types if specified.
                 * @param message QueryExternalIncentiveGaugesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryExternalIncentiveGaugesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (osmosis.poolincentives.v1beta1.IParams|null);

                /** GenesisState lockable_durations */
                lockable_durations?: (google.protobuf.IDuration[]|null);

                /** GenesisState distr_info */
                distr_info?: (osmosis.poolincentives.v1beta1.IDistrInfo|null);

                /** GenesisState pool_to_gauges */
                pool_to_gauges?: (osmosis.poolincentives.v1beta1.IPoolToGauges|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.poolincentives.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (osmosis.poolincentives.v1beta1.IParams|null);

                /** GenesisState lockable_durations. */
                public lockable_durations: google.protobuf.IDuration[];

                /** GenesisState distr_info. */
                public distr_info?: (osmosis.poolincentives.v1beta1.IDistrInfo|null);

                /** GenesisState pool_to_gauges. */
                public pool_to_gauges?: (osmosis.poolincentives.v1beta1.IPoolToGauges|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.poolincentives.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.poolincentives.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.poolincentives.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.poolincentives.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.poolincentives.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.poolincentives.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.poolincentives.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.poolincentives.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace store. */
    namespace store {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Node. */
            interface INode {

                /** Node children */
                children?: (osmosis.store.v1beta1.IChild[]|null);
            }

            /** Represents a Node. */
            class Node implements INode {

                /**
                 * Constructs a new Node.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.store.v1beta1.INode);

                /** Node children. */
                public children: osmosis.store.v1beta1.IChild[];

                /**
                 * Encodes the specified Node message. Does not implicitly {@link osmosis.store.v1beta1.Node.verify|verify} messages.
                 * @param message Node message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.store.v1beta1.INode, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Node message, length delimited. Does not implicitly {@link osmosis.store.v1beta1.Node.verify|verify} messages.
                 * @param message Node message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.store.v1beta1.INode, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Node message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Node
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.store.v1beta1.Node;

                /**
                 * Decodes a Node message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Node
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.store.v1beta1.Node;

                /**
                 * Verifies a Node message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Node message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Node
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.store.v1beta1.Node;

                /**
                 * Creates a plain object from a Node message. Also converts values to other types if specified.
                 * @param message Node
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.store.v1beta1.Node, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Node to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Child. */
            interface IChild {

                /** Child index */
                index?: (Uint8Array|null);

                /** Child accumulation */
                accumulation?: (string|null);
            }

            /** Represents a Child. */
            class Child implements IChild {

                /**
                 * Constructs a new Child.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.store.v1beta1.IChild);

                /** Child index. */
                public index: Uint8Array;

                /** Child accumulation. */
                public accumulation: string;

                /**
                 * Encodes the specified Child message. Does not implicitly {@link osmosis.store.v1beta1.Child.verify|verify} messages.
                 * @param message Child message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.store.v1beta1.IChild, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Child message, length delimited. Does not implicitly {@link osmosis.store.v1beta1.Child.verify|verify} messages.
                 * @param message Child message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.store.v1beta1.IChild, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Child message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Child
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.store.v1beta1.Child;

                /**
                 * Decodes a Child message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Child
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.store.v1beta1.Child;

                /**
                 * Verifies a Child message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Child message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Child
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.store.v1beta1.Child;

                /**
                 * Creates a plain object from a Child message. Also converts values to other types if specified.
                 * @param message Child
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.store.v1beta1.Child, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Child to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Leaf. */
            interface ILeaf {

                /** Leaf leaf */
                leaf?: (osmosis.store.v1beta1.IChild|null);
            }

            /** Represents a Leaf. */
            class Leaf implements ILeaf {

                /**
                 * Constructs a new Leaf.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.store.v1beta1.ILeaf);

                /** Leaf leaf. */
                public leaf?: (osmosis.store.v1beta1.IChild|null);

                /**
                 * Encodes the specified Leaf message. Does not implicitly {@link osmosis.store.v1beta1.Leaf.verify|verify} messages.
                 * @param message Leaf message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.store.v1beta1.ILeaf, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Leaf message, length delimited. Does not implicitly {@link osmosis.store.v1beta1.Leaf.verify|verify} messages.
                 * @param message Leaf message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.store.v1beta1.ILeaf, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Leaf message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Leaf
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.store.v1beta1.Leaf;

                /**
                 * Decodes a Leaf message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Leaf
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.store.v1beta1.Leaf;

                /**
                 * Verifies a Leaf message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Leaf message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Leaf
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.store.v1beta1.Leaf;

                /**
                 * Creates a plain object from a Leaf message. Also converts values to other types if specified.
                 * @param message Leaf
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.store.v1beta1.Leaf, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Leaf to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace superfluid. */
    namespace superfluid {

        /** Represents a Msg */
        class Msg extends $protobuf.rpc.Service {

            /**
             * Constructs a new Msg service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Calls SuperfluidDelegate.
             * @param request MsgSuperfluidDelegate message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgSuperfluidDelegateResponse
             */
            public superfluidDelegate(request: osmosis.superfluid.IMsgSuperfluidDelegate, callback: osmosis.superfluid.Msg.SuperfluidDelegateCallback): void;

            /**
             * Calls SuperfluidDelegate.
             * @param request MsgSuperfluidDelegate message or plain object
             * @returns Promise
             */
            public superfluidDelegate(request: osmosis.superfluid.IMsgSuperfluidDelegate): Promise<osmosis.superfluid.MsgSuperfluidDelegateResponse>;

            /**
             * Calls SuperfluidUndelegate.
             * @param request MsgSuperfluidUndelegate message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgSuperfluidUndelegateResponse
             */
            public superfluidUndelegate(request: osmosis.superfluid.IMsgSuperfluidUndelegate, callback: osmosis.superfluid.Msg.SuperfluidUndelegateCallback): void;

            /**
             * Calls SuperfluidUndelegate.
             * @param request MsgSuperfluidUndelegate message or plain object
             * @returns Promise
             */
            public superfluidUndelegate(request: osmosis.superfluid.IMsgSuperfluidUndelegate): Promise<osmosis.superfluid.MsgSuperfluidUndelegateResponse>;

            /**
             * Calls SuperfluidUnbondLock.
             * @param request MsgSuperfluidUnbondLock message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgSuperfluidUnbondLockResponse
             */
            public superfluidUnbondLock(request: osmosis.superfluid.IMsgSuperfluidUnbondLock, callback: osmosis.superfluid.Msg.SuperfluidUnbondLockCallback): void;

            /**
             * Calls SuperfluidUnbondLock.
             * @param request MsgSuperfluidUnbondLock message or plain object
             * @returns Promise
             */
            public superfluidUnbondLock(request: osmosis.superfluid.IMsgSuperfluidUnbondLock): Promise<osmosis.superfluid.MsgSuperfluidUnbondLockResponse>;

            /**
             * Calls LockAndSuperfluidDelegate.
             * @param request MsgLockAndSuperfluidDelegate message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgLockAndSuperfluidDelegateResponse
             */
            public lockAndSuperfluidDelegate(request: osmosis.superfluid.IMsgLockAndSuperfluidDelegate, callback: osmosis.superfluid.Msg.LockAndSuperfluidDelegateCallback): void;

            /**
             * Calls LockAndSuperfluidDelegate.
             * @param request MsgLockAndSuperfluidDelegate message or plain object
             * @returns Promise
             */
            public lockAndSuperfluidDelegate(request: osmosis.superfluid.IMsgLockAndSuperfluidDelegate): Promise<osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse>;

            /**
             * Calls UnPoolWhitelistedPool.
             * @param request MsgUnPoolWhitelistedPool message or plain object
             * @param callback Node-style callback called with the error, if any, and MsgUnPoolWhitelistedPoolResponse
             */
            public unPoolWhitelistedPool(request: osmosis.superfluid.IMsgUnPoolWhitelistedPool, callback: osmosis.superfluid.Msg.UnPoolWhitelistedPoolCallback): void;

            /**
             * Calls UnPoolWhitelistedPool.
             * @param request MsgUnPoolWhitelistedPool message or plain object
             * @returns Promise
             */
            public unPoolWhitelistedPool(request: osmosis.superfluid.IMsgUnPoolWhitelistedPool): Promise<osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse>;
        }

        namespace Msg {

            /**
             * Callback as used by {@link osmosis.superfluid.Msg#superfluidDelegate}.
             * @param error Error, if any
             * @param [response] MsgSuperfluidDelegateResponse
             */
            type SuperfluidDelegateCallback = (error: (Error|null), response?: osmosis.superfluid.MsgSuperfluidDelegateResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Msg#superfluidUndelegate}.
             * @param error Error, if any
             * @param [response] MsgSuperfluidUndelegateResponse
             */
            type SuperfluidUndelegateCallback = (error: (Error|null), response?: osmosis.superfluid.MsgSuperfluidUndelegateResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Msg#superfluidUnbondLock}.
             * @param error Error, if any
             * @param [response] MsgSuperfluidUnbondLockResponse
             */
            type SuperfluidUnbondLockCallback = (error: (Error|null), response?: osmosis.superfluid.MsgSuperfluidUnbondLockResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Msg#lockAndSuperfluidDelegate}.
             * @param error Error, if any
             * @param [response] MsgLockAndSuperfluidDelegateResponse
             */
            type LockAndSuperfluidDelegateCallback = (error: (Error|null), response?: osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Msg#unPoolWhitelistedPool}.
             * @param error Error, if any
             * @param [response] MsgUnPoolWhitelistedPoolResponse
             */
            type UnPoolWhitelistedPoolCallback = (error: (Error|null), response?: osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse) => void;
        }

        /** Properties of a MsgSuperfluidDelegate. */
        interface IMsgSuperfluidDelegate {

            /** MsgSuperfluidDelegate sender */
            sender?: (string|null);

            /** MsgSuperfluidDelegate lock_id */
            lock_id?: (Long|null);

            /** MsgSuperfluidDelegate val_addr */
            val_addr?: (string|null);
        }

        /** Represents a MsgSuperfluidDelegate. */
        class MsgSuperfluidDelegate implements IMsgSuperfluidDelegate {

            /**
             * Constructs a new MsgSuperfluidDelegate.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgSuperfluidDelegate);

            /** MsgSuperfluidDelegate sender. */
            public sender: string;

            /** MsgSuperfluidDelegate lock_id. */
            public lock_id: Long;

            /** MsgSuperfluidDelegate val_addr. */
            public val_addr: string;

            /**
             * Encodes the specified MsgSuperfluidDelegate message. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidDelegate.verify|verify} messages.
             * @param message MsgSuperfluidDelegate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgSuperfluidDelegate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgSuperfluidDelegate message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidDelegate.verify|verify} messages.
             * @param message MsgSuperfluidDelegate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgSuperfluidDelegate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgSuperfluidDelegate message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSuperfluidDelegate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgSuperfluidDelegate;

            /**
             * Decodes a MsgSuperfluidDelegate message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSuperfluidDelegate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgSuperfluidDelegate;

            /**
             * Verifies a MsgSuperfluidDelegate message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSuperfluidDelegate message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSuperfluidDelegate
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgSuperfluidDelegate;

            /**
             * Creates a plain object from a MsgSuperfluidDelegate message. Also converts values to other types if specified.
             * @param message MsgSuperfluidDelegate
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgSuperfluidDelegate, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSuperfluidDelegate to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgSuperfluidDelegateResponse. */
        interface IMsgSuperfluidDelegateResponse {
        }

        /** Represents a MsgSuperfluidDelegateResponse. */
        class MsgSuperfluidDelegateResponse implements IMsgSuperfluidDelegateResponse {

            /**
             * Constructs a new MsgSuperfluidDelegateResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgSuperfluidDelegateResponse);

            /**
             * Encodes the specified MsgSuperfluidDelegateResponse message. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidDelegateResponse.verify|verify} messages.
             * @param message MsgSuperfluidDelegateResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgSuperfluidDelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgSuperfluidDelegateResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidDelegateResponse.verify|verify} messages.
             * @param message MsgSuperfluidDelegateResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgSuperfluidDelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgSuperfluidDelegateResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSuperfluidDelegateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgSuperfluidDelegateResponse;

            /**
             * Decodes a MsgSuperfluidDelegateResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSuperfluidDelegateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgSuperfluidDelegateResponse;

            /**
             * Verifies a MsgSuperfluidDelegateResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSuperfluidDelegateResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSuperfluidDelegateResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgSuperfluidDelegateResponse;

            /**
             * Creates a plain object from a MsgSuperfluidDelegateResponse message. Also converts values to other types if specified.
             * @param message MsgSuperfluidDelegateResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgSuperfluidDelegateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSuperfluidDelegateResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgSuperfluidUndelegate. */
        interface IMsgSuperfluidUndelegate {

            /** MsgSuperfluidUndelegate sender */
            sender?: (string|null);

            /** MsgSuperfluidUndelegate lock_id */
            lock_id?: (Long|null);
        }

        /** Represents a MsgSuperfluidUndelegate. */
        class MsgSuperfluidUndelegate implements IMsgSuperfluidUndelegate {

            /**
             * Constructs a new MsgSuperfluidUndelegate.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgSuperfluidUndelegate);

            /** MsgSuperfluidUndelegate sender. */
            public sender: string;

            /** MsgSuperfluidUndelegate lock_id. */
            public lock_id: Long;

            /**
             * Encodes the specified MsgSuperfluidUndelegate message. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUndelegate.verify|verify} messages.
             * @param message MsgSuperfluidUndelegate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgSuperfluidUndelegate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgSuperfluidUndelegate message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUndelegate.verify|verify} messages.
             * @param message MsgSuperfluidUndelegate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgSuperfluidUndelegate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgSuperfluidUndelegate message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSuperfluidUndelegate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgSuperfluidUndelegate;

            /**
             * Decodes a MsgSuperfluidUndelegate message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSuperfluidUndelegate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgSuperfluidUndelegate;

            /**
             * Verifies a MsgSuperfluidUndelegate message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSuperfluidUndelegate message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSuperfluidUndelegate
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgSuperfluidUndelegate;

            /**
             * Creates a plain object from a MsgSuperfluidUndelegate message. Also converts values to other types if specified.
             * @param message MsgSuperfluidUndelegate
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgSuperfluidUndelegate, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSuperfluidUndelegate to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgSuperfluidUndelegateResponse. */
        interface IMsgSuperfluidUndelegateResponse {
        }

        /** Represents a MsgSuperfluidUndelegateResponse. */
        class MsgSuperfluidUndelegateResponse implements IMsgSuperfluidUndelegateResponse {

            /**
             * Constructs a new MsgSuperfluidUndelegateResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgSuperfluidUndelegateResponse);

            /**
             * Encodes the specified MsgSuperfluidUndelegateResponse message. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUndelegateResponse.verify|verify} messages.
             * @param message MsgSuperfluidUndelegateResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgSuperfluidUndelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgSuperfluidUndelegateResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUndelegateResponse.verify|verify} messages.
             * @param message MsgSuperfluidUndelegateResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgSuperfluidUndelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgSuperfluidUndelegateResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSuperfluidUndelegateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgSuperfluidUndelegateResponse;

            /**
             * Decodes a MsgSuperfluidUndelegateResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSuperfluidUndelegateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgSuperfluidUndelegateResponse;

            /**
             * Verifies a MsgSuperfluidUndelegateResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSuperfluidUndelegateResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSuperfluidUndelegateResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgSuperfluidUndelegateResponse;

            /**
             * Creates a plain object from a MsgSuperfluidUndelegateResponse message. Also converts values to other types if specified.
             * @param message MsgSuperfluidUndelegateResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgSuperfluidUndelegateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSuperfluidUndelegateResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgSuperfluidUnbondLock. */
        interface IMsgSuperfluidUnbondLock {

            /** MsgSuperfluidUnbondLock sender */
            sender?: (string|null);

            /** MsgSuperfluidUnbondLock lock_id */
            lock_id?: (Long|null);
        }

        /** Represents a MsgSuperfluidUnbondLock. */
        class MsgSuperfluidUnbondLock implements IMsgSuperfluidUnbondLock {

            /**
             * Constructs a new MsgSuperfluidUnbondLock.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgSuperfluidUnbondLock);

            /** MsgSuperfluidUnbondLock sender. */
            public sender: string;

            /** MsgSuperfluidUnbondLock lock_id. */
            public lock_id: Long;

            /**
             * Encodes the specified MsgSuperfluidUnbondLock message. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUnbondLock.verify|verify} messages.
             * @param message MsgSuperfluidUnbondLock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgSuperfluidUnbondLock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgSuperfluidUnbondLock message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUnbondLock.verify|verify} messages.
             * @param message MsgSuperfluidUnbondLock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgSuperfluidUnbondLock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgSuperfluidUnbondLock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSuperfluidUnbondLock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgSuperfluidUnbondLock;

            /**
             * Decodes a MsgSuperfluidUnbondLock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSuperfluidUnbondLock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgSuperfluidUnbondLock;

            /**
             * Verifies a MsgSuperfluidUnbondLock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSuperfluidUnbondLock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSuperfluidUnbondLock
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgSuperfluidUnbondLock;

            /**
             * Creates a plain object from a MsgSuperfluidUnbondLock message. Also converts values to other types if specified.
             * @param message MsgSuperfluidUnbondLock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgSuperfluidUnbondLock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSuperfluidUnbondLock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgSuperfluidUnbondLockResponse. */
        interface IMsgSuperfluidUnbondLockResponse {
        }

        /** Represents a MsgSuperfluidUnbondLockResponse. */
        class MsgSuperfluidUnbondLockResponse implements IMsgSuperfluidUnbondLockResponse {

            /**
             * Constructs a new MsgSuperfluidUnbondLockResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgSuperfluidUnbondLockResponse);

            /**
             * Encodes the specified MsgSuperfluidUnbondLockResponse message. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUnbondLockResponse.verify|verify} messages.
             * @param message MsgSuperfluidUnbondLockResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgSuperfluidUnbondLockResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgSuperfluidUnbondLockResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgSuperfluidUnbondLockResponse.verify|verify} messages.
             * @param message MsgSuperfluidUnbondLockResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgSuperfluidUnbondLockResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgSuperfluidUnbondLockResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgSuperfluidUnbondLockResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgSuperfluidUnbondLockResponse;

            /**
             * Decodes a MsgSuperfluidUnbondLockResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgSuperfluidUnbondLockResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgSuperfluidUnbondLockResponse;

            /**
             * Verifies a MsgSuperfluidUnbondLockResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgSuperfluidUnbondLockResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgSuperfluidUnbondLockResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgSuperfluidUnbondLockResponse;

            /**
             * Creates a plain object from a MsgSuperfluidUnbondLockResponse message. Also converts values to other types if specified.
             * @param message MsgSuperfluidUnbondLockResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgSuperfluidUnbondLockResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgSuperfluidUnbondLockResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgLockAndSuperfluidDelegate. */
        interface IMsgLockAndSuperfluidDelegate {

            /** MsgLockAndSuperfluidDelegate sender */
            sender?: (string|null);

            /** MsgLockAndSuperfluidDelegate coins */
            coins?: (cosmos.base.v1beta1.ICoin[]|null);

            /** MsgLockAndSuperfluidDelegate val_addr */
            val_addr?: (string|null);
        }

        /** Represents a MsgLockAndSuperfluidDelegate. */
        class MsgLockAndSuperfluidDelegate implements IMsgLockAndSuperfluidDelegate {

            /**
             * Constructs a new MsgLockAndSuperfluidDelegate.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgLockAndSuperfluidDelegate);

            /** MsgLockAndSuperfluidDelegate sender. */
            public sender: string;

            /** MsgLockAndSuperfluidDelegate coins. */
            public coins: cosmos.base.v1beta1.ICoin[];

            /** MsgLockAndSuperfluidDelegate val_addr. */
            public val_addr: string;

            /**
             * Encodes the specified MsgLockAndSuperfluidDelegate message. Does not implicitly {@link osmosis.superfluid.MsgLockAndSuperfluidDelegate.verify|verify} messages.
             * @param message MsgLockAndSuperfluidDelegate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgLockAndSuperfluidDelegate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgLockAndSuperfluidDelegate message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgLockAndSuperfluidDelegate.verify|verify} messages.
             * @param message MsgLockAndSuperfluidDelegate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgLockAndSuperfluidDelegate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgLockAndSuperfluidDelegate message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgLockAndSuperfluidDelegate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgLockAndSuperfluidDelegate;

            /**
             * Decodes a MsgLockAndSuperfluidDelegate message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgLockAndSuperfluidDelegate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgLockAndSuperfluidDelegate;

            /**
             * Verifies a MsgLockAndSuperfluidDelegate message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgLockAndSuperfluidDelegate message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgLockAndSuperfluidDelegate
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgLockAndSuperfluidDelegate;

            /**
             * Creates a plain object from a MsgLockAndSuperfluidDelegate message. Also converts values to other types if specified.
             * @param message MsgLockAndSuperfluidDelegate
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgLockAndSuperfluidDelegate, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgLockAndSuperfluidDelegate to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgLockAndSuperfluidDelegateResponse. */
        interface IMsgLockAndSuperfluidDelegateResponse {

            /** MsgLockAndSuperfluidDelegateResponse ID */
            ID?: (Long|null);
        }

        /** Represents a MsgLockAndSuperfluidDelegateResponse. */
        class MsgLockAndSuperfluidDelegateResponse implements IMsgLockAndSuperfluidDelegateResponse {

            /**
             * Constructs a new MsgLockAndSuperfluidDelegateResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgLockAndSuperfluidDelegateResponse);

            /** MsgLockAndSuperfluidDelegateResponse ID. */
            public ID: Long;

            /**
             * Encodes the specified MsgLockAndSuperfluidDelegateResponse message. Does not implicitly {@link osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse.verify|verify} messages.
             * @param message MsgLockAndSuperfluidDelegateResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgLockAndSuperfluidDelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgLockAndSuperfluidDelegateResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse.verify|verify} messages.
             * @param message MsgLockAndSuperfluidDelegateResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgLockAndSuperfluidDelegateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgLockAndSuperfluidDelegateResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgLockAndSuperfluidDelegateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse;

            /**
             * Decodes a MsgLockAndSuperfluidDelegateResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgLockAndSuperfluidDelegateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse;

            /**
             * Verifies a MsgLockAndSuperfluidDelegateResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgLockAndSuperfluidDelegateResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgLockAndSuperfluidDelegateResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse;

            /**
             * Creates a plain object from a MsgLockAndSuperfluidDelegateResponse message. Also converts values to other types if specified.
             * @param message MsgLockAndSuperfluidDelegateResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgLockAndSuperfluidDelegateResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgUnPoolWhitelistedPool. */
        interface IMsgUnPoolWhitelistedPool {

            /** MsgUnPoolWhitelistedPool sender */
            sender?: (string|null);

            /** MsgUnPoolWhitelistedPool pool_id */
            pool_id?: (Long|null);
        }

        /** Represents a MsgUnPoolWhitelistedPool. */
        class MsgUnPoolWhitelistedPool implements IMsgUnPoolWhitelistedPool {

            /**
             * Constructs a new MsgUnPoolWhitelistedPool.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgUnPoolWhitelistedPool);

            /** MsgUnPoolWhitelistedPool sender. */
            public sender: string;

            /** MsgUnPoolWhitelistedPool pool_id. */
            public pool_id: Long;

            /**
             * Encodes the specified MsgUnPoolWhitelistedPool message. Does not implicitly {@link osmosis.superfluid.MsgUnPoolWhitelistedPool.verify|verify} messages.
             * @param message MsgUnPoolWhitelistedPool message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgUnPoolWhitelistedPool, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgUnPoolWhitelistedPool message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgUnPoolWhitelistedPool.verify|verify} messages.
             * @param message MsgUnPoolWhitelistedPool message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgUnPoolWhitelistedPool, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgUnPoolWhitelistedPool message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUnPoolWhitelistedPool
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgUnPoolWhitelistedPool;

            /**
             * Decodes a MsgUnPoolWhitelistedPool message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUnPoolWhitelistedPool
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgUnPoolWhitelistedPool;

            /**
             * Verifies a MsgUnPoolWhitelistedPool message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUnPoolWhitelistedPool message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUnPoolWhitelistedPool
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgUnPoolWhitelistedPool;

            /**
             * Creates a plain object from a MsgUnPoolWhitelistedPool message. Also converts values to other types if specified.
             * @param message MsgUnPoolWhitelistedPool
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgUnPoolWhitelistedPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUnPoolWhitelistedPool to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MsgUnPoolWhitelistedPoolResponse. */
        interface IMsgUnPoolWhitelistedPoolResponse {

            /** MsgUnPoolWhitelistedPoolResponse exited_lock_ids */
            exited_lock_ids?: (Long[]|null);
        }

        /** Represents a MsgUnPoolWhitelistedPoolResponse. */
        class MsgUnPoolWhitelistedPoolResponse implements IMsgUnPoolWhitelistedPoolResponse {

            /**
             * Constructs a new MsgUnPoolWhitelistedPoolResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IMsgUnPoolWhitelistedPoolResponse);

            /** MsgUnPoolWhitelistedPoolResponse exited_lock_ids. */
            public exited_lock_ids: Long[];

            /**
             * Encodes the specified MsgUnPoolWhitelistedPoolResponse message. Does not implicitly {@link osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse.verify|verify} messages.
             * @param message MsgUnPoolWhitelistedPoolResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IMsgUnPoolWhitelistedPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsgUnPoolWhitelistedPoolResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse.verify|verify} messages.
             * @param message MsgUnPoolWhitelistedPoolResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IMsgUnPoolWhitelistedPoolResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsgUnPoolWhitelistedPoolResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgUnPoolWhitelistedPoolResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse;

            /**
             * Decodes a MsgUnPoolWhitelistedPoolResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsgUnPoolWhitelistedPoolResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse;

            /**
             * Verifies a MsgUnPoolWhitelistedPoolResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsgUnPoolWhitelistedPoolResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsgUnPoolWhitelistedPoolResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse;

            /**
             * Creates a plain object from a MsgUnPoolWhitelistedPoolResponse message. Also converts values to other types if specified.
             * @param message MsgUnPoolWhitelistedPoolResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsgUnPoolWhitelistedPoolResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** SuperfluidAssetType enum. */
        enum SuperfluidAssetType {
            SuperfluidAssetTypeNative = 0,
            SuperfluidAssetTypeLPShare = 1
        }

        /** Properties of a SuperfluidAsset. */
        interface ISuperfluidAsset {

            /** SuperfluidAsset denom */
            denom?: (string|null);

            /** SuperfluidAsset asset_type */
            asset_type?: (osmosis.superfluid.SuperfluidAssetType|null);
        }

        /** Represents a SuperfluidAsset. */
        class SuperfluidAsset implements ISuperfluidAsset {

            /**
             * Constructs a new SuperfluidAsset.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidAsset);

            /** SuperfluidAsset denom. */
            public denom: string;

            /** SuperfluidAsset asset_type. */
            public asset_type: osmosis.superfluid.SuperfluidAssetType;

            /**
             * Encodes the specified SuperfluidAsset message. Does not implicitly {@link osmosis.superfluid.SuperfluidAsset.verify|verify} messages.
             * @param message SuperfluidAsset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidAsset message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidAsset.verify|verify} messages.
             * @param message SuperfluidAsset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidAsset message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidAsset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidAsset;

            /**
             * Decodes a SuperfluidAsset message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidAsset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidAsset;

            /**
             * Verifies a SuperfluidAsset message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidAsset message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidAsset
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidAsset;

            /**
             * Creates a plain object from a SuperfluidAsset message. Also converts values to other types if specified.
             * @param message SuperfluidAsset
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidAsset, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidAsset to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidIntermediaryAccount. */
        interface ISuperfluidIntermediaryAccount {

            /** SuperfluidIntermediaryAccount denom */
            denom?: (string|null);

            /** SuperfluidIntermediaryAccount val_addr */
            val_addr?: (string|null);

            /** SuperfluidIntermediaryAccount gauge_id */
            gauge_id?: (Long|null);
        }

        /** Represents a SuperfluidIntermediaryAccount. */
        class SuperfluidIntermediaryAccount implements ISuperfluidIntermediaryAccount {

            /**
             * Constructs a new SuperfluidIntermediaryAccount.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidIntermediaryAccount);

            /** SuperfluidIntermediaryAccount denom. */
            public denom: string;

            /** SuperfluidIntermediaryAccount val_addr. */
            public val_addr: string;

            /** SuperfluidIntermediaryAccount gauge_id. */
            public gauge_id: Long;

            /**
             * Encodes the specified SuperfluidIntermediaryAccount message. Does not implicitly {@link osmosis.superfluid.SuperfluidIntermediaryAccount.verify|verify} messages.
             * @param message SuperfluidIntermediaryAccount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidIntermediaryAccount, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidIntermediaryAccount message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidIntermediaryAccount.verify|verify} messages.
             * @param message SuperfluidIntermediaryAccount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidIntermediaryAccount, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidIntermediaryAccount message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidIntermediaryAccount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidIntermediaryAccount;

            /**
             * Decodes a SuperfluidIntermediaryAccount message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidIntermediaryAccount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidIntermediaryAccount;

            /**
             * Verifies a SuperfluidIntermediaryAccount message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidIntermediaryAccount message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidIntermediaryAccount
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidIntermediaryAccount;

            /**
             * Creates a plain object from a SuperfluidIntermediaryAccount message. Also converts values to other types if specified.
             * @param message SuperfluidIntermediaryAccount
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidIntermediaryAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidIntermediaryAccount to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an OsmoEquivalentMultiplierRecord. */
        interface IOsmoEquivalentMultiplierRecord {

            /** OsmoEquivalentMultiplierRecord epoch_number */
            epoch_number?: (Long|null);

            /** OsmoEquivalentMultiplierRecord denom */
            denom?: (string|null);

            /** OsmoEquivalentMultiplierRecord multiplier */
            multiplier?: (string|null);
        }

        /** Represents an OsmoEquivalentMultiplierRecord. */
        class OsmoEquivalentMultiplierRecord implements IOsmoEquivalentMultiplierRecord {

            /**
             * Constructs a new OsmoEquivalentMultiplierRecord.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IOsmoEquivalentMultiplierRecord);

            /** OsmoEquivalentMultiplierRecord epoch_number. */
            public epoch_number: Long;

            /** OsmoEquivalentMultiplierRecord denom. */
            public denom: string;

            /** OsmoEquivalentMultiplierRecord multiplier. */
            public multiplier: string;

            /**
             * Encodes the specified OsmoEquivalentMultiplierRecord message. Does not implicitly {@link osmosis.superfluid.OsmoEquivalentMultiplierRecord.verify|verify} messages.
             * @param message OsmoEquivalentMultiplierRecord message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IOsmoEquivalentMultiplierRecord, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OsmoEquivalentMultiplierRecord message, length delimited. Does not implicitly {@link osmosis.superfluid.OsmoEquivalentMultiplierRecord.verify|verify} messages.
             * @param message OsmoEquivalentMultiplierRecord message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IOsmoEquivalentMultiplierRecord, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OsmoEquivalentMultiplierRecord message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OsmoEquivalentMultiplierRecord
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.OsmoEquivalentMultiplierRecord;

            /**
             * Decodes an OsmoEquivalentMultiplierRecord message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OsmoEquivalentMultiplierRecord
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.OsmoEquivalentMultiplierRecord;

            /**
             * Verifies an OsmoEquivalentMultiplierRecord message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OsmoEquivalentMultiplierRecord message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OsmoEquivalentMultiplierRecord
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.OsmoEquivalentMultiplierRecord;

            /**
             * Creates a plain object from an OsmoEquivalentMultiplierRecord message. Also converts values to other types if specified.
             * @param message OsmoEquivalentMultiplierRecord
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.OsmoEquivalentMultiplierRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OsmoEquivalentMultiplierRecord to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidDelegationRecord. */
        interface ISuperfluidDelegationRecord {

            /** SuperfluidDelegationRecord delegator_address */
            delegator_address?: (string|null);

            /** SuperfluidDelegationRecord validator_address */
            validator_address?: (string|null);

            /** SuperfluidDelegationRecord delegation_amount */
            delegation_amount?: (cosmos.base.v1beta1.ICoin|null);

            /** SuperfluidDelegationRecord equivalent_staked_amount */
            equivalent_staked_amount?: (cosmos.base.v1beta1.ICoin|null);
        }

        /** Represents a SuperfluidDelegationRecord. */
        class SuperfluidDelegationRecord implements ISuperfluidDelegationRecord {

            /**
             * Constructs a new SuperfluidDelegationRecord.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidDelegationRecord);

            /** SuperfluidDelegationRecord delegator_address. */
            public delegator_address: string;

            /** SuperfluidDelegationRecord validator_address. */
            public validator_address: string;

            /** SuperfluidDelegationRecord delegation_amount. */
            public delegation_amount?: (cosmos.base.v1beta1.ICoin|null);

            /** SuperfluidDelegationRecord equivalent_staked_amount. */
            public equivalent_staked_amount?: (cosmos.base.v1beta1.ICoin|null);

            /**
             * Encodes the specified SuperfluidDelegationRecord message. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationRecord.verify|verify} messages.
             * @param message SuperfluidDelegationRecord message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidDelegationRecord, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidDelegationRecord message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationRecord.verify|verify} messages.
             * @param message SuperfluidDelegationRecord message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidDelegationRecord, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidDelegationRecord message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidDelegationRecord
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidDelegationRecord;

            /**
             * Decodes a SuperfluidDelegationRecord message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidDelegationRecord
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidDelegationRecord;

            /**
             * Verifies a SuperfluidDelegationRecord message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidDelegationRecord message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidDelegationRecord
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidDelegationRecord;

            /**
             * Creates a plain object from a SuperfluidDelegationRecord message. Also converts values to other types if specified.
             * @param message SuperfluidDelegationRecord
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidDelegationRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidDelegationRecord to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LockIdIntermediaryAccountConnection. */
        interface ILockIdIntermediaryAccountConnection {

            /** LockIdIntermediaryAccountConnection lock_id */
            lock_id?: (Long|null);

            /** LockIdIntermediaryAccountConnection intermediary_account */
            intermediary_account?: (string|null);
        }

        /** Represents a LockIdIntermediaryAccountConnection. */
        class LockIdIntermediaryAccountConnection implements ILockIdIntermediaryAccountConnection {

            /**
             * Constructs a new LockIdIntermediaryAccountConnection.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ILockIdIntermediaryAccountConnection);

            /** LockIdIntermediaryAccountConnection lock_id. */
            public lock_id: Long;

            /** LockIdIntermediaryAccountConnection intermediary_account. */
            public intermediary_account: string;

            /**
             * Encodes the specified LockIdIntermediaryAccountConnection message. Does not implicitly {@link osmosis.superfluid.LockIdIntermediaryAccountConnection.verify|verify} messages.
             * @param message LockIdIntermediaryAccountConnection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ILockIdIntermediaryAccountConnection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LockIdIntermediaryAccountConnection message, length delimited. Does not implicitly {@link osmosis.superfluid.LockIdIntermediaryAccountConnection.verify|verify} messages.
             * @param message LockIdIntermediaryAccountConnection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ILockIdIntermediaryAccountConnection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LockIdIntermediaryAccountConnection message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LockIdIntermediaryAccountConnection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.LockIdIntermediaryAccountConnection;

            /**
             * Decodes a LockIdIntermediaryAccountConnection message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LockIdIntermediaryAccountConnection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.LockIdIntermediaryAccountConnection;

            /**
             * Verifies a LockIdIntermediaryAccountConnection message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LockIdIntermediaryAccountConnection message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LockIdIntermediaryAccountConnection
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.LockIdIntermediaryAccountConnection;

            /**
             * Creates a plain object from a LockIdIntermediaryAccountConnection message. Also converts values to other types if specified.
             * @param message LockIdIntermediaryAccountConnection
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.LockIdIntermediaryAccountConnection, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LockIdIntermediaryAccountConnection to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UnpoolWhitelistedPools. */
        interface IUnpoolWhitelistedPools {

            /** UnpoolWhitelistedPools ids */
            ids?: (Long[]|null);
        }

        /** Represents an UnpoolWhitelistedPools. */
        class UnpoolWhitelistedPools implements IUnpoolWhitelistedPools {

            /**
             * Constructs a new UnpoolWhitelistedPools.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IUnpoolWhitelistedPools);

            /** UnpoolWhitelistedPools ids. */
            public ids: Long[];

            /**
             * Encodes the specified UnpoolWhitelistedPools message. Does not implicitly {@link osmosis.superfluid.UnpoolWhitelistedPools.verify|verify} messages.
             * @param message UnpoolWhitelistedPools message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IUnpoolWhitelistedPools, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UnpoolWhitelistedPools message, length delimited. Does not implicitly {@link osmosis.superfluid.UnpoolWhitelistedPools.verify|verify} messages.
             * @param message UnpoolWhitelistedPools message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IUnpoolWhitelistedPools, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UnpoolWhitelistedPools message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UnpoolWhitelistedPools
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.UnpoolWhitelistedPools;

            /**
             * Decodes an UnpoolWhitelistedPools message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UnpoolWhitelistedPools
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.UnpoolWhitelistedPools;

            /**
             * Verifies an UnpoolWhitelistedPools message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UnpoolWhitelistedPools message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UnpoolWhitelistedPools
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.UnpoolWhitelistedPools;

            /**
             * Creates a plain object from an UnpoolWhitelistedPools message. Also converts values to other types if specified.
             * @param message UnpoolWhitelistedPools
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.UnpoolWhitelistedPools, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UnpoolWhitelistedPools to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a Query */
        class Query extends $protobuf.rpc.Service {

            /**
             * Constructs a new Query service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Calls Params.
             * @param request QueryParamsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
             */
            public params(request: osmosis.superfluid.IQueryParamsRequest, callback: osmosis.superfluid.Query.ParamsCallback): void;

            /**
             * Calls Params.
             * @param request QueryParamsRequest message or plain object
             * @returns Promise
             */
            public params(request: osmosis.superfluid.IQueryParamsRequest): Promise<osmosis.superfluid.QueryParamsResponse>;

            /**
             * Calls AssetType.
             * @param request AssetTypeRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AssetTypeResponse
             */
            public assetType(request: osmosis.superfluid.IAssetTypeRequest, callback: osmosis.superfluid.Query.AssetTypeCallback): void;

            /**
             * Calls AssetType.
             * @param request AssetTypeRequest message or plain object
             * @returns Promise
             */
            public assetType(request: osmosis.superfluid.IAssetTypeRequest): Promise<osmosis.superfluid.AssetTypeResponse>;

            /**
             * Calls AllAssets.
             * @param request AllAssetsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AllAssetsResponse
             */
            public allAssets(request: osmosis.superfluid.IAllAssetsRequest, callback: osmosis.superfluid.Query.AllAssetsCallback): void;

            /**
             * Calls AllAssets.
             * @param request AllAssetsRequest message or plain object
             * @returns Promise
             */
            public allAssets(request: osmosis.superfluid.IAllAssetsRequest): Promise<osmosis.superfluid.AllAssetsResponse>;

            /**
             * Calls AssetMultiplier.
             * @param request AssetMultiplierRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AssetMultiplierResponse
             */
            public assetMultiplier(request: osmosis.superfluid.IAssetMultiplierRequest, callback: osmosis.superfluid.Query.AssetMultiplierCallback): void;

            /**
             * Calls AssetMultiplier.
             * @param request AssetMultiplierRequest message or plain object
             * @returns Promise
             */
            public assetMultiplier(request: osmosis.superfluid.IAssetMultiplierRequest): Promise<osmosis.superfluid.AssetMultiplierResponse>;

            /**
             * Calls AllIntermediaryAccounts.
             * @param request AllIntermediaryAccountsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and AllIntermediaryAccountsResponse
             */
            public allIntermediaryAccounts(request: osmosis.superfluid.IAllIntermediaryAccountsRequest, callback: osmosis.superfluid.Query.AllIntermediaryAccountsCallback): void;

            /**
             * Calls AllIntermediaryAccounts.
             * @param request AllIntermediaryAccountsRequest message or plain object
             * @returns Promise
             */
            public allIntermediaryAccounts(request: osmosis.superfluid.IAllIntermediaryAccountsRequest): Promise<osmosis.superfluid.AllIntermediaryAccountsResponse>;

            /**
             * Calls ConnectedIntermediaryAccount.
             * @param request ConnectedIntermediaryAccountRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and ConnectedIntermediaryAccountResponse
             */
            public connectedIntermediaryAccount(request: osmosis.superfluid.IConnectedIntermediaryAccountRequest, callback: osmosis.superfluid.Query.ConnectedIntermediaryAccountCallback): void;

            /**
             * Calls ConnectedIntermediaryAccount.
             * @param request ConnectedIntermediaryAccountRequest message or plain object
             * @returns Promise
             */
            public connectedIntermediaryAccount(request: osmosis.superfluid.IConnectedIntermediaryAccountRequest): Promise<osmosis.superfluid.ConnectedIntermediaryAccountResponse>;

            /**
             * Calls TotalDelegationByValidatorForDenom.
             * @param request QueryTotalDelegationByValidatorForDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and QueryTotalDelegationByValidatorForDenomResponse
             */
            public totalDelegationByValidatorForDenom(request: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomRequest, callback: osmosis.superfluid.Query.TotalDelegationByValidatorForDenomCallback): void;

            /**
             * Calls TotalDelegationByValidatorForDenom.
             * @param request QueryTotalDelegationByValidatorForDenomRequest message or plain object
             * @returns Promise
             */
            public totalDelegationByValidatorForDenom(request: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomRequest): Promise<osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse>;

            /**
             * Calls TotalSuperfluidDelegations.
             * @param request TotalSuperfluidDelegationsRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and TotalSuperfluidDelegationsResponse
             */
            public totalSuperfluidDelegations(request: osmosis.superfluid.ITotalSuperfluidDelegationsRequest, callback: osmosis.superfluid.Query.TotalSuperfluidDelegationsCallback): void;

            /**
             * Calls TotalSuperfluidDelegations.
             * @param request TotalSuperfluidDelegationsRequest message or plain object
             * @returns Promise
             */
            public totalSuperfluidDelegations(request: osmosis.superfluid.ITotalSuperfluidDelegationsRequest): Promise<osmosis.superfluid.TotalSuperfluidDelegationsResponse>;

            /**
             * Calls SuperfluidDelegationAmount.
             * @param request SuperfluidDelegationAmountRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and SuperfluidDelegationAmountResponse
             */
            public superfluidDelegationAmount(request: osmosis.superfluid.ISuperfluidDelegationAmountRequest, callback: osmosis.superfluid.Query.SuperfluidDelegationAmountCallback): void;

            /**
             * Calls SuperfluidDelegationAmount.
             * @param request SuperfluidDelegationAmountRequest message or plain object
             * @returns Promise
             */
            public superfluidDelegationAmount(request: osmosis.superfluid.ISuperfluidDelegationAmountRequest): Promise<osmosis.superfluid.SuperfluidDelegationAmountResponse>;

            /**
             * Calls SuperfluidDelegationsByDelegator.
             * @param request SuperfluidDelegationsByDelegatorRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and SuperfluidDelegationsByDelegatorResponse
             */
            public superfluidDelegationsByDelegator(request: osmosis.superfluid.ISuperfluidDelegationsByDelegatorRequest, callback: osmosis.superfluid.Query.SuperfluidDelegationsByDelegatorCallback): void;

            /**
             * Calls SuperfluidDelegationsByDelegator.
             * @param request SuperfluidDelegationsByDelegatorRequest message or plain object
             * @returns Promise
             */
            public superfluidDelegationsByDelegator(request: osmosis.superfluid.ISuperfluidDelegationsByDelegatorRequest): Promise<osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse>;

            /**
             * Calls SuperfluidUndelegationsByDelegator.
             * @param request SuperfluidUndelegationsByDelegatorRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and SuperfluidUndelegationsByDelegatorResponse
             */
            public superfluidUndelegationsByDelegator(request: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorRequest, callback: osmosis.superfluid.Query.SuperfluidUndelegationsByDelegatorCallback): void;

            /**
             * Calls SuperfluidUndelegationsByDelegator.
             * @param request SuperfluidUndelegationsByDelegatorRequest message or plain object
             * @returns Promise
             */
            public superfluidUndelegationsByDelegator(request: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorRequest): Promise<osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse>;

            /**
             * Calls SuperfluidDelegationsByValidatorDenom.
             * @param request SuperfluidDelegationsByValidatorDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and SuperfluidDelegationsByValidatorDenomResponse
             */
            public superfluidDelegationsByValidatorDenom(request: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomRequest, callback: osmosis.superfluid.Query.SuperfluidDelegationsByValidatorDenomCallback): void;

            /**
             * Calls SuperfluidDelegationsByValidatorDenom.
             * @param request SuperfluidDelegationsByValidatorDenomRequest message or plain object
             * @returns Promise
             */
            public superfluidDelegationsByValidatorDenom(request: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomRequest): Promise<osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse>;

            /**
             * Calls EstimateSuperfluidDelegatedAmountByValidatorDenom.
             * @param request EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and EstimateSuperfluidDelegatedAmountByValidatorDenomResponse
             */
            public estimateSuperfluidDelegatedAmountByValidatorDenom(request: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomRequest, callback: osmosis.superfluid.Query.EstimateSuperfluidDelegatedAmountByValidatorDenomCallback): void;

            /**
             * Calls EstimateSuperfluidDelegatedAmountByValidatorDenom.
             * @param request EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message or plain object
             * @returns Promise
             */
            public estimateSuperfluidDelegatedAmountByValidatorDenom(request: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomRequest): Promise<osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse>;

            /**
             * Calls TotalDelegationByDelegator.
             * @param request QueryTotalDelegationByDelegatorRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and QueryTotalDelegationByDelegatorResponse
             */
            public totalDelegationByDelegator(request: osmosis.superfluid.IQueryTotalDelegationByDelegatorRequest, callback: osmosis.superfluid.Query.TotalDelegationByDelegatorCallback): void;

            /**
             * Calls TotalDelegationByDelegator.
             * @param request QueryTotalDelegationByDelegatorRequest message or plain object
             * @returns Promise
             */
            public totalDelegationByDelegator(request: osmosis.superfluid.IQueryTotalDelegationByDelegatorRequest): Promise<osmosis.superfluid.QueryTotalDelegationByDelegatorResponse>;

            /**
             * Calls UnpoolWhitelist.
             * @param request QueryUnpoolWhitelistRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and QueryUnpoolWhitelistResponse
             */
            public unpoolWhitelist(request: osmosis.superfluid.IQueryUnpoolWhitelistRequest, callback: osmosis.superfluid.Query.UnpoolWhitelistCallback): void;

            /**
             * Calls UnpoolWhitelist.
             * @param request QueryUnpoolWhitelistRequest message or plain object
             * @returns Promise
             */
            public unpoolWhitelist(request: osmosis.superfluid.IQueryUnpoolWhitelistRequest): Promise<osmosis.superfluid.QueryUnpoolWhitelistResponse>;
        }

        namespace Query {

            /**
             * Callback as used by {@link osmosis.superfluid.Query#params}.
             * @param error Error, if any
             * @param [response] QueryParamsResponse
             */
            type ParamsCallback = (error: (Error|null), response?: osmosis.superfluid.QueryParamsResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#assetType}.
             * @param error Error, if any
             * @param [response] AssetTypeResponse
             */
            type AssetTypeCallback = (error: (Error|null), response?: osmosis.superfluid.AssetTypeResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#allAssets}.
             * @param error Error, if any
             * @param [response] AllAssetsResponse
             */
            type AllAssetsCallback = (error: (Error|null), response?: osmosis.superfluid.AllAssetsResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#assetMultiplier}.
             * @param error Error, if any
             * @param [response] AssetMultiplierResponse
             */
            type AssetMultiplierCallback = (error: (Error|null), response?: osmosis.superfluid.AssetMultiplierResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#allIntermediaryAccounts}.
             * @param error Error, if any
             * @param [response] AllIntermediaryAccountsResponse
             */
            type AllIntermediaryAccountsCallback = (error: (Error|null), response?: osmosis.superfluid.AllIntermediaryAccountsResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#connectedIntermediaryAccount}.
             * @param error Error, if any
             * @param [response] ConnectedIntermediaryAccountResponse
             */
            type ConnectedIntermediaryAccountCallback = (error: (Error|null), response?: osmosis.superfluid.ConnectedIntermediaryAccountResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#totalDelegationByValidatorForDenom}.
             * @param error Error, if any
             * @param [response] QueryTotalDelegationByValidatorForDenomResponse
             */
            type TotalDelegationByValidatorForDenomCallback = (error: (Error|null), response?: osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#totalSuperfluidDelegations}.
             * @param error Error, if any
             * @param [response] TotalSuperfluidDelegationsResponse
             */
            type TotalSuperfluidDelegationsCallback = (error: (Error|null), response?: osmosis.superfluid.TotalSuperfluidDelegationsResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#superfluidDelegationAmount}.
             * @param error Error, if any
             * @param [response] SuperfluidDelegationAmountResponse
             */
            type SuperfluidDelegationAmountCallback = (error: (Error|null), response?: osmosis.superfluid.SuperfluidDelegationAmountResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#superfluidDelegationsByDelegator}.
             * @param error Error, if any
             * @param [response] SuperfluidDelegationsByDelegatorResponse
             */
            type SuperfluidDelegationsByDelegatorCallback = (error: (Error|null), response?: osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#superfluidUndelegationsByDelegator}.
             * @param error Error, if any
             * @param [response] SuperfluidUndelegationsByDelegatorResponse
             */
            type SuperfluidUndelegationsByDelegatorCallback = (error: (Error|null), response?: osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#superfluidDelegationsByValidatorDenom}.
             * @param error Error, if any
             * @param [response] SuperfluidDelegationsByValidatorDenomResponse
             */
            type SuperfluidDelegationsByValidatorDenomCallback = (error: (Error|null), response?: osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#estimateSuperfluidDelegatedAmountByValidatorDenom}.
             * @param error Error, if any
             * @param [response] EstimateSuperfluidDelegatedAmountByValidatorDenomResponse
             */
            type EstimateSuperfluidDelegatedAmountByValidatorDenomCallback = (error: (Error|null), response?: osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#totalDelegationByDelegator}.
             * @param error Error, if any
             * @param [response] QueryTotalDelegationByDelegatorResponse
             */
            type TotalDelegationByDelegatorCallback = (error: (Error|null), response?: osmosis.superfluid.QueryTotalDelegationByDelegatorResponse) => void;

            /**
             * Callback as used by {@link osmosis.superfluid.Query#unpoolWhitelist}.
             * @param error Error, if any
             * @param [response] QueryUnpoolWhitelistResponse
             */
            type UnpoolWhitelistCallback = (error: (Error|null), response?: osmosis.superfluid.QueryUnpoolWhitelistResponse) => void;
        }

        /** Properties of a QueryParamsRequest. */
        interface IQueryParamsRequest {
        }

        /** Represents a QueryParamsRequest. */
        class QueryParamsRequest implements IQueryParamsRequest {

            /**
             * Constructs a new QueryParamsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryParamsRequest);

            /**
             * Encodes the specified QueryParamsRequest message. Does not implicitly {@link osmosis.superfluid.QueryParamsRequest.verify|verify} messages.
             * @param message QueryParamsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryParamsRequest.verify|verify} messages.
             * @param message QueryParamsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryParamsRequest;

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryParamsRequest;

            /**
             * Verifies a QueryParamsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryParamsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryParamsRequest;

            /**
             * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
             * @param message QueryParamsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryParamsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryParamsResponse. */
        interface IQueryParamsResponse {

            /** QueryParamsResponse params */
            params?: (osmosis.superfluid.IParams|null);
        }

        /** Represents a QueryParamsResponse. */
        class QueryParamsResponse implements IQueryParamsResponse {

            /**
             * Constructs a new QueryParamsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryParamsResponse);

            /** QueryParamsResponse params. */
            public params?: (osmosis.superfluid.IParams|null);

            /**
             * Encodes the specified QueryParamsResponse message. Does not implicitly {@link osmosis.superfluid.QueryParamsResponse.verify|verify} messages.
             * @param message QueryParamsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryParamsResponse.verify|verify} messages.
             * @param message QueryParamsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryParamsResponse;

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryParamsResponse;

            /**
             * Verifies a QueryParamsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryParamsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryParamsResponse;

            /**
             * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
             * @param message QueryParamsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryParamsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AssetTypeRequest. */
        interface IAssetTypeRequest {

            /** AssetTypeRequest denom */
            denom?: (string|null);
        }

        /** Represents an AssetTypeRequest. */
        class AssetTypeRequest implements IAssetTypeRequest {

            /**
             * Constructs a new AssetTypeRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAssetTypeRequest);

            /** AssetTypeRequest denom. */
            public denom: string;

            /**
             * Encodes the specified AssetTypeRequest message. Does not implicitly {@link osmosis.superfluid.AssetTypeRequest.verify|verify} messages.
             * @param message AssetTypeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAssetTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetTypeRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.AssetTypeRequest.verify|verify} messages.
             * @param message AssetTypeRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAssetTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetTypeRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetTypeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AssetTypeRequest;

            /**
             * Decodes an AssetTypeRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetTypeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AssetTypeRequest;

            /**
             * Verifies an AssetTypeRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetTypeRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetTypeRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AssetTypeRequest;

            /**
             * Creates a plain object from an AssetTypeRequest message. Also converts values to other types if specified.
             * @param message AssetTypeRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AssetTypeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetTypeRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AssetTypeResponse. */
        interface IAssetTypeResponse {

            /** AssetTypeResponse asset_type */
            asset_type?: (osmosis.superfluid.SuperfluidAssetType|null);
        }

        /** Represents an AssetTypeResponse. */
        class AssetTypeResponse implements IAssetTypeResponse {

            /**
             * Constructs a new AssetTypeResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAssetTypeResponse);

            /** AssetTypeResponse asset_type. */
            public asset_type: osmosis.superfluid.SuperfluidAssetType;

            /**
             * Encodes the specified AssetTypeResponse message. Does not implicitly {@link osmosis.superfluid.AssetTypeResponse.verify|verify} messages.
             * @param message AssetTypeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAssetTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetTypeResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.AssetTypeResponse.verify|verify} messages.
             * @param message AssetTypeResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAssetTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetTypeResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetTypeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AssetTypeResponse;

            /**
             * Decodes an AssetTypeResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetTypeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AssetTypeResponse;

            /**
             * Verifies an AssetTypeResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetTypeResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetTypeResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AssetTypeResponse;

            /**
             * Creates a plain object from an AssetTypeResponse message. Also converts values to other types if specified.
             * @param message AssetTypeResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AssetTypeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetTypeResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AllAssetsRequest. */
        interface IAllAssetsRequest {
        }

        /** Represents an AllAssetsRequest. */
        class AllAssetsRequest implements IAllAssetsRequest {

            /**
             * Constructs a new AllAssetsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAllAssetsRequest);

            /**
             * Encodes the specified AllAssetsRequest message. Does not implicitly {@link osmosis.superfluid.AllAssetsRequest.verify|verify} messages.
             * @param message AllAssetsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAllAssetsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AllAssetsRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.AllAssetsRequest.verify|verify} messages.
             * @param message AllAssetsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAllAssetsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AllAssetsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AllAssetsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AllAssetsRequest;

            /**
             * Decodes an AllAssetsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AllAssetsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AllAssetsRequest;

            /**
             * Verifies an AllAssetsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AllAssetsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AllAssetsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AllAssetsRequest;

            /**
             * Creates a plain object from an AllAssetsRequest message. Also converts values to other types if specified.
             * @param message AllAssetsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AllAssetsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AllAssetsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AllAssetsResponse. */
        interface IAllAssetsResponse {

            /** AllAssetsResponse assets */
            assets?: (osmosis.superfluid.ISuperfluidAsset[]|null);
        }

        /** Represents an AllAssetsResponse. */
        class AllAssetsResponse implements IAllAssetsResponse {

            /**
             * Constructs a new AllAssetsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAllAssetsResponse);

            /** AllAssetsResponse assets. */
            public assets: osmosis.superfluid.ISuperfluidAsset[];

            /**
             * Encodes the specified AllAssetsResponse message. Does not implicitly {@link osmosis.superfluid.AllAssetsResponse.verify|verify} messages.
             * @param message AllAssetsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAllAssetsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AllAssetsResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.AllAssetsResponse.verify|verify} messages.
             * @param message AllAssetsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAllAssetsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AllAssetsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AllAssetsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AllAssetsResponse;

            /**
             * Decodes an AllAssetsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AllAssetsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AllAssetsResponse;

            /**
             * Verifies an AllAssetsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AllAssetsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AllAssetsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AllAssetsResponse;

            /**
             * Creates a plain object from an AllAssetsResponse message. Also converts values to other types if specified.
             * @param message AllAssetsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AllAssetsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AllAssetsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AssetMultiplierRequest. */
        interface IAssetMultiplierRequest {

            /** AssetMultiplierRequest denom */
            denom?: (string|null);
        }

        /** Represents an AssetMultiplierRequest. */
        class AssetMultiplierRequest implements IAssetMultiplierRequest {

            /**
             * Constructs a new AssetMultiplierRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAssetMultiplierRequest);

            /** AssetMultiplierRequest denom. */
            public denom: string;

            /**
             * Encodes the specified AssetMultiplierRequest message. Does not implicitly {@link osmosis.superfluid.AssetMultiplierRequest.verify|verify} messages.
             * @param message AssetMultiplierRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAssetMultiplierRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetMultiplierRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.AssetMultiplierRequest.verify|verify} messages.
             * @param message AssetMultiplierRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAssetMultiplierRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetMultiplierRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetMultiplierRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AssetMultiplierRequest;

            /**
             * Decodes an AssetMultiplierRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetMultiplierRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AssetMultiplierRequest;

            /**
             * Verifies an AssetMultiplierRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetMultiplierRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetMultiplierRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AssetMultiplierRequest;

            /**
             * Creates a plain object from an AssetMultiplierRequest message. Also converts values to other types if specified.
             * @param message AssetMultiplierRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AssetMultiplierRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetMultiplierRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AssetMultiplierResponse. */
        interface IAssetMultiplierResponse {

            /** AssetMultiplierResponse osmo_equivalent_multiplier */
            osmo_equivalent_multiplier?: (osmosis.superfluid.IOsmoEquivalentMultiplierRecord|null);
        }

        /** Represents an AssetMultiplierResponse. */
        class AssetMultiplierResponse implements IAssetMultiplierResponse {

            /**
             * Constructs a new AssetMultiplierResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAssetMultiplierResponse);

            /** AssetMultiplierResponse osmo_equivalent_multiplier. */
            public osmo_equivalent_multiplier?: (osmosis.superfluid.IOsmoEquivalentMultiplierRecord|null);

            /**
             * Encodes the specified AssetMultiplierResponse message. Does not implicitly {@link osmosis.superfluid.AssetMultiplierResponse.verify|verify} messages.
             * @param message AssetMultiplierResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAssetMultiplierResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetMultiplierResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.AssetMultiplierResponse.verify|verify} messages.
             * @param message AssetMultiplierResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAssetMultiplierResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetMultiplierResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetMultiplierResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AssetMultiplierResponse;

            /**
             * Decodes an AssetMultiplierResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetMultiplierResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AssetMultiplierResponse;

            /**
             * Verifies an AssetMultiplierResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetMultiplierResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetMultiplierResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AssetMultiplierResponse;

            /**
             * Creates a plain object from an AssetMultiplierResponse message. Also converts values to other types if specified.
             * @param message AssetMultiplierResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AssetMultiplierResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetMultiplierResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidIntermediaryAccountInfo. */
        interface ISuperfluidIntermediaryAccountInfo {

            /** SuperfluidIntermediaryAccountInfo denom */
            denom?: (string|null);

            /** SuperfluidIntermediaryAccountInfo val_addr */
            val_addr?: (string|null);

            /** SuperfluidIntermediaryAccountInfo gauge_id */
            gauge_id?: (Long|null);

            /** SuperfluidIntermediaryAccountInfo address */
            address?: (string|null);
        }

        /** Represents a SuperfluidIntermediaryAccountInfo. */
        class SuperfluidIntermediaryAccountInfo implements ISuperfluidIntermediaryAccountInfo {

            /**
             * Constructs a new SuperfluidIntermediaryAccountInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidIntermediaryAccountInfo);

            /** SuperfluidIntermediaryAccountInfo denom. */
            public denom: string;

            /** SuperfluidIntermediaryAccountInfo val_addr. */
            public val_addr: string;

            /** SuperfluidIntermediaryAccountInfo gauge_id. */
            public gauge_id: Long;

            /** SuperfluidIntermediaryAccountInfo address. */
            public address: string;

            /**
             * Encodes the specified SuperfluidIntermediaryAccountInfo message. Does not implicitly {@link osmosis.superfluid.SuperfluidIntermediaryAccountInfo.verify|verify} messages.
             * @param message SuperfluidIntermediaryAccountInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidIntermediaryAccountInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidIntermediaryAccountInfo message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidIntermediaryAccountInfo.verify|verify} messages.
             * @param message SuperfluidIntermediaryAccountInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidIntermediaryAccountInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidIntermediaryAccountInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidIntermediaryAccountInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidIntermediaryAccountInfo;

            /**
             * Decodes a SuperfluidIntermediaryAccountInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidIntermediaryAccountInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidIntermediaryAccountInfo;

            /**
             * Verifies a SuperfluidIntermediaryAccountInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidIntermediaryAccountInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidIntermediaryAccountInfo
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidIntermediaryAccountInfo;

            /**
             * Creates a plain object from a SuperfluidIntermediaryAccountInfo message. Also converts values to other types if specified.
             * @param message SuperfluidIntermediaryAccountInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidIntermediaryAccountInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidIntermediaryAccountInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AllIntermediaryAccountsRequest. */
        interface IAllIntermediaryAccountsRequest {

            /** AllIntermediaryAccountsRequest pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
        }

        /** Represents an AllIntermediaryAccountsRequest. */
        class AllIntermediaryAccountsRequest implements IAllIntermediaryAccountsRequest {

            /**
             * Constructs a new AllIntermediaryAccountsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAllIntermediaryAccountsRequest);

            /** AllIntermediaryAccountsRequest pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

            /**
             * Encodes the specified AllIntermediaryAccountsRequest message. Does not implicitly {@link osmosis.superfluid.AllIntermediaryAccountsRequest.verify|verify} messages.
             * @param message AllIntermediaryAccountsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAllIntermediaryAccountsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AllIntermediaryAccountsRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.AllIntermediaryAccountsRequest.verify|verify} messages.
             * @param message AllIntermediaryAccountsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAllIntermediaryAccountsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AllIntermediaryAccountsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AllIntermediaryAccountsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AllIntermediaryAccountsRequest;

            /**
             * Decodes an AllIntermediaryAccountsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AllIntermediaryAccountsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AllIntermediaryAccountsRequest;

            /**
             * Verifies an AllIntermediaryAccountsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AllIntermediaryAccountsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AllIntermediaryAccountsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AllIntermediaryAccountsRequest;

            /**
             * Creates a plain object from an AllIntermediaryAccountsRequest message. Also converts values to other types if specified.
             * @param message AllIntermediaryAccountsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AllIntermediaryAccountsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AllIntermediaryAccountsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AllIntermediaryAccountsResponse. */
        interface IAllIntermediaryAccountsResponse {

            /** AllIntermediaryAccountsResponse accounts */
            accounts?: (osmosis.superfluid.ISuperfluidIntermediaryAccountInfo[]|null);

            /** AllIntermediaryAccountsResponse pagination */
            pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
        }

        /** Represents an AllIntermediaryAccountsResponse. */
        class AllIntermediaryAccountsResponse implements IAllIntermediaryAccountsResponse {

            /**
             * Constructs a new AllIntermediaryAccountsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IAllIntermediaryAccountsResponse);

            /** AllIntermediaryAccountsResponse accounts. */
            public accounts: osmosis.superfluid.ISuperfluidIntermediaryAccountInfo[];

            /** AllIntermediaryAccountsResponse pagination. */
            public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

            /**
             * Encodes the specified AllIntermediaryAccountsResponse message. Does not implicitly {@link osmosis.superfluid.AllIntermediaryAccountsResponse.verify|verify} messages.
             * @param message AllIntermediaryAccountsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IAllIntermediaryAccountsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AllIntermediaryAccountsResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.AllIntermediaryAccountsResponse.verify|verify} messages.
             * @param message AllIntermediaryAccountsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IAllIntermediaryAccountsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AllIntermediaryAccountsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AllIntermediaryAccountsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.AllIntermediaryAccountsResponse;

            /**
             * Decodes an AllIntermediaryAccountsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AllIntermediaryAccountsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.AllIntermediaryAccountsResponse;

            /**
             * Verifies an AllIntermediaryAccountsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AllIntermediaryAccountsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AllIntermediaryAccountsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.AllIntermediaryAccountsResponse;

            /**
             * Creates a plain object from an AllIntermediaryAccountsResponse message. Also converts values to other types if specified.
             * @param message AllIntermediaryAccountsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.AllIntermediaryAccountsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AllIntermediaryAccountsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConnectedIntermediaryAccountRequest. */
        interface IConnectedIntermediaryAccountRequest {

            /** ConnectedIntermediaryAccountRequest lock_id */
            lock_id?: (Long|null);
        }

        /** Represents a ConnectedIntermediaryAccountRequest. */
        class ConnectedIntermediaryAccountRequest implements IConnectedIntermediaryAccountRequest {

            /**
             * Constructs a new ConnectedIntermediaryAccountRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IConnectedIntermediaryAccountRequest);

            /** ConnectedIntermediaryAccountRequest lock_id. */
            public lock_id: Long;

            /**
             * Encodes the specified ConnectedIntermediaryAccountRequest message. Does not implicitly {@link osmosis.superfluid.ConnectedIntermediaryAccountRequest.verify|verify} messages.
             * @param message ConnectedIntermediaryAccountRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IConnectedIntermediaryAccountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConnectedIntermediaryAccountRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.ConnectedIntermediaryAccountRequest.verify|verify} messages.
             * @param message ConnectedIntermediaryAccountRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IConnectedIntermediaryAccountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConnectedIntermediaryAccountRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConnectedIntermediaryAccountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.ConnectedIntermediaryAccountRequest;

            /**
             * Decodes a ConnectedIntermediaryAccountRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConnectedIntermediaryAccountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.ConnectedIntermediaryAccountRequest;

            /**
             * Verifies a ConnectedIntermediaryAccountRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConnectedIntermediaryAccountRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConnectedIntermediaryAccountRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.ConnectedIntermediaryAccountRequest;

            /**
             * Creates a plain object from a ConnectedIntermediaryAccountRequest message. Also converts values to other types if specified.
             * @param message ConnectedIntermediaryAccountRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.ConnectedIntermediaryAccountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConnectedIntermediaryAccountRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConnectedIntermediaryAccountResponse. */
        interface IConnectedIntermediaryAccountResponse {

            /** ConnectedIntermediaryAccountResponse account */
            account?: (osmosis.superfluid.ISuperfluidIntermediaryAccountInfo|null);
        }

        /** Represents a ConnectedIntermediaryAccountResponse. */
        class ConnectedIntermediaryAccountResponse implements IConnectedIntermediaryAccountResponse {

            /**
             * Constructs a new ConnectedIntermediaryAccountResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IConnectedIntermediaryAccountResponse);

            /** ConnectedIntermediaryAccountResponse account. */
            public account?: (osmosis.superfluid.ISuperfluidIntermediaryAccountInfo|null);

            /**
             * Encodes the specified ConnectedIntermediaryAccountResponse message. Does not implicitly {@link osmosis.superfluid.ConnectedIntermediaryAccountResponse.verify|verify} messages.
             * @param message ConnectedIntermediaryAccountResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IConnectedIntermediaryAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConnectedIntermediaryAccountResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.ConnectedIntermediaryAccountResponse.verify|verify} messages.
             * @param message ConnectedIntermediaryAccountResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IConnectedIntermediaryAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConnectedIntermediaryAccountResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConnectedIntermediaryAccountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.ConnectedIntermediaryAccountResponse;

            /**
             * Decodes a ConnectedIntermediaryAccountResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConnectedIntermediaryAccountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.ConnectedIntermediaryAccountResponse;

            /**
             * Verifies a ConnectedIntermediaryAccountResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConnectedIntermediaryAccountResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConnectedIntermediaryAccountResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.ConnectedIntermediaryAccountResponse;

            /**
             * Creates a plain object from a ConnectedIntermediaryAccountResponse message. Also converts values to other types if specified.
             * @param message ConnectedIntermediaryAccountResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.ConnectedIntermediaryAccountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConnectedIntermediaryAccountResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryTotalDelegationByValidatorForDenomRequest. */
        interface IQueryTotalDelegationByValidatorForDenomRequest {

            /** QueryTotalDelegationByValidatorForDenomRequest denom */
            denom?: (string|null);
        }

        /** Represents a QueryTotalDelegationByValidatorForDenomRequest. */
        class QueryTotalDelegationByValidatorForDenomRequest implements IQueryTotalDelegationByValidatorForDenomRequest {

            /**
             * Constructs a new QueryTotalDelegationByValidatorForDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomRequest);

            /** QueryTotalDelegationByValidatorForDenomRequest denom. */
            public denom: string;

            /**
             * Encodes the specified QueryTotalDelegationByValidatorForDenomRequest message. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest.verify|verify} messages.
             * @param message QueryTotalDelegationByValidatorForDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryTotalDelegationByValidatorForDenomRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest.verify|verify} messages.
             * @param message QueryTotalDelegationByValidatorForDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryTotalDelegationByValidatorForDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryTotalDelegationByValidatorForDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest;

            /**
             * Decodes a QueryTotalDelegationByValidatorForDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryTotalDelegationByValidatorForDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest;

            /**
             * Verifies a QueryTotalDelegationByValidatorForDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryTotalDelegationByValidatorForDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryTotalDelegationByValidatorForDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest;

            /**
             * Creates a plain object from a QueryTotalDelegationByValidatorForDenomRequest message. Also converts values to other types if specified.
             * @param message QueryTotalDelegationByValidatorForDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryTotalDelegationByValidatorForDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryTotalDelegationByValidatorForDenomResponse. */
        interface IQueryTotalDelegationByValidatorForDenomResponse {

            /** QueryTotalDelegationByValidatorForDenomResponse assets */
            assets?: (osmosis.superfluid.IDelegations[]|null);
        }

        /** Represents a QueryTotalDelegationByValidatorForDenomResponse. */
        class QueryTotalDelegationByValidatorForDenomResponse implements IQueryTotalDelegationByValidatorForDenomResponse {

            /**
             * Constructs a new QueryTotalDelegationByValidatorForDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomResponse);

            /** QueryTotalDelegationByValidatorForDenomResponse assets. */
            public assets: osmosis.superfluid.IDelegations[];

            /**
             * Encodes the specified QueryTotalDelegationByValidatorForDenomResponse message. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse.verify|verify} messages.
             * @param message QueryTotalDelegationByValidatorForDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryTotalDelegationByValidatorForDenomResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse.verify|verify} messages.
             * @param message QueryTotalDelegationByValidatorForDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryTotalDelegationByValidatorForDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryTotalDelegationByValidatorForDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryTotalDelegationByValidatorForDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse;

            /**
             * Decodes a QueryTotalDelegationByValidatorForDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryTotalDelegationByValidatorForDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse;

            /**
             * Verifies a QueryTotalDelegationByValidatorForDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryTotalDelegationByValidatorForDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryTotalDelegationByValidatorForDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse;

            /**
             * Creates a plain object from a QueryTotalDelegationByValidatorForDenomResponse message. Also converts values to other types if specified.
             * @param message QueryTotalDelegationByValidatorForDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryTotalDelegationByValidatorForDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Delegations. */
        interface IDelegations {

            /** Delegations val_addr */
            val_addr?: (string|null);

            /** Delegations amount_sfsd */
            amount_sfsd?: (string|null);

            /** Delegations osmo_equivalent */
            osmo_equivalent?: (string|null);
        }

        /** Represents a Delegations. */
        class Delegations implements IDelegations {

            /**
             * Constructs a new Delegations.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IDelegations);

            /** Delegations val_addr. */
            public val_addr: string;

            /** Delegations amount_sfsd. */
            public amount_sfsd: string;

            /** Delegations osmo_equivalent. */
            public osmo_equivalent: string;

            /**
             * Encodes the specified Delegations message. Does not implicitly {@link osmosis.superfluid.Delegations.verify|verify} messages.
             * @param message Delegations message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IDelegations, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Delegations message, length delimited. Does not implicitly {@link osmosis.superfluid.Delegations.verify|verify} messages.
             * @param message Delegations message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IDelegations, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Delegations message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Delegations
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.Delegations;

            /**
             * Decodes a Delegations message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Delegations
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.Delegations;

            /**
             * Verifies a Delegations message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Delegations message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Delegations
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.Delegations;

            /**
             * Creates a plain object from a Delegations message. Also converts values to other types if specified.
             * @param message Delegations
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.Delegations, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Delegations to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TotalSuperfluidDelegationsRequest. */
        interface ITotalSuperfluidDelegationsRequest {
        }

        /** Represents a TotalSuperfluidDelegationsRequest. */
        class TotalSuperfluidDelegationsRequest implements ITotalSuperfluidDelegationsRequest {

            /**
             * Constructs a new TotalSuperfluidDelegationsRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ITotalSuperfluidDelegationsRequest);

            /**
             * Encodes the specified TotalSuperfluidDelegationsRequest message. Does not implicitly {@link osmosis.superfluid.TotalSuperfluidDelegationsRequest.verify|verify} messages.
             * @param message TotalSuperfluidDelegationsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ITotalSuperfluidDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TotalSuperfluidDelegationsRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.TotalSuperfluidDelegationsRequest.verify|verify} messages.
             * @param message TotalSuperfluidDelegationsRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ITotalSuperfluidDelegationsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TotalSuperfluidDelegationsRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TotalSuperfluidDelegationsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.TotalSuperfluidDelegationsRequest;

            /**
             * Decodes a TotalSuperfluidDelegationsRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TotalSuperfluidDelegationsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.TotalSuperfluidDelegationsRequest;

            /**
             * Verifies a TotalSuperfluidDelegationsRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TotalSuperfluidDelegationsRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TotalSuperfluidDelegationsRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.TotalSuperfluidDelegationsRequest;

            /**
             * Creates a plain object from a TotalSuperfluidDelegationsRequest message. Also converts values to other types if specified.
             * @param message TotalSuperfluidDelegationsRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.TotalSuperfluidDelegationsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TotalSuperfluidDelegationsRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TotalSuperfluidDelegationsResponse. */
        interface ITotalSuperfluidDelegationsResponse {

            /** TotalSuperfluidDelegationsResponse total_delegations */
            total_delegations?: (string|null);
        }

        /** Represents a TotalSuperfluidDelegationsResponse. */
        class TotalSuperfluidDelegationsResponse implements ITotalSuperfluidDelegationsResponse {

            /**
             * Constructs a new TotalSuperfluidDelegationsResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ITotalSuperfluidDelegationsResponse);

            /** TotalSuperfluidDelegationsResponse total_delegations. */
            public total_delegations: string;

            /**
             * Encodes the specified TotalSuperfluidDelegationsResponse message. Does not implicitly {@link osmosis.superfluid.TotalSuperfluidDelegationsResponse.verify|verify} messages.
             * @param message TotalSuperfluidDelegationsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ITotalSuperfluidDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TotalSuperfluidDelegationsResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.TotalSuperfluidDelegationsResponse.verify|verify} messages.
             * @param message TotalSuperfluidDelegationsResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ITotalSuperfluidDelegationsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TotalSuperfluidDelegationsResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TotalSuperfluidDelegationsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.TotalSuperfluidDelegationsResponse;

            /**
             * Decodes a TotalSuperfluidDelegationsResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TotalSuperfluidDelegationsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.TotalSuperfluidDelegationsResponse;

            /**
             * Verifies a TotalSuperfluidDelegationsResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TotalSuperfluidDelegationsResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TotalSuperfluidDelegationsResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.TotalSuperfluidDelegationsResponse;

            /**
             * Creates a plain object from a TotalSuperfluidDelegationsResponse message. Also converts values to other types if specified.
             * @param message TotalSuperfluidDelegationsResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.TotalSuperfluidDelegationsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TotalSuperfluidDelegationsResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidDelegationAmountRequest. */
        interface ISuperfluidDelegationAmountRequest {

            /** SuperfluidDelegationAmountRequest delegator_address */
            delegator_address?: (string|null);

            /** SuperfluidDelegationAmountRequest validator_address */
            validator_address?: (string|null);

            /** SuperfluidDelegationAmountRequest denom */
            denom?: (string|null);
        }

        /** Represents a SuperfluidDelegationAmountRequest. */
        class SuperfluidDelegationAmountRequest implements ISuperfluidDelegationAmountRequest {

            /**
             * Constructs a new SuperfluidDelegationAmountRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidDelegationAmountRequest);

            /** SuperfluidDelegationAmountRequest delegator_address. */
            public delegator_address: string;

            /** SuperfluidDelegationAmountRequest validator_address. */
            public validator_address: string;

            /** SuperfluidDelegationAmountRequest denom. */
            public denom: string;

            /**
             * Encodes the specified SuperfluidDelegationAmountRequest message. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationAmountRequest.verify|verify} messages.
             * @param message SuperfluidDelegationAmountRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidDelegationAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidDelegationAmountRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationAmountRequest.verify|verify} messages.
             * @param message SuperfluidDelegationAmountRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidDelegationAmountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidDelegationAmountRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidDelegationAmountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidDelegationAmountRequest;

            /**
             * Decodes a SuperfluidDelegationAmountRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidDelegationAmountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidDelegationAmountRequest;

            /**
             * Verifies a SuperfluidDelegationAmountRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidDelegationAmountRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidDelegationAmountRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidDelegationAmountRequest;

            /**
             * Creates a plain object from a SuperfluidDelegationAmountRequest message. Also converts values to other types if specified.
             * @param message SuperfluidDelegationAmountRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidDelegationAmountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidDelegationAmountRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidDelegationAmountResponse. */
        interface ISuperfluidDelegationAmountResponse {

            /** SuperfluidDelegationAmountResponse amount */
            amount?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents a SuperfluidDelegationAmountResponse. */
        class SuperfluidDelegationAmountResponse implements ISuperfluidDelegationAmountResponse {

            /**
             * Constructs a new SuperfluidDelegationAmountResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidDelegationAmountResponse);

            /** SuperfluidDelegationAmountResponse amount. */
            public amount: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified SuperfluidDelegationAmountResponse message. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationAmountResponse.verify|verify} messages.
             * @param message SuperfluidDelegationAmountResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidDelegationAmountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidDelegationAmountResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationAmountResponse.verify|verify} messages.
             * @param message SuperfluidDelegationAmountResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidDelegationAmountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidDelegationAmountResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidDelegationAmountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidDelegationAmountResponse;

            /**
             * Decodes a SuperfluidDelegationAmountResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidDelegationAmountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidDelegationAmountResponse;

            /**
             * Verifies a SuperfluidDelegationAmountResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidDelegationAmountResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidDelegationAmountResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidDelegationAmountResponse;

            /**
             * Creates a plain object from a SuperfluidDelegationAmountResponse message. Also converts values to other types if specified.
             * @param message SuperfluidDelegationAmountResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidDelegationAmountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidDelegationAmountResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidDelegationsByDelegatorRequest. */
        interface ISuperfluidDelegationsByDelegatorRequest {

            /** SuperfluidDelegationsByDelegatorRequest delegator_address */
            delegator_address?: (string|null);
        }

        /** Represents a SuperfluidDelegationsByDelegatorRequest. */
        class SuperfluidDelegationsByDelegatorRequest implements ISuperfluidDelegationsByDelegatorRequest {

            /**
             * Constructs a new SuperfluidDelegationsByDelegatorRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidDelegationsByDelegatorRequest);

            /** SuperfluidDelegationsByDelegatorRequest delegator_address. */
            public delegator_address: string;

            /**
             * Encodes the specified SuperfluidDelegationsByDelegatorRequest message. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest.verify|verify} messages.
             * @param message SuperfluidDelegationsByDelegatorRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidDelegationsByDelegatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidDelegationsByDelegatorRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest.verify|verify} messages.
             * @param message SuperfluidDelegationsByDelegatorRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidDelegationsByDelegatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidDelegationsByDelegatorRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidDelegationsByDelegatorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest;

            /**
             * Decodes a SuperfluidDelegationsByDelegatorRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidDelegationsByDelegatorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest;

            /**
             * Verifies a SuperfluidDelegationsByDelegatorRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidDelegationsByDelegatorRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidDelegationsByDelegatorRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest;

            /**
             * Creates a plain object from a SuperfluidDelegationsByDelegatorRequest message. Also converts values to other types if specified.
             * @param message SuperfluidDelegationsByDelegatorRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidDelegationsByDelegatorRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidDelegationsByDelegatorResponse. */
        interface ISuperfluidDelegationsByDelegatorResponse {

            /** SuperfluidDelegationsByDelegatorResponse superfluid_delegation_records */
            superfluid_delegation_records?: (osmosis.superfluid.ISuperfluidDelegationRecord[]|null);

            /** SuperfluidDelegationsByDelegatorResponse total_delegated_coins */
            total_delegated_coins?: (cosmos.base.v1beta1.ICoin[]|null);

            /** SuperfluidDelegationsByDelegatorResponse total_equivalent_staked_amount */
            total_equivalent_staked_amount?: (cosmos.base.v1beta1.ICoin|null);
        }

        /** Represents a SuperfluidDelegationsByDelegatorResponse. */
        class SuperfluidDelegationsByDelegatorResponse implements ISuperfluidDelegationsByDelegatorResponse {

            /**
             * Constructs a new SuperfluidDelegationsByDelegatorResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidDelegationsByDelegatorResponse);

            /** SuperfluidDelegationsByDelegatorResponse superfluid_delegation_records. */
            public superfluid_delegation_records: osmosis.superfluid.ISuperfluidDelegationRecord[];

            /** SuperfluidDelegationsByDelegatorResponse total_delegated_coins. */
            public total_delegated_coins: cosmos.base.v1beta1.ICoin[];

            /** SuperfluidDelegationsByDelegatorResponse total_equivalent_staked_amount. */
            public total_equivalent_staked_amount?: (cosmos.base.v1beta1.ICoin|null);

            /**
             * Encodes the specified SuperfluidDelegationsByDelegatorResponse message. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse.verify|verify} messages.
             * @param message SuperfluidDelegationsByDelegatorResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidDelegationsByDelegatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidDelegationsByDelegatorResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse.verify|verify} messages.
             * @param message SuperfluidDelegationsByDelegatorResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidDelegationsByDelegatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidDelegationsByDelegatorResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidDelegationsByDelegatorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse;

            /**
             * Decodes a SuperfluidDelegationsByDelegatorResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidDelegationsByDelegatorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse;

            /**
             * Verifies a SuperfluidDelegationsByDelegatorResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidDelegationsByDelegatorResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidDelegationsByDelegatorResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse;

            /**
             * Creates a plain object from a SuperfluidDelegationsByDelegatorResponse message. Also converts values to other types if specified.
             * @param message SuperfluidDelegationsByDelegatorResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidDelegationsByDelegatorResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidUndelegationsByDelegatorRequest. */
        interface ISuperfluidUndelegationsByDelegatorRequest {

            /** SuperfluidUndelegationsByDelegatorRequest delegator_address */
            delegator_address?: (string|null);

            /** SuperfluidUndelegationsByDelegatorRequest denom */
            denom?: (string|null);
        }

        /** Represents a SuperfluidUndelegationsByDelegatorRequest. */
        class SuperfluidUndelegationsByDelegatorRequest implements ISuperfluidUndelegationsByDelegatorRequest {

            /**
             * Constructs a new SuperfluidUndelegationsByDelegatorRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorRequest);

            /** SuperfluidUndelegationsByDelegatorRequest delegator_address. */
            public delegator_address: string;

            /** SuperfluidUndelegationsByDelegatorRequest denom. */
            public denom: string;

            /**
             * Encodes the specified SuperfluidUndelegationsByDelegatorRequest message. Does not implicitly {@link osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest.verify|verify} messages.
             * @param message SuperfluidUndelegationsByDelegatorRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidUndelegationsByDelegatorRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest.verify|verify} messages.
             * @param message SuperfluidUndelegationsByDelegatorRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidUndelegationsByDelegatorRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidUndelegationsByDelegatorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest;

            /**
             * Decodes a SuperfluidUndelegationsByDelegatorRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidUndelegationsByDelegatorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest;

            /**
             * Verifies a SuperfluidUndelegationsByDelegatorRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidUndelegationsByDelegatorRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidUndelegationsByDelegatorRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest;

            /**
             * Creates a plain object from a SuperfluidUndelegationsByDelegatorRequest message. Also converts values to other types if specified.
             * @param message SuperfluidUndelegationsByDelegatorRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidUndelegationsByDelegatorRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidUndelegationsByDelegatorResponse. */
        interface ISuperfluidUndelegationsByDelegatorResponse {

            /** SuperfluidUndelegationsByDelegatorResponse superfluid_delegation_records */
            superfluid_delegation_records?: (osmosis.superfluid.ISuperfluidDelegationRecord[]|null);

            /** SuperfluidUndelegationsByDelegatorResponse total_undelegated_coins */
            total_undelegated_coins?: (cosmos.base.v1beta1.ICoin[]|null);

            /** SuperfluidUndelegationsByDelegatorResponse synthetic_locks */
            synthetic_locks?: (osmosis.lockup.ISyntheticLock[]|null);
        }

        /** Represents a SuperfluidUndelegationsByDelegatorResponse. */
        class SuperfluidUndelegationsByDelegatorResponse implements ISuperfluidUndelegationsByDelegatorResponse {

            /**
             * Constructs a new SuperfluidUndelegationsByDelegatorResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorResponse);

            /** SuperfluidUndelegationsByDelegatorResponse superfluid_delegation_records. */
            public superfluid_delegation_records: osmosis.superfluid.ISuperfluidDelegationRecord[];

            /** SuperfluidUndelegationsByDelegatorResponse total_undelegated_coins. */
            public total_undelegated_coins: cosmos.base.v1beta1.ICoin[];

            /** SuperfluidUndelegationsByDelegatorResponse synthetic_locks. */
            public synthetic_locks: osmosis.lockup.ISyntheticLock[];

            /**
             * Encodes the specified SuperfluidUndelegationsByDelegatorResponse message. Does not implicitly {@link osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse.verify|verify} messages.
             * @param message SuperfluidUndelegationsByDelegatorResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidUndelegationsByDelegatorResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse.verify|verify} messages.
             * @param message SuperfluidUndelegationsByDelegatorResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidUndelegationsByDelegatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidUndelegationsByDelegatorResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidUndelegationsByDelegatorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse;

            /**
             * Decodes a SuperfluidUndelegationsByDelegatorResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidUndelegationsByDelegatorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse;

            /**
             * Verifies a SuperfluidUndelegationsByDelegatorResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidUndelegationsByDelegatorResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidUndelegationsByDelegatorResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse;

            /**
             * Creates a plain object from a SuperfluidUndelegationsByDelegatorResponse message. Also converts values to other types if specified.
             * @param message SuperfluidUndelegationsByDelegatorResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidUndelegationsByDelegatorResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidDelegationsByValidatorDenomRequest. */
        interface ISuperfluidDelegationsByValidatorDenomRequest {

            /** SuperfluidDelegationsByValidatorDenomRequest validator_address */
            validator_address?: (string|null);

            /** SuperfluidDelegationsByValidatorDenomRequest denom */
            denom?: (string|null);
        }

        /** Represents a SuperfluidDelegationsByValidatorDenomRequest. */
        class SuperfluidDelegationsByValidatorDenomRequest implements ISuperfluidDelegationsByValidatorDenomRequest {

            /**
             * Constructs a new SuperfluidDelegationsByValidatorDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomRequest);

            /** SuperfluidDelegationsByValidatorDenomRequest validator_address. */
            public validator_address: string;

            /** SuperfluidDelegationsByValidatorDenomRequest denom. */
            public denom: string;

            /**
             * Encodes the specified SuperfluidDelegationsByValidatorDenomRequest message. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest.verify|verify} messages.
             * @param message SuperfluidDelegationsByValidatorDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidDelegationsByValidatorDenomRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest.verify|verify} messages.
             * @param message SuperfluidDelegationsByValidatorDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidDelegationsByValidatorDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidDelegationsByValidatorDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest;

            /**
             * Decodes a SuperfluidDelegationsByValidatorDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidDelegationsByValidatorDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest;

            /**
             * Verifies a SuperfluidDelegationsByValidatorDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidDelegationsByValidatorDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidDelegationsByValidatorDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest;

            /**
             * Creates a plain object from a SuperfluidDelegationsByValidatorDenomRequest message. Also converts values to other types if specified.
             * @param message SuperfluidDelegationsByValidatorDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidDelegationsByValidatorDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SuperfluidDelegationsByValidatorDenomResponse. */
        interface ISuperfluidDelegationsByValidatorDenomResponse {

            /** SuperfluidDelegationsByValidatorDenomResponse superfluid_delegation_records */
            superfluid_delegation_records?: (osmosis.superfluid.ISuperfluidDelegationRecord[]|null);
        }

        /** Represents a SuperfluidDelegationsByValidatorDenomResponse. */
        class SuperfluidDelegationsByValidatorDenomResponse implements ISuperfluidDelegationsByValidatorDenomResponse {

            /**
             * Constructs a new SuperfluidDelegationsByValidatorDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomResponse);

            /** SuperfluidDelegationsByValidatorDenomResponse superfluid_delegation_records. */
            public superfluid_delegation_records: osmosis.superfluid.ISuperfluidDelegationRecord[];

            /**
             * Encodes the specified SuperfluidDelegationsByValidatorDenomResponse message. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse.verify|verify} messages.
             * @param message SuperfluidDelegationsByValidatorDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SuperfluidDelegationsByValidatorDenomResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse.verify|verify} messages.
             * @param message SuperfluidDelegationsByValidatorDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.ISuperfluidDelegationsByValidatorDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SuperfluidDelegationsByValidatorDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuperfluidDelegationsByValidatorDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse;

            /**
             * Decodes a SuperfluidDelegationsByValidatorDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SuperfluidDelegationsByValidatorDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse;

            /**
             * Verifies a SuperfluidDelegationsByValidatorDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SuperfluidDelegationsByValidatorDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SuperfluidDelegationsByValidatorDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse;

            /**
             * Creates a plain object from a SuperfluidDelegationsByValidatorDenomResponse message. Also converts values to other types if specified.
             * @param message SuperfluidDelegationsByValidatorDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SuperfluidDelegationsByValidatorDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EstimateSuperfluidDelegatedAmountByValidatorDenomRequest. */
        interface IEstimateSuperfluidDelegatedAmountByValidatorDenomRequest {

            /** EstimateSuperfluidDelegatedAmountByValidatorDenomRequest validator_address */
            validator_address?: (string|null);

            /** EstimateSuperfluidDelegatedAmountByValidatorDenomRequest denom */
            denom?: (string|null);
        }

        /** Represents an EstimateSuperfluidDelegatedAmountByValidatorDenomRequest. */
        class EstimateSuperfluidDelegatedAmountByValidatorDenomRequest implements IEstimateSuperfluidDelegatedAmountByValidatorDenomRequest {

            /**
             * Constructs a new EstimateSuperfluidDelegatedAmountByValidatorDenomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomRequest);

            /** EstimateSuperfluidDelegatedAmountByValidatorDenomRequest validator_address. */
            public validator_address: string;

            /** EstimateSuperfluidDelegatedAmountByValidatorDenomRequest denom. */
            public denom: string;

            /**
             * Encodes the specified EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message. Does not implicitly {@link osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest.verify|verify} messages.
             * @param message EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest.verify|verify} messages.
             * @param message EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EstimateSuperfluidDelegatedAmountByValidatorDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest;

            /**
             * Decodes an EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EstimateSuperfluidDelegatedAmountByValidatorDenomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest;

            /**
             * Verifies an EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EstimateSuperfluidDelegatedAmountByValidatorDenomRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest;

            /**
             * Creates a plain object from an EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message. Also converts values to other types if specified.
             * @param message EstimateSuperfluidDelegatedAmountByValidatorDenomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EstimateSuperfluidDelegatedAmountByValidatorDenomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EstimateSuperfluidDelegatedAmountByValidatorDenomResponse. */
        interface IEstimateSuperfluidDelegatedAmountByValidatorDenomResponse {

            /** EstimateSuperfluidDelegatedAmountByValidatorDenomResponse total_delegated_coins */
            total_delegated_coins?: (cosmos.base.v1beta1.ICoin[]|null);
        }

        /** Represents an EstimateSuperfluidDelegatedAmountByValidatorDenomResponse. */
        class EstimateSuperfluidDelegatedAmountByValidatorDenomResponse implements IEstimateSuperfluidDelegatedAmountByValidatorDenomResponse {

            /**
             * Constructs a new EstimateSuperfluidDelegatedAmountByValidatorDenomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomResponse);

            /** EstimateSuperfluidDelegatedAmountByValidatorDenomResponse total_delegated_coins. */
            public total_delegated_coins: cosmos.base.v1beta1.ICoin[];

            /**
             * Encodes the specified EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message. Does not implicitly {@link osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse.verify|verify} messages.
             * @param message EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse.verify|verify} messages.
             * @param message EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IEstimateSuperfluidDelegatedAmountByValidatorDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EstimateSuperfluidDelegatedAmountByValidatorDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse;

            /**
             * Decodes an EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EstimateSuperfluidDelegatedAmountByValidatorDenomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse;

            /**
             * Verifies an EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EstimateSuperfluidDelegatedAmountByValidatorDenomResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse;

            /**
             * Creates a plain object from an EstimateSuperfluidDelegatedAmountByValidatorDenomResponse message. Also converts values to other types if specified.
             * @param message EstimateSuperfluidDelegatedAmountByValidatorDenomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EstimateSuperfluidDelegatedAmountByValidatorDenomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryTotalDelegationByDelegatorRequest. */
        interface IQueryTotalDelegationByDelegatorRequest {

            /** QueryTotalDelegationByDelegatorRequest delegator_address */
            delegator_address?: (string|null);
        }

        /** Represents a QueryTotalDelegationByDelegatorRequest. */
        class QueryTotalDelegationByDelegatorRequest implements IQueryTotalDelegationByDelegatorRequest {

            /**
             * Constructs a new QueryTotalDelegationByDelegatorRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryTotalDelegationByDelegatorRequest);

            /** QueryTotalDelegationByDelegatorRequest delegator_address. */
            public delegator_address: string;

            /**
             * Encodes the specified QueryTotalDelegationByDelegatorRequest message. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByDelegatorRequest.verify|verify} messages.
             * @param message QueryTotalDelegationByDelegatorRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryTotalDelegationByDelegatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryTotalDelegationByDelegatorRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByDelegatorRequest.verify|verify} messages.
             * @param message QueryTotalDelegationByDelegatorRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryTotalDelegationByDelegatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryTotalDelegationByDelegatorRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryTotalDelegationByDelegatorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryTotalDelegationByDelegatorRequest;

            /**
             * Decodes a QueryTotalDelegationByDelegatorRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryTotalDelegationByDelegatorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryTotalDelegationByDelegatorRequest;

            /**
             * Verifies a QueryTotalDelegationByDelegatorRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryTotalDelegationByDelegatorRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryTotalDelegationByDelegatorRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryTotalDelegationByDelegatorRequest;

            /**
             * Creates a plain object from a QueryTotalDelegationByDelegatorRequest message. Also converts values to other types if specified.
             * @param message QueryTotalDelegationByDelegatorRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryTotalDelegationByDelegatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryTotalDelegationByDelegatorRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryTotalDelegationByDelegatorResponse. */
        interface IQueryTotalDelegationByDelegatorResponse {

            /** QueryTotalDelegationByDelegatorResponse superfluid_delegation_records */
            superfluid_delegation_records?: (osmosis.superfluid.ISuperfluidDelegationRecord[]|null);

            /** QueryTotalDelegationByDelegatorResponse delegation_response */
            delegation_response?: (cosmos.staking.v1beta1.IDelegationResponse[]|null);

            /** QueryTotalDelegationByDelegatorResponse total_delegated_coins */
            total_delegated_coins?: (cosmos.base.v1beta1.ICoin[]|null);

            /** QueryTotalDelegationByDelegatorResponse total_equivalent_staked_amount */
            total_equivalent_staked_amount?: (cosmos.base.v1beta1.ICoin|null);
        }

        /** Represents a QueryTotalDelegationByDelegatorResponse. */
        class QueryTotalDelegationByDelegatorResponse implements IQueryTotalDelegationByDelegatorResponse {

            /**
             * Constructs a new QueryTotalDelegationByDelegatorResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryTotalDelegationByDelegatorResponse);

            /** QueryTotalDelegationByDelegatorResponse superfluid_delegation_records. */
            public superfluid_delegation_records: osmosis.superfluid.ISuperfluidDelegationRecord[];

            /** QueryTotalDelegationByDelegatorResponse delegation_response. */
            public delegation_response: cosmos.staking.v1beta1.IDelegationResponse[];

            /** QueryTotalDelegationByDelegatorResponse total_delegated_coins. */
            public total_delegated_coins: cosmos.base.v1beta1.ICoin[];

            /** QueryTotalDelegationByDelegatorResponse total_equivalent_staked_amount. */
            public total_equivalent_staked_amount?: (cosmos.base.v1beta1.ICoin|null);

            /**
             * Encodes the specified QueryTotalDelegationByDelegatorResponse message. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByDelegatorResponse.verify|verify} messages.
             * @param message QueryTotalDelegationByDelegatorResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryTotalDelegationByDelegatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryTotalDelegationByDelegatorResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryTotalDelegationByDelegatorResponse.verify|verify} messages.
             * @param message QueryTotalDelegationByDelegatorResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryTotalDelegationByDelegatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryTotalDelegationByDelegatorResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryTotalDelegationByDelegatorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryTotalDelegationByDelegatorResponse;

            /**
             * Decodes a QueryTotalDelegationByDelegatorResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryTotalDelegationByDelegatorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryTotalDelegationByDelegatorResponse;

            /**
             * Verifies a QueryTotalDelegationByDelegatorResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryTotalDelegationByDelegatorResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryTotalDelegationByDelegatorResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryTotalDelegationByDelegatorResponse;

            /**
             * Creates a plain object from a QueryTotalDelegationByDelegatorResponse message. Also converts values to other types if specified.
             * @param message QueryTotalDelegationByDelegatorResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryTotalDelegationByDelegatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryTotalDelegationByDelegatorResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryUnpoolWhitelistRequest. */
        interface IQueryUnpoolWhitelistRequest {
        }

        /** Represents a QueryUnpoolWhitelistRequest. */
        class QueryUnpoolWhitelistRequest implements IQueryUnpoolWhitelistRequest {

            /**
             * Constructs a new QueryUnpoolWhitelistRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryUnpoolWhitelistRequest);

            /**
             * Encodes the specified QueryUnpoolWhitelistRequest message. Does not implicitly {@link osmosis.superfluid.QueryUnpoolWhitelistRequest.verify|verify} messages.
             * @param message QueryUnpoolWhitelistRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryUnpoolWhitelistRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryUnpoolWhitelistRequest message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryUnpoolWhitelistRequest.verify|verify} messages.
             * @param message QueryUnpoolWhitelistRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryUnpoolWhitelistRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryUnpoolWhitelistRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryUnpoolWhitelistRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryUnpoolWhitelistRequest;

            /**
             * Decodes a QueryUnpoolWhitelistRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryUnpoolWhitelistRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryUnpoolWhitelistRequest;

            /**
             * Verifies a QueryUnpoolWhitelistRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryUnpoolWhitelistRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryUnpoolWhitelistRequest
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryUnpoolWhitelistRequest;

            /**
             * Creates a plain object from a QueryUnpoolWhitelistRequest message. Also converts values to other types if specified.
             * @param message QueryUnpoolWhitelistRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryUnpoolWhitelistRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryUnpoolWhitelistRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a QueryUnpoolWhitelistResponse. */
        interface IQueryUnpoolWhitelistResponse {

            /** QueryUnpoolWhitelistResponse pool_ids */
            pool_ids?: (Long[]|null);
        }

        /** Represents a QueryUnpoolWhitelistResponse. */
        class QueryUnpoolWhitelistResponse implements IQueryUnpoolWhitelistResponse {

            /**
             * Constructs a new QueryUnpoolWhitelistResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IQueryUnpoolWhitelistResponse);

            /** QueryUnpoolWhitelistResponse pool_ids. */
            public pool_ids: Long[];

            /**
             * Encodes the specified QueryUnpoolWhitelistResponse message. Does not implicitly {@link osmosis.superfluid.QueryUnpoolWhitelistResponse.verify|verify} messages.
             * @param message QueryUnpoolWhitelistResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IQueryUnpoolWhitelistResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified QueryUnpoolWhitelistResponse message, length delimited. Does not implicitly {@link osmosis.superfluid.QueryUnpoolWhitelistResponse.verify|verify} messages.
             * @param message QueryUnpoolWhitelistResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IQueryUnpoolWhitelistResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a QueryUnpoolWhitelistResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns QueryUnpoolWhitelistResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.QueryUnpoolWhitelistResponse;

            /**
             * Decodes a QueryUnpoolWhitelistResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns QueryUnpoolWhitelistResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.QueryUnpoolWhitelistResponse;

            /**
             * Verifies a QueryUnpoolWhitelistResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a QueryUnpoolWhitelistResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns QueryUnpoolWhitelistResponse
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.QueryUnpoolWhitelistResponse;

            /**
             * Creates a plain object from a QueryUnpoolWhitelistResponse message. Also converts values to other types if specified.
             * @param message QueryUnpoolWhitelistResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.QueryUnpoolWhitelistResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this QueryUnpoolWhitelistResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Params. */
        interface IParams {

            /** Params minimum_risk_factor */
            minimum_risk_factor?: (string|null);
        }

        /** Represents a Params. */
        class Params implements IParams {

            /**
             * Constructs a new Params.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IParams);

            /** Params minimum_risk_factor. */
            public minimum_risk_factor: string;

            /**
             * Encodes the specified Params message. Does not implicitly {@link osmosis.superfluid.Params.verify|verify} messages.
             * @param message Params message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.superfluid.Params.verify|verify} messages.
             * @param message Params message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.Params;

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.Params;

            /**
             * Verifies a Params message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Params
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.Params;

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @param message Params
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Params to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GenesisState. */
        interface IGenesisState {

            /** GenesisState params */
            params?: (osmosis.superfluid.IParams|null);

            /** GenesisState superfluid_assets */
            superfluid_assets?: (osmosis.superfluid.ISuperfluidAsset[]|null);

            /** GenesisState osmo_equivalent_multipliers */
            osmo_equivalent_multipliers?: (osmosis.superfluid.IOsmoEquivalentMultiplierRecord[]|null);

            /** GenesisState intermediary_accounts */
            intermediary_accounts?: (osmosis.superfluid.ISuperfluidIntermediaryAccount[]|null);

            /** GenesisState intemediary_account_connections */
            intemediary_account_connections?: (osmosis.superfluid.ILockIdIntermediaryAccountConnection[]|null);
        }

        /** Represents a GenesisState. */
        class GenesisState implements IGenesisState {

            /**
             * Constructs a new GenesisState.
             * @param [properties] Properties to set
             */
            constructor(properties?: osmosis.superfluid.IGenesisState);

            /** GenesisState params. */
            public params?: (osmosis.superfluid.IParams|null);

            /** GenesisState superfluid_assets. */
            public superfluid_assets: osmosis.superfluid.ISuperfluidAsset[];

            /** GenesisState osmo_equivalent_multipliers. */
            public osmo_equivalent_multipliers: osmosis.superfluid.IOsmoEquivalentMultiplierRecord[];

            /** GenesisState intermediary_accounts. */
            public intermediary_accounts: osmosis.superfluid.ISuperfluidIntermediaryAccount[];

            /** GenesisState intemediary_account_connections. */
            public intemediary_account_connections: osmosis.superfluid.ILockIdIntermediaryAccountConnection[];

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.superfluid.GenesisState.verify|verify} messages.
             * @param message GenesisState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: osmosis.superfluid.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.superfluid.GenesisState.verify|verify} messages.
             * @param message GenesisState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: osmosis.superfluid.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.GenesisState;

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.GenesisState;

            /**
             * Verifies a GenesisState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GenesisState
             */
            public static fromObject(object: { [k: string]: any }): osmosis.superfluid.GenesisState;

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @param message GenesisState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: osmosis.superfluid.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GenesisState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a SetSuperfluidAssetsProposal. */
            interface ISetSuperfluidAssetsProposal {

                /** SetSuperfluidAssetsProposal title */
                title?: (string|null);

                /** SetSuperfluidAssetsProposal description */
                description?: (string|null);

                /** SetSuperfluidAssetsProposal assets */
                assets?: (osmosis.superfluid.ISuperfluidAsset[]|null);
            }

            /** Represents a SetSuperfluidAssetsProposal. */
            class SetSuperfluidAssetsProposal implements ISetSuperfluidAssetsProposal {

                /**
                 * Constructs a new SetSuperfluidAssetsProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.superfluid.v1beta1.ISetSuperfluidAssetsProposal);

                /** SetSuperfluidAssetsProposal title. */
                public title: string;

                /** SetSuperfluidAssetsProposal description. */
                public description: string;

                /** SetSuperfluidAssetsProposal assets. */
                public assets: osmosis.superfluid.ISuperfluidAsset[];

                /**
                 * Encodes the specified SetSuperfluidAssetsProposal message. Does not implicitly {@link osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.verify|verify} messages.
                 * @param message SetSuperfluidAssetsProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.superfluid.v1beta1.ISetSuperfluidAssetsProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SetSuperfluidAssetsProposal message, length delimited. Does not implicitly {@link osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.verify|verify} messages.
                 * @param message SetSuperfluidAssetsProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.superfluid.v1beta1.ISetSuperfluidAssetsProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SetSuperfluidAssetsProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SetSuperfluidAssetsProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal;

                /**
                 * Decodes a SetSuperfluidAssetsProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SetSuperfluidAssetsProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal;

                /**
                 * Verifies a SetSuperfluidAssetsProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SetSuperfluidAssetsProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SetSuperfluidAssetsProposal
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal;

                /**
                 * Creates a plain object from a SetSuperfluidAssetsProposal message. Also converts values to other types if specified.
                 * @param message SetSuperfluidAssetsProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SetSuperfluidAssetsProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RemoveSuperfluidAssetsProposal. */
            interface IRemoveSuperfluidAssetsProposal {

                /** RemoveSuperfluidAssetsProposal title */
                title?: (string|null);

                /** RemoveSuperfluidAssetsProposal description */
                description?: (string|null);

                /** RemoveSuperfluidAssetsProposal superfluid_asset_denoms */
                superfluid_asset_denoms?: (string[]|null);
            }

            /** Represents a RemoveSuperfluidAssetsProposal. */
            class RemoveSuperfluidAssetsProposal implements IRemoveSuperfluidAssetsProposal {

                /**
                 * Constructs a new RemoveSuperfluidAssetsProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.superfluid.v1beta1.IRemoveSuperfluidAssetsProposal);

                /** RemoveSuperfluidAssetsProposal title. */
                public title: string;

                /** RemoveSuperfluidAssetsProposal description. */
                public description: string;

                /** RemoveSuperfluidAssetsProposal superfluid_asset_denoms. */
                public superfluid_asset_denoms: string[];

                /**
                 * Encodes the specified RemoveSuperfluidAssetsProposal message. Does not implicitly {@link osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.verify|verify} messages.
                 * @param message RemoveSuperfluidAssetsProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.superfluid.v1beta1.IRemoveSuperfluidAssetsProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RemoveSuperfluidAssetsProposal message, length delimited. Does not implicitly {@link osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.verify|verify} messages.
                 * @param message RemoveSuperfluidAssetsProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.superfluid.v1beta1.IRemoveSuperfluidAssetsProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RemoveSuperfluidAssetsProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RemoveSuperfluidAssetsProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal;

                /**
                 * Decodes a RemoveSuperfluidAssetsProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RemoveSuperfluidAssetsProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal;

                /**
                 * Verifies a RemoveSuperfluidAssetsProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RemoveSuperfluidAssetsProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RemoveSuperfluidAssetsProposal
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal;

                /**
                 * Creates a plain object from a RemoveSuperfluidAssetsProposal message. Also converts values to other types if specified.
                 * @param message RemoveSuperfluidAssetsProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RemoveSuperfluidAssetsProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UpdateUnpoolWhiteListProposal. */
            interface IUpdateUnpoolWhiteListProposal {

                /** UpdateUnpoolWhiteListProposal title */
                title?: (string|null);

                /** UpdateUnpoolWhiteListProposal description */
                description?: (string|null);

                /** UpdateUnpoolWhiteListProposal ids */
                ids?: (Long[]|null);

                /** UpdateUnpoolWhiteListProposal is_overwrite */
                is_overwrite?: (boolean|null);
            }

            /** Represents an UpdateUnpoolWhiteListProposal. */
            class UpdateUnpoolWhiteListProposal implements IUpdateUnpoolWhiteListProposal {

                /**
                 * Constructs a new UpdateUnpoolWhiteListProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.superfluid.v1beta1.IUpdateUnpoolWhiteListProposal);

                /** UpdateUnpoolWhiteListProposal title. */
                public title: string;

                /** UpdateUnpoolWhiteListProposal description. */
                public description: string;

                /** UpdateUnpoolWhiteListProposal ids. */
                public ids: Long[];

                /** UpdateUnpoolWhiteListProposal is_overwrite. */
                public is_overwrite: boolean;

                /**
                 * Encodes the specified UpdateUnpoolWhiteListProposal message. Does not implicitly {@link osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal.verify|verify} messages.
                 * @param message UpdateUnpoolWhiteListProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.superfluid.v1beta1.IUpdateUnpoolWhiteListProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateUnpoolWhiteListProposal message, length delimited. Does not implicitly {@link osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal.verify|verify} messages.
                 * @param message UpdateUnpoolWhiteListProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.superfluid.v1beta1.IUpdateUnpoolWhiteListProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateUnpoolWhiteListProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateUnpoolWhiteListProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal;

                /**
                 * Decodes an UpdateUnpoolWhiteListProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateUnpoolWhiteListProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal;

                /**
                 * Verifies an UpdateUnpoolWhiteListProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateUnpoolWhiteListProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateUnpoolWhiteListProposal
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal;

                /**
                 * Creates a plain object from an UpdateUnpoolWhiteListProposal message. Also converts values to other types if specified.
                 * @param message UpdateUnpoolWhiteListProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateUnpoolWhiteListProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace tokenfactory. */
    namespace tokenfactory {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls CreateDenom.
                 * @param request MsgCreateDenom message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgCreateDenomResponse
                 */
                public createDenom(request: osmosis.tokenfactory.v1beta1.IMsgCreateDenom, callback: osmosis.tokenfactory.v1beta1.Msg.CreateDenomCallback): void;

                /**
                 * Calls CreateDenom.
                 * @param request MsgCreateDenom message or plain object
                 * @returns Promise
                 */
                public createDenom(request: osmosis.tokenfactory.v1beta1.IMsgCreateDenom): Promise<osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse>;

                /**
                 * Calls Mint.
                 * @param request MsgMint message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgMintResponse
                 */
                public mint(request: osmosis.tokenfactory.v1beta1.IMsgMint, callback: osmosis.tokenfactory.v1beta1.Msg.MintCallback): void;

                /**
                 * Calls Mint.
                 * @param request MsgMint message or plain object
                 * @returns Promise
                 */
                public mint(request: osmosis.tokenfactory.v1beta1.IMsgMint): Promise<osmosis.tokenfactory.v1beta1.MsgMintResponse>;

                /**
                 * Calls Burn.
                 * @param request MsgBurn message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgBurnResponse
                 */
                public burn(request: osmosis.tokenfactory.v1beta1.IMsgBurn, callback: osmosis.tokenfactory.v1beta1.Msg.BurnCallback): void;

                /**
                 * Calls Burn.
                 * @param request MsgBurn message or plain object
                 * @returns Promise
                 */
                public burn(request: osmosis.tokenfactory.v1beta1.IMsgBurn): Promise<osmosis.tokenfactory.v1beta1.MsgBurnResponse>;

                /**
                 * Calls ChangeAdmin.
                 * @param request MsgChangeAdmin message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgChangeAdminResponse
                 */
                public changeAdmin(request: osmosis.tokenfactory.v1beta1.IMsgChangeAdmin, callback: osmosis.tokenfactory.v1beta1.Msg.ChangeAdminCallback): void;

                /**
                 * Calls ChangeAdmin.
                 * @param request MsgChangeAdmin message or plain object
                 * @returns Promise
                 */
                public changeAdmin(request: osmosis.tokenfactory.v1beta1.IMsgChangeAdmin): Promise<osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse>;

                /**
                 * Calls SetDenomMetadata.
                 * @param request MsgSetDenomMetadata message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSetDenomMetadataResponse
                 */
                public setDenomMetadata(request: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadata, callback: osmosis.tokenfactory.v1beta1.Msg.SetDenomMetadataCallback): void;

                /**
                 * Calls SetDenomMetadata.
                 * @param request MsgSetDenomMetadata message or plain object
                 * @returns Promise
                 */
                public setDenomMetadata(request: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadata): Promise<osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Msg#createDenom}.
                 * @param error Error, if any
                 * @param [response] MsgCreateDenomResponse
                 */
                type CreateDenomCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse) => void;

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Msg#mint}.
                 * @param error Error, if any
                 * @param [response] MsgMintResponse
                 */
                type MintCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.MsgMintResponse) => void;

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Msg#burn}.
                 * @param error Error, if any
                 * @param [response] MsgBurnResponse
                 */
                type BurnCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.MsgBurnResponse) => void;

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Msg#changeAdmin}.
                 * @param error Error, if any
                 * @param [response] MsgChangeAdminResponse
                 */
                type ChangeAdminCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse) => void;

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Msg#setDenomMetadata}.
                 * @param error Error, if any
                 * @param [response] MsgSetDenomMetadataResponse
                 */
                type SetDenomMetadataCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse) => void;
            }

            /** Properties of a MsgCreateDenom. */
            interface IMsgCreateDenom {

                /** MsgCreateDenom sender */
                sender?: (string|null);

                /** MsgCreateDenom subdenom */
                subdenom?: (string|null);
            }

            /** Represents a MsgCreateDenom. */
            class MsgCreateDenom implements IMsgCreateDenom {

                /**
                 * Constructs a new MsgCreateDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgCreateDenom);

                /** MsgCreateDenom sender. */
                public sender: string;

                /** MsgCreateDenom subdenom. */
                public subdenom: string;

                /**
                 * Encodes the specified MsgCreateDenom message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgCreateDenom.verify|verify} messages.
                 * @param message MsgCreateDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgCreateDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDenom message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgCreateDenom.verify|verify} messages.
                 * @param message MsgCreateDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgCreateDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgCreateDenom;

                /**
                 * Decodes a MsgCreateDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgCreateDenom;

                /**
                 * Verifies a MsgCreateDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDenom
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgCreateDenom;

                /**
                 * Creates a plain object from a MsgCreateDenom message. Also converts values to other types if specified.
                 * @param message MsgCreateDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgCreateDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgCreateDenomResponse. */
            interface IMsgCreateDenomResponse {

                /** MsgCreateDenomResponse new_token_denom */
                new_token_denom?: (string|null);
            }

            /** Represents a MsgCreateDenomResponse. */
            class MsgCreateDenomResponse implements IMsgCreateDenomResponse {

                /**
                 * Constructs a new MsgCreateDenomResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgCreateDenomResponse);

                /** MsgCreateDenomResponse new_token_denom. */
                public new_token_denom: string;

                /**
                 * Encodes the specified MsgCreateDenomResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse.verify|verify} messages.
                 * @param message MsgCreateDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgCreateDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgCreateDenomResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse.verify|verify} messages.
                 * @param message MsgCreateDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgCreateDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgCreateDenomResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgCreateDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse;

                /**
                 * Decodes a MsgCreateDenomResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgCreateDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse;

                /**
                 * Verifies a MsgCreateDenomResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgCreateDenomResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgCreateDenomResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse;

                /**
                 * Creates a plain object from a MsgCreateDenomResponse message. Also converts values to other types if specified.
                 * @param message MsgCreateDenomResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgCreateDenomResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgMint. */
            interface IMsgMint {

                /** MsgMint sender */
                sender?: (string|null);

                /** MsgMint amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgMint. */
            class MsgMint implements IMsgMint {

                /**
                 * Constructs a new MsgMint.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgMint);

                /** MsgMint sender. */
                public sender: string;

                /** MsgMint amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgMint message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgMint.verify|verify} messages.
                 * @param message MsgMint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgMint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgMint message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgMint.verify|verify} messages.
                 * @param message MsgMint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgMint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgMint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgMint;

                /**
                 * Decodes a MsgMint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgMint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgMint;

                /**
                 * Verifies a MsgMint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgMint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgMint
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgMint;

                /**
                 * Creates a plain object from a MsgMint message. Also converts values to other types if specified.
                 * @param message MsgMint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgMint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgMint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgMintResponse. */
            interface IMsgMintResponse {
            }

            /** Represents a MsgMintResponse. */
            class MsgMintResponse implements IMsgMintResponse {

                /**
                 * Constructs a new MsgMintResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgMintResponse);

                /**
                 * Encodes the specified MsgMintResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgMintResponse.verify|verify} messages.
                 * @param message MsgMintResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgMintResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgMintResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgMintResponse.verify|verify} messages.
                 * @param message MsgMintResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgMintResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgMintResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgMintResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgMintResponse;

                /**
                 * Decodes a MsgMintResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgMintResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgMintResponse;

                /**
                 * Verifies a MsgMintResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgMintResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgMintResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgMintResponse;

                /**
                 * Creates a plain object from a MsgMintResponse message. Also converts values to other types if specified.
                 * @param message MsgMintResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgMintResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgMintResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBurn. */
            interface IMsgBurn {

                /** MsgBurn sender */
                sender?: (string|null);

                /** MsgBurn amount */
                amount?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a MsgBurn. */
            class MsgBurn implements IMsgBurn {

                /**
                 * Constructs a new MsgBurn.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgBurn);

                /** MsgBurn sender. */
                public sender: string;

                /** MsgBurn amount. */
                public amount?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified MsgBurn message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgBurn.verify|verify} messages.
                 * @param message MsgBurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgBurn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBurn message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgBurn.verify|verify} messages.
                 * @param message MsgBurn message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgBurn, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBurn message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgBurn;

                /**
                 * Decodes a MsgBurn message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBurn
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgBurn;

                /**
                 * Verifies a MsgBurn message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBurn message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBurn
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgBurn;

                /**
                 * Creates a plain object from a MsgBurn message. Also converts values to other types if specified.
                 * @param message MsgBurn
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgBurn, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBurn to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgBurnResponse. */
            interface IMsgBurnResponse {
            }

            /** Represents a MsgBurnResponse. */
            class MsgBurnResponse implements IMsgBurnResponse {

                /**
                 * Constructs a new MsgBurnResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgBurnResponse);

                /**
                 * Encodes the specified MsgBurnResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgBurnResponse.verify|verify} messages.
                 * @param message MsgBurnResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgBurnResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgBurnResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgBurnResponse.verify|verify} messages.
                 * @param message MsgBurnResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgBurnResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgBurnResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgBurnResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgBurnResponse;

                /**
                 * Decodes a MsgBurnResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgBurnResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgBurnResponse;

                /**
                 * Verifies a MsgBurnResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgBurnResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgBurnResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgBurnResponse;

                /**
                 * Creates a plain object from a MsgBurnResponse message. Also converts values to other types if specified.
                 * @param message MsgBurnResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgBurnResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgBurnResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgChangeAdmin. */
            interface IMsgChangeAdmin {

                /** MsgChangeAdmin sender */
                sender?: (string|null);

                /** MsgChangeAdmin denom */
                denom?: (string|null);

                /** MsgChangeAdmin new_admin */
                new_admin?: (string|null);
            }

            /** Represents a MsgChangeAdmin. */
            class MsgChangeAdmin implements IMsgChangeAdmin {

                /**
                 * Constructs a new MsgChangeAdmin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgChangeAdmin);

                /** MsgChangeAdmin sender. */
                public sender: string;

                /** MsgChangeAdmin denom. */
                public denom: string;

                /** MsgChangeAdmin new_admin. */
                public new_admin: string;

                /**
                 * Encodes the specified MsgChangeAdmin message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgChangeAdmin.verify|verify} messages.
                 * @param message MsgChangeAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgChangeAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgChangeAdmin message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgChangeAdmin.verify|verify} messages.
                 * @param message MsgChangeAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgChangeAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgChangeAdmin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgChangeAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgChangeAdmin;

                /**
                 * Decodes a MsgChangeAdmin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgChangeAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgChangeAdmin;

                /**
                 * Verifies a MsgChangeAdmin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgChangeAdmin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgChangeAdmin
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgChangeAdmin;

                /**
                 * Creates a plain object from a MsgChangeAdmin message. Also converts values to other types if specified.
                 * @param message MsgChangeAdmin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgChangeAdmin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgChangeAdmin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgChangeAdminResponse. */
            interface IMsgChangeAdminResponse {
            }

            /** Represents a MsgChangeAdminResponse. */
            class MsgChangeAdminResponse implements IMsgChangeAdminResponse {

                /**
                 * Constructs a new MsgChangeAdminResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgChangeAdminResponse);

                /**
                 * Encodes the specified MsgChangeAdminResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse.verify|verify} messages.
                 * @param message MsgChangeAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgChangeAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgChangeAdminResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse.verify|verify} messages.
                 * @param message MsgChangeAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgChangeAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgChangeAdminResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgChangeAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse;

                /**
                 * Decodes a MsgChangeAdminResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgChangeAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse;

                /**
                 * Verifies a MsgChangeAdminResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgChangeAdminResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgChangeAdminResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse;

                /**
                 * Creates a plain object from a MsgChangeAdminResponse message. Also converts values to other types if specified.
                 * @param message MsgChangeAdminResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgChangeAdminResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetDenomMetadata. */
            interface IMsgSetDenomMetadata {

                /** MsgSetDenomMetadata sender */
                sender?: (string|null);

                /** MsgSetDenomMetadata metadata */
                metadata?: (cosmos.bank.v1beta1.IMetadata|null);
            }

            /** Represents a MsgSetDenomMetadata. */
            class MsgSetDenomMetadata implements IMsgSetDenomMetadata {

                /**
                 * Constructs a new MsgSetDenomMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadata);

                /** MsgSetDenomMetadata sender. */
                public sender: string;

                /** MsgSetDenomMetadata metadata. */
                public metadata?: (cosmos.bank.v1beta1.IMetadata|null);

                /**
                 * Encodes the specified MsgSetDenomMetadata message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.verify|verify} messages.
                 * @param message MsgSetDenomMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetDenomMetadata message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.verify|verify} messages.
                 * @param message MsgSetDenomMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetDenomMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetDenomMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata;

                /**
                 * Decodes a MsgSetDenomMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetDenomMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata;

                /**
                 * Verifies a MsgSetDenomMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetDenomMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetDenomMetadata
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata;

                /**
                 * Creates a plain object from a MsgSetDenomMetadata message. Also converts values to other types if specified.
                 * @param message MsgSetDenomMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetDenomMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSetDenomMetadataResponse. */
            interface IMsgSetDenomMetadataResponse {
            }

            /** Represents a MsgSetDenomMetadataResponse. */
            class MsgSetDenomMetadataResponse implements IMsgSetDenomMetadataResponse {

                /**
                 * Constructs a new MsgSetDenomMetadataResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadataResponse);

                /**
                 * Encodes the specified MsgSetDenomMetadataResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse.verify|verify} messages.
                 * @param message MsgSetDenomMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSetDenomMetadataResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse.verify|verify} messages.
                 * @param message MsgSetDenomMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IMsgSetDenomMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSetDenomMetadataResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSetDenomMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse;

                /**
                 * Decodes a MsgSetDenomMetadataResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSetDenomMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse;

                /**
                 * Verifies a MsgSetDenomMetadataResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSetDenomMetadataResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSetDenomMetadataResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse;

                /**
                 * Creates a plain object from a MsgSetDenomMetadataResponse message. Also converts values to other types if specified.
                 * @param message MsgSetDenomMetadataResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSetDenomMetadataResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                 */
                public params(request: osmosis.tokenfactory.v1beta1.IQueryParamsRequest, callback: osmosis.tokenfactory.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request QueryParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: osmosis.tokenfactory.v1beta1.IQueryParamsRequest): Promise<osmosis.tokenfactory.v1beta1.QueryParamsResponse>;

                /**
                 * Calls DenomAuthorityMetadata.
                 * @param request QueryDenomAuthorityMetadataRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomAuthorityMetadataResponse
                 */
                public denomAuthorityMetadata(request: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest, callback: osmosis.tokenfactory.v1beta1.Query.DenomAuthorityMetadataCallback): void;

                /**
                 * Calls DenomAuthorityMetadata.
                 * @param request QueryDenomAuthorityMetadataRequest message or plain object
                 * @returns Promise
                 */
                public denomAuthorityMetadata(request: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest): Promise<osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse>;

                /**
                 * Calls DenomsFromCreator.
                 * @param request QueryDenomsFromCreatorRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomsFromCreatorResponse
                 */
                public denomsFromCreator(request: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest, callback: osmosis.tokenfactory.v1beta1.Query.DenomsFromCreatorCallback): void;

                /**
                 * Calls DenomsFromCreator.
                 * @param request QueryDenomsFromCreatorRequest message or plain object
                 * @returns Promise
                 */
                public denomsFromCreator(request: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest): Promise<osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] QueryParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.QueryParamsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Query#denomAuthorityMetadata}.
                 * @param error Error, if any
                 * @param [response] QueryDenomAuthorityMetadataResponse
                 */
                type DenomAuthorityMetadataCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse) => void;

                /**
                 * Callback as used by {@link osmosis.tokenfactory.v1beta1.Query#denomsFromCreator}.
                 * @param error Error, if any
                 * @param [response] QueryDenomsFromCreatorResponse
                 */
                type DenomsFromCreatorCallback = (error: (Error|null), response?: osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse) => void;
            }

            /** Properties of a QueryParamsRequest. */
            interface IQueryParamsRequest {
            }

            /** Represents a QueryParamsRequest. */
            class QueryParamsRequest implements IQueryParamsRequest {

                /**
                 * Constructs a new QueryParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IQueryParamsRequest);

                /**
                 * Encodes the specified QueryParamsRequest message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryParamsRequest.verify|verify} messages.
                 * @param message QueryParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.QueryParamsRequest;

                /**
                 * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.QueryParamsRequest;

                /**
                 * Verifies a QueryParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.QueryParamsRequest;

                /**
                 * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                 * @param message QueryParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryParamsResponse. */
            interface IQueryParamsResponse {

                /** QueryParamsResponse params */
                params?: (osmosis.tokenfactory.v1beta1.IParams|null);
            }

            /** Represents a QueryParamsResponse. */
            class QueryParamsResponse implements IQueryParamsResponse {

                /**
                 * Constructs a new QueryParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IQueryParamsResponse);

                /** QueryParamsResponse params. */
                public params?: (osmosis.tokenfactory.v1beta1.IParams|null);

                /**
                 * Encodes the specified QueryParamsResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryParamsResponse.verify|verify} messages.
                 * @param message QueryParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.QueryParamsResponse;

                /**
                 * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.QueryParamsResponse;

                /**
                 * Verifies a QueryParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.QueryParamsResponse;

                /**
                 * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                 * @param message QueryParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomAuthorityMetadataRequest. */
            interface IQueryDenomAuthorityMetadataRequest {

                /** QueryDenomAuthorityMetadataRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryDenomAuthorityMetadataRequest. */
            class QueryDenomAuthorityMetadataRequest implements IQueryDenomAuthorityMetadataRequest {

                /**
                 * Constructs a new QueryDenomAuthorityMetadataRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest);

                /** QueryDenomAuthorityMetadataRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataRequest message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataRequest message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomAuthorityMetadataRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomAuthorityMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest;

                /**
                 * Decodes a QueryDenomAuthorityMetadataRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomAuthorityMetadataRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest;

                /**
                 * Verifies a QueryDenomAuthorityMetadataRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomAuthorityMetadataRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomAuthorityMetadataRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest;

                /**
                 * Creates a plain object from a QueryDenomAuthorityMetadataRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomAuthorityMetadataRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomAuthorityMetadataRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomAuthorityMetadataResponse. */
            interface IQueryDenomAuthorityMetadataResponse {

                /** QueryDenomAuthorityMetadataResponse authority_metadata */
                authority_metadata?: (osmosis.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);
            }

            /** Represents a QueryDenomAuthorityMetadataResponse. */
            class QueryDenomAuthorityMetadataResponse implements IQueryDenomAuthorityMetadataResponse {

                /**
                 * Constructs a new QueryDenomAuthorityMetadataResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataResponse);

                /** QueryDenomAuthorityMetadataResponse authority_metadata. */
                public authority_metadata?: (osmosis.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomAuthorityMetadataResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse.verify|verify} messages.
                 * @param message QueryDenomAuthorityMetadataResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IQueryDenomAuthorityMetadataResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomAuthorityMetadataResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomAuthorityMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse;

                /**
                 * Decodes a QueryDenomAuthorityMetadataResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomAuthorityMetadataResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse;

                /**
                 * Verifies a QueryDenomAuthorityMetadataResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomAuthorityMetadataResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomAuthorityMetadataResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse;

                /**
                 * Creates a plain object from a QueryDenomAuthorityMetadataResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomAuthorityMetadataResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomAuthorityMetadataResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomsFromCreatorRequest. */
            interface IQueryDenomsFromCreatorRequest {

                /** QueryDenomsFromCreatorRequest creator */
                creator?: (string|null);
            }

            /** Represents a QueryDenomsFromCreatorRequest. */
            class QueryDenomsFromCreatorRequest implements IQueryDenomsFromCreatorRequest {

                /**
                 * Constructs a new QueryDenomsFromCreatorRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest);

                /** QueryDenomsFromCreatorRequest creator. */
                public creator: string;

                /**
                 * Encodes the specified QueryDenomsFromCreatorRequest message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomsFromCreatorRequest message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsFromCreatorRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomsFromCreatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest;

                /**
                 * Decodes a QueryDenomsFromCreatorRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomsFromCreatorRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest;

                /**
                 * Verifies a QueryDenomsFromCreatorRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomsFromCreatorRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomsFromCreatorRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest;

                /**
                 * Creates a plain object from a QueryDenomsFromCreatorRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomsFromCreatorRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomsFromCreatorRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomsFromCreatorResponse. */
            interface IQueryDenomsFromCreatorResponse {

                /** QueryDenomsFromCreatorResponse denoms */
                denoms?: (string[]|null);
            }

            /** Represents a QueryDenomsFromCreatorResponse. */
            class QueryDenomsFromCreatorResponse implements IQueryDenomsFromCreatorResponse {

                /**
                 * Constructs a new QueryDenomsFromCreatorResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorResponse);

                /** QueryDenomsFromCreatorResponse denoms. */
                public denoms: string[];

                /**
                 * Encodes the specified QueryDenomsFromCreatorResponse message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomsFromCreatorResponse message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse.verify|verify} messages.
                 * @param message QueryDenomsFromCreatorResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IQueryDenomsFromCreatorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomsFromCreatorResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomsFromCreatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse;

                /**
                 * Decodes a QueryDenomsFromCreatorResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomsFromCreatorResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse;

                /**
                 * Verifies a QueryDenomsFromCreatorResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomsFromCreatorResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomsFromCreatorResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse;

                /**
                 * Creates a plain object from a QueryDenomsFromCreatorResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomsFromCreatorResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomsFromCreatorResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DenomAuthorityMetadata. */
            interface IDenomAuthorityMetadata {

                /** DenomAuthorityMetadata admin */
                admin?: (string|null);
            }

            /** Represents a DenomAuthorityMetadata. */
            class DenomAuthorityMetadata implements IDenomAuthorityMetadata {

                /**
                 * Constructs a new DenomAuthorityMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IDenomAuthorityMetadata);

                /** DenomAuthorityMetadata admin. */
                public admin: string;

                /**
                 * Encodes the specified DenomAuthorityMetadata message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata.verify|verify} messages.
                 * @param message DenomAuthorityMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IDenomAuthorityMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenomAuthorityMetadata message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata.verify|verify} messages.
                 * @param message DenomAuthorityMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IDenomAuthorityMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenomAuthorityMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenomAuthorityMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata;

                /**
                 * Decodes a DenomAuthorityMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenomAuthorityMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata;

                /**
                 * Verifies a DenomAuthorityMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenomAuthorityMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenomAuthorityMetadata
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata;

                /**
                 * Creates a plain object from a DenomAuthorityMetadata message. Also converts values to other types if specified.
                 * @param message DenomAuthorityMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenomAuthorityMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params denom_creation_fee */
                denom_creation_fee?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IParams);

                /** Params denom_creation_fee. */
                public denom_creation_fee: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Params message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState params */
                params?: (osmosis.tokenfactory.v1beta1.IParams|null);

                /** GenesisState factory_denoms */
                factory_denoms?: (osmosis.tokenfactory.v1beta1.IGenesisDenom[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IGenesisState);

                /** GenesisState params. */
                public params?: (osmosis.tokenfactory.v1beta1.IParams|null);

                /** GenesisState factory_denoms. */
                public factory_denoms: osmosis.tokenfactory.v1beta1.IGenesisDenom[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisDenom. */
            interface IGenesisDenom {

                /** GenesisDenom denom */
                denom?: (string|null);

                /** GenesisDenom authority_metadata */
                authority_metadata?: (osmosis.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);
            }

            /** Represents a GenesisDenom. */
            class GenesisDenom implements IGenesisDenom {

                /**
                 * Constructs a new GenesisDenom.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.tokenfactory.v1beta1.IGenesisDenom);

                /** GenesisDenom denom. */
                public denom: string;

                /** GenesisDenom authority_metadata. */
                public authority_metadata?: (osmosis.tokenfactory.v1beta1.IDenomAuthorityMetadata|null);

                /**
                 * Encodes the specified GenesisDenom message. Does not implicitly {@link osmosis.tokenfactory.v1beta1.GenesisDenom.verify|verify} messages.
                 * @param message GenesisDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.tokenfactory.v1beta1.IGenesisDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisDenom message, length delimited. Does not implicitly {@link osmosis.tokenfactory.v1beta1.GenesisDenom.verify|verify} messages.
                 * @param message GenesisDenom message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.tokenfactory.v1beta1.IGenesisDenom, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisDenom message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.tokenfactory.v1beta1.GenesisDenom;

                /**
                 * Decodes a GenesisDenom message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisDenom
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.tokenfactory.v1beta1.GenesisDenom;

                /**
                 * Verifies a GenesisDenom message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisDenom message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisDenom
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.tokenfactory.v1beta1.GenesisDenom;

                /**
                 * Creates a plain object from a GenesisDenom message. Also converts values to other types if specified.
                 * @param message GenesisDenom
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.tokenfactory.v1beta1.GenesisDenom, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisDenom to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace twap. */
    namespace twap {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Params.
                 * @param request ParamsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and ParamsResponse
                 */
                public params(request: osmosis.twap.v1beta1.IParamsRequest, callback: osmosis.twap.v1beta1.Query.ParamsCallback): void;

                /**
                 * Calls Params.
                 * @param request ParamsRequest message or plain object
                 * @returns Promise
                 */
                public params(request: osmosis.twap.v1beta1.IParamsRequest): Promise<osmosis.twap.v1beta1.ParamsResponse>;

                /**
                 * Calls ArithmeticTwap.
                 * @param request ArithmeticTwapRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and ArithmeticTwapResponse
                 */
                public arithmeticTwap(request: osmosis.twap.v1beta1.IArithmeticTwapRequest, callback: osmosis.twap.v1beta1.Query.ArithmeticTwapCallback): void;

                /**
                 * Calls ArithmeticTwap.
                 * @param request ArithmeticTwapRequest message or plain object
                 * @returns Promise
                 */
                public arithmeticTwap(request: osmosis.twap.v1beta1.IArithmeticTwapRequest): Promise<osmosis.twap.v1beta1.ArithmeticTwapResponse>;

                /**
                 * Calls ArithmeticTwapToNow.
                 * @param request ArithmeticTwapToNowRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and ArithmeticTwapToNowResponse
                 */
                public arithmeticTwapToNow(request: osmosis.twap.v1beta1.IArithmeticTwapToNowRequest, callback: osmosis.twap.v1beta1.Query.ArithmeticTwapToNowCallback): void;

                /**
                 * Calls ArithmeticTwapToNow.
                 * @param request ArithmeticTwapToNowRequest message or plain object
                 * @returns Promise
                 */
                public arithmeticTwapToNow(request: osmosis.twap.v1beta1.IArithmeticTwapToNowRequest): Promise<osmosis.twap.v1beta1.ArithmeticTwapToNowResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.twap.v1beta1.Query#params}.
                 * @param error Error, if any
                 * @param [response] ParamsResponse
                 */
                type ParamsCallback = (error: (Error|null), response?: osmosis.twap.v1beta1.ParamsResponse) => void;

                /**
                 * Callback as used by {@link osmosis.twap.v1beta1.Query#arithmeticTwap}.
                 * @param error Error, if any
                 * @param [response] ArithmeticTwapResponse
                 */
                type ArithmeticTwapCallback = (error: (Error|null), response?: osmosis.twap.v1beta1.ArithmeticTwapResponse) => void;

                /**
                 * Callback as used by {@link osmosis.twap.v1beta1.Query#arithmeticTwapToNow}.
                 * @param error Error, if any
                 * @param [response] ArithmeticTwapToNowResponse
                 */
                type ArithmeticTwapToNowCallback = (error: (Error|null), response?: osmosis.twap.v1beta1.ArithmeticTwapToNowResponse) => void;
            }

            /** Properties of an ArithmeticTwapRequest. */
            interface IArithmeticTwapRequest {

                /** ArithmeticTwapRequest pool_id */
                pool_id?: (Long|null);

                /** ArithmeticTwapRequest base_asset */
                base_asset?: (string|null);

                /** ArithmeticTwapRequest quote_asset */
                quote_asset?: (string|null);

                /** ArithmeticTwapRequest start_time */
                start_time?: (google.protobuf.ITimestamp|null);

                /** ArithmeticTwapRequest end_time */
                end_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents an ArithmeticTwapRequest. */
            class ArithmeticTwapRequest implements IArithmeticTwapRequest {

                /**
                 * Constructs a new ArithmeticTwapRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IArithmeticTwapRequest);

                /** ArithmeticTwapRequest pool_id. */
                public pool_id: Long;

                /** ArithmeticTwapRequest base_asset. */
                public base_asset: string;

                /** ArithmeticTwapRequest quote_asset. */
                public quote_asset: string;

                /** ArithmeticTwapRequest start_time. */
                public start_time?: (google.protobuf.ITimestamp|null);

                /** ArithmeticTwapRequest end_time. */
                public end_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified ArithmeticTwapRequest message. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapRequest.verify|verify} messages.
                 * @param message ArithmeticTwapRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IArithmeticTwapRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ArithmeticTwapRequest message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapRequest.verify|verify} messages.
                 * @param message ArithmeticTwapRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IArithmeticTwapRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ArithmeticTwapRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ArithmeticTwapRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.ArithmeticTwapRequest;

                /**
                 * Decodes an ArithmeticTwapRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ArithmeticTwapRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.ArithmeticTwapRequest;

                /**
                 * Verifies an ArithmeticTwapRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ArithmeticTwapRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ArithmeticTwapRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.ArithmeticTwapRequest;

                /**
                 * Creates a plain object from an ArithmeticTwapRequest message. Also converts values to other types if specified.
                 * @param message ArithmeticTwapRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.ArithmeticTwapRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ArithmeticTwapRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ArithmeticTwapResponse. */
            interface IArithmeticTwapResponse {

                /** ArithmeticTwapResponse arithmetic_twap */
                arithmetic_twap?: (string|null);
            }

            /** Represents an ArithmeticTwapResponse. */
            class ArithmeticTwapResponse implements IArithmeticTwapResponse {

                /**
                 * Constructs a new ArithmeticTwapResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IArithmeticTwapResponse);

                /** ArithmeticTwapResponse arithmetic_twap. */
                public arithmetic_twap: string;

                /**
                 * Encodes the specified ArithmeticTwapResponse message. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapResponse.verify|verify} messages.
                 * @param message ArithmeticTwapResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IArithmeticTwapResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ArithmeticTwapResponse message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapResponse.verify|verify} messages.
                 * @param message ArithmeticTwapResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IArithmeticTwapResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ArithmeticTwapResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ArithmeticTwapResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.ArithmeticTwapResponse;

                /**
                 * Decodes an ArithmeticTwapResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ArithmeticTwapResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.ArithmeticTwapResponse;

                /**
                 * Verifies an ArithmeticTwapResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ArithmeticTwapResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ArithmeticTwapResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.ArithmeticTwapResponse;

                /**
                 * Creates a plain object from an ArithmeticTwapResponse message. Also converts values to other types if specified.
                 * @param message ArithmeticTwapResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.ArithmeticTwapResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ArithmeticTwapResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ArithmeticTwapToNowRequest. */
            interface IArithmeticTwapToNowRequest {

                /** ArithmeticTwapToNowRequest pool_id */
                pool_id?: (Long|null);

                /** ArithmeticTwapToNowRequest base_asset */
                base_asset?: (string|null);

                /** ArithmeticTwapToNowRequest quote_asset */
                quote_asset?: (string|null);

                /** ArithmeticTwapToNowRequest start_time */
                start_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents an ArithmeticTwapToNowRequest. */
            class ArithmeticTwapToNowRequest implements IArithmeticTwapToNowRequest {

                /**
                 * Constructs a new ArithmeticTwapToNowRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IArithmeticTwapToNowRequest);

                /** ArithmeticTwapToNowRequest pool_id. */
                public pool_id: Long;

                /** ArithmeticTwapToNowRequest base_asset. */
                public base_asset: string;

                /** ArithmeticTwapToNowRequest quote_asset. */
                public quote_asset: string;

                /** ArithmeticTwapToNowRequest start_time. */
                public start_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified ArithmeticTwapToNowRequest message. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapToNowRequest.verify|verify} messages.
                 * @param message ArithmeticTwapToNowRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IArithmeticTwapToNowRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ArithmeticTwapToNowRequest message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapToNowRequest.verify|verify} messages.
                 * @param message ArithmeticTwapToNowRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IArithmeticTwapToNowRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ArithmeticTwapToNowRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ArithmeticTwapToNowRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.ArithmeticTwapToNowRequest;

                /**
                 * Decodes an ArithmeticTwapToNowRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ArithmeticTwapToNowRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.ArithmeticTwapToNowRequest;

                /**
                 * Verifies an ArithmeticTwapToNowRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ArithmeticTwapToNowRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ArithmeticTwapToNowRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.ArithmeticTwapToNowRequest;

                /**
                 * Creates a plain object from an ArithmeticTwapToNowRequest message. Also converts values to other types if specified.
                 * @param message ArithmeticTwapToNowRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.ArithmeticTwapToNowRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ArithmeticTwapToNowRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an ArithmeticTwapToNowResponse. */
            interface IArithmeticTwapToNowResponse {

                /** ArithmeticTwapToNowResponse arithmetic_twap */
                arithmetic_twap?: (string|null);
            }

            /** Represents an ArithmeticTwapToNowResponse. */
            class ArithmeticTwapToNowResponse implements IArithmeticTwapToNowResponse {

                /**
                 * Constructs a new ArithmeticTwapToNowResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IArithmeticTwapToNowResponse);

                /** ArithmeticTwapToNowResponse arithmetic_twap. */
                public arithmetic_twap: string;

                /**
                 * Encodes the specified ArithmeticTwapToNowResponse message. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapToNowResponse.verify|verify} messages.
                 * @param message ArithmeticTwapToNowResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IArithmeticTwapToNowResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ArithmeticTwapToNowResponse message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.ArithmeticTwapToNowResponse.verify|verify} messages.
                 * @param message ArithmeticTwapToNowResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IArithmeticTwapToNowResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ArithmeticTwapToNowResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ArithmeticTwapToNowResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.ArithmeticTwapToNowResponse;

                /**
                 * Decodes an ArithmeticTwapToNowResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ArithmeticTwapToNowResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.ArithmeticTwapToNowResponse;

                /**
                 * Verifies an ArithmeticTwapToNowResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ArithmeticTwapToNowResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ArithmeticTwapToNowResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.ArithmeticTwapToNowResponse;

                /**
                 * Creates a plain object from an ArithmeticTwapToNowResponse message. Also converts values to other types if specified.
                 * @param message ArithmeticTwapToNowResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.ArithmeticTwapToNowResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ArithmeticTwapToNowResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ParamsRequest. */
            interface IParamsRequest {
            }

            /** Represents a ParamsRequest. */
            class ParamsRequest implements IParamsRequest {

                /**
                 * Constructs a new ParamsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IParamsRequest);

                /**
                 * Encodes the specified ParamsRequest message. Does not implicitly {@link osmosis.twap.v1beta1.ParamsRequest.verify|verify} messages.
                 * @param message ParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ParamsRequest message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.ParamsRequest.verify|verify} messages.
                 * @param message ParamsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ParamsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.ParamsRequest;

                /**
                 * Decodes a ParamsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ParamsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.ParamsRequest;

                /**
                 * Verifies a ParamsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ParamsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ParamsRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.ParamsRequest;

                /**
                 * Creates a plain object from a ParamsRequest message. Also converts values to other types if specified.
                 * @param message ParamsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.ParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ParamsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ParamsResponse. */
            interface IParamsResponse {

                /** ParamsResponse params */
                params?: (osmosis.twap.v1beta1.IParams|null);
            }

            /** Represents a ParamsResponse. */
            class ParamsResponse implements IParamsResponse {

                /**
                 * Constructs a new ParamsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IParamsResponse);

                /** ParamsResponse params. */
                public params?: (osmosis.twap.v1beta1.IParams|null);

                /**
                 * Encodes the specified ParamsResponse message. Does not implicitly {@link osmosis.twap.v1beta1.ParamsResponse.verify|verify} messages.
                 * @param message ParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ParamsResponse message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.ParamsResponse.verify|verify} messages.
                 * @param message ParamsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ParamsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.ParamsResponse;

                /**
                 * Decodes a ParamsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ParamsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.ParamsResponse;

                /**
                 * Verifies a ParamsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ParamsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ParamsResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.ParamsResponse;

                /**
                 * Creates a plain object from a ParamsResponse message. Also converts values to other types if specified.
                 * @param message ParamsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.ParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ParamsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TwapRecord. */
            interface ITwapRecord {

                /** TwapRecord pool_id */
                pool_id?: (Long|null);

                /** TwapRecord asset0_denom */
                asset0_denom?: (string|null);

                /** TwapRecord asset1_denom */
                asset1_denom?: (string|null);

                /** TwapRecord height */
                height?: (Long|null);

                /** TwapRecord time */
                time?: (google.protobuf.ITimestamp|null);

                /** TwapRecord p0_last_spot_price */
                p0_last_spot_price?: (string|null);

                /** TwapRecord p1_last_spot_price */
                p1_last_spot_price?: (string|null);

                /** TwapRecord p0_arithmetic_twap_accumulator */
                p0_arithmetic_twap_accumulator?: (string|null);

                /** TwapRecord p1_arithmetic_twap_accumulator */
                p1_arithmetic_twap_accumulator?: (string|null);

                /** TwapRecord last_error_time */
                last_error_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a TwapRecord. */
            class TwapRecord implements ITwapRecord {

                /**
                 * Constructs a new TwapRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.ITwapRecord);

                /** TwapRecord pool_id. */
                public pool_id: Long;

                /** TwapRecord asset0_denom. */
                public asset0_denom: string;

                /** TwapRecord asset1_denom. */
                public asset1_denom: string;

                /** TwapRecord height. */
                public height: Long;

                /** TwapRecord time. */
                public time?: (google.protobuf.ITimestamp|null);

                /** TwapRecord p0_last_spot_price. */
                public p0_last_spot_price: string;

                /** TwapRecord p1_last_spot_price. */
                public p1_last_spot_price: string;

                /** TwapRecord p0_arithmetic_twap_accumulator. */
                public p0_arithmetic_twap_accumulator: string;

                /** TwapRecord p1_arithmetic_twap_accumulator. */
                public p1_arithmetic_twap_accumulator: string;

                /** TwapRecord last_error_time. */
                public last_error_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified TwapRecord message. Does not implicitly {@link osmosis.twap.v1beta1.TwapRecord.verify|verify} messages.
                 * @param message TwapRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.ITwapRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TwapRecord message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.TwapRecord.verify|verify} messages.
                 * @param message TwapRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.ITwapRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TwapRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TwapRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.TwapRecord;

                /**
                 * Decodes a TwapRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TwapRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.TwapRecord;

                /**
                 * Verifies a TwapRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TwapRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TwapRecord
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.TwapRecord;

                /**
                 * Creates a plain object from a TwapRecord message. Also converts values to other types if specified.
                 * @param message TwapRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.TwapRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TwapRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params prune_epoch_identifier */
                prune_epoch_identifier?: (string|null);

                /** Params record_history_keep_period */
                record_history_keep_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IParams);

                /** Params prune_epoch_identifier. */
                public prune_epoch_identifier: string;

                /** Params record_history_keep_period. */
                public record_history_keep_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified Params message. Does not implicitly {@link osmosis.twap.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState twaps */
                twaps?: (osmosis.twap.v1beta1.ITwapRecord[]|null);

                /** GenesisState params */
                params?: (osmosis.twap.v1beta1.IParams|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.twap.v1beta1.IGenesisState);

                /** GenesisState twaps. */
                public twaps: osmosis.twap.v1beta1.ITwapRecord[];

                /** GenesisState params. */
                public params?: (osmosis.twap.v1beta1.IParams|null);

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.twap.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.twap.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.twap.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.twap.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.twap.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.twap.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.twap.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.twap.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace txfees. */
    namespace txfees {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of an UpdateFeeTokenProposal. */
            interface IUpdateFeeTokenProposal {

                /** UpdateFeeTokenProposal title */
                title?: (string|null);

                /** UpdateFeeTokenProposal description */
                description?: (string|null);

                /** UpdateFeeTokenProposal feetoken */
                feetoken?: (osmosis.txfees.v1beta1.IFeeToken|null);
            }

            /** Represents an UpdateFeeTokenProposal. */
            class UpdateFeeTokenProposal implements IUpdateFeeTokenProposal {

                /**
                 * Constructs a new UpdateFeeTokenProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IUpdateFeeTokenProposal);

                /** UpdateFeeTokenProposal title. */
                public title: string;

                /** UpdateFeeTokenProposal description. */
                public description: string;

                /** UpdateFeeTokenProposal feetoken. */
                public feetoken?: (osmosis.txfees.v1beta1.IFeeToken|null);

                /**
                 * Encodes the specified UpdateFeeTokenProposal message. Does not implicitly {@link osmosis.txfees.v1beta1.UpdateFeeTokenProposal.verify|verify} messages.
                 * @param message UpdateFeeTokenProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IUpdateFeeTokenProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateFeeTokenProposal message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.UpdateFeeTokenProposal.verify|verify} messages.
                 * @param message UpdateFeeTokenProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IUpdateFeeTokenProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateFeeTokenProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateFeeTokenProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.UpdateFeeTokenProposal;

                /**
                 * Decodes an UpdateFeeTokenProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateFeeTokenProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.UpdateFeeTokenProposal;

                /**
                 * Verifies an UpdateFeeTokenProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateFeeTokenProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateFeeTokenProposal
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.UpdateFeeTokenProposal;

                /**
                 * Creates a plain object from an UpdateFeeTokenProposal message. Also converts values to other types if specified.
                 * @param message UpdateFeeTokenProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.UpdateFeeTokenProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateFeeTokenProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a FeeToken. */
            interface IFeeToken {

                /** FeeToken denom */
                denom?: (string|null);

                /** FeeToken poolID */
                poolID?: (Long|null);
            }

            /** Represents a FeeToken. */
            class FeeToken implements IFeeToken {

                /**
                 * Constructs a new FeeToken.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IFeeToken);

                /** FeeToken denom. */
                public denom: string;

                /** FeeToken poolID. */
                public poolID: Long;

                /**
                 * Encodes the specified FeeToken message. Does not implicitly {@link osmosis.txfees.v1beta1.FeeToken.verify|verify} messages.
                 * @param message FeeToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IFeeToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FeeToken message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.FeeToken.verify|verify} messages.
                 * @param message FeeToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IFeeToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FeeToken message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FeeToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.FeeToken;

                /**
                 * Decodes a FeeToken message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FeeToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.FeeToken;

                /**
                 * Verifies a FeeToken message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FeeToken message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FeeToken
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.FeeToken;

                /**
                 * Creates a plain object from a FeeToken message. Also converts values to other types if specified.
                 * @param message FeeToken
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.FeeToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FeeToken to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls FeeTokens.
                 * @param request QueryFeeTokensRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryFeeTokensResponse
                 */
                public feeTokens(request: osmosis.txfees.v1beta1.IQueryFeeTokensRequest, callback: osmosis.txfees.v1beta1.Query.FeeTokensCallback): void;

                /**
                 * Calls FeeTokens.
                 * @param request QueryFeeTokensRequest message or plain object
                 * @returns Promise
                 */
                public feeTokens(request: osmosis.txfees.v1beta1.IQueryFeeTokensRequest): Promise<osmosis.txfees.v1beta1.QueryFeeTokensResponse>;

                /**
                 * Calls DenomSpotPrice.
                 * @param request QueryDenomSpotPriceRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomSpotPriceResponse
                 */
                public denomSpotPrice(request: osmosis.txfees.v1beta1.IQueryDenomSpotPriceRequest, callback: osmosis.txfees.v1beta1.Query.DenomSpotPriceCallback): void;

                /**
                 * Calls DenomSpotPrice.
                 * @param request QueryDenomSpotPriceRequest message or plain object
                 * @returns Promise
                 */
                public denomSpotPrice(request: osmosis.txfees.v1beta1.IQueryDenomSpotPriceRequest): Promise<osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse>;

                /**
                 * Calls DenomPoolId.
                 * @param request QueryDenomPoolIdRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryDenomPoolIdResponse
                 */
                public denomPoolId(request: osmosis.txfees.v1beta1.IQueryDenomPoolIdRequest, callback: osmosis.txfees.v1beta1.Query.DenomPoolIdCallback): void;

                /**
                 * Calls DenomPoolId.
                 * @param request QueryDenomPoolIdRequest message or plain object
                 * @returns Promise
                 */
                public denomPoolId(request: osmosis.txfees.v1beta1.IQueryDenomPoolIdRequest): Promise<osmosis.txfees.v1beta1.QueryDenomPoolIdResponse>;

                /**
                 * Calls BaseDenom.
                 * @param request QueryBaseDenomRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryBaseDenomResponse
                 */
                public baseDenom(request: osmosis.txfees.v1beta1.IQueryBaseDenomRequest, callback: osmosis.txfees.v1beta1.Query.BaseDenomCallback): void;

                /**
                 * Calls BaseDenom.
                 * @param request QueryBaseDenomRequest message or plain object
                 * @returns Promise
                 */
                public baseDenom(request: osmosis.txfees.v1beta1.IQueryBaseDenomRequest): Promise<osmosis.txfees.v1beta1.QueryBaseDenomResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link osmosis.txfees.v1beta1.Query#feeTokens}.
                 * @param error Error, if any
                 * @param [response] QueryFeeTokensResponse
                 */
                type FeeTokensCallback = (error: (Error|null), response?: osmosis.txfees.v1beta1.QueryFeeTokensResponse) => void;

                /**
                 * Callback as used by {@link osmosis.txfees.v1beta1.Query#denomSpotPrice}.
                 * @param error Error, if any
                 * @param [response] QueryDenomSpotPriceResponse
                 */
                type DenomSpotPriceCallback = (error: (Error|null), response?: osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse) => void;

                /**
                 * Callback as used by {@link osmosis.txfees.v1beta1.Query#denomPoolId}.
                 * @param error Error, if any
                 * @param [response] QueryDenomPoolIdResponse
                 */
                type DenomPoolIdCallback = (error: (Error|null), response?: osmosis.txfees.v1beta1.QueryDenomPoolIdResponse) => void;

                /**
                 * Callback as used by {@link osmosis.txfees.v1beta1.Query#baseDenom}.
                 * @param error Error, if any
                 * @param [response] QueryBaseDenomResponse
                 */
                type BaseDenomCallback = (error: (Error|null), response?: osmosis.txfees.v1beta1.QueryBaseDenomResponse) => void;
            }

            /** Properties of a QueryFeeTokensRequest. */
            interface IQueryFeeTokensRequest {
            }

            /** Represents a QueryFeeTokensRequest. */
            class QueryFeeTokensRequest implements IQueryFeeTokensRequest {

                /**
                 * Constructs a new QueryFeeTokensRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryFeeTokensRequest);

                /**
                 * Encodes the specified QueryFeeTokensRequest message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryFeeTokensRequest.verify|verify} messages.
                 * @param message QueryFeeTokensRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryFeeTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeTokensRequest message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryFeeTokensRequest.verify|verify} messages.
                 * @param message QueryFeeTokensRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryFeeTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeTokensRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeTokensRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryFeeTokensRequest;

                /**
                 * Decodes a QueryFeeTokensRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeTokensRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryFeeTokensRequest;

                /**
                 * Verifies a QueryFeeTokensRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeTokensRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeTokensRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryFeeTokensRequest;

                /**
                 * Creates a plain object from a QueryFeeTokensRequest message. Also converts values to other types if specified.
                 * @param message QueryFeeTokensRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryFeeTokensRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeTokensRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryFeeTokensResponse. */
            interface IQueryFeeTokensResponse {

                /** QueryFeeTokensResponse fee_tokens */
                fee_tokens?: (osmosis.txfees.v1beta1.IFeeToken[]|null);
            }

            /** Represents a QueryFeeTokensResponse. */
            class QueryFeeTokensResponse implements IQueryFeeTokensResponse {

                /**
                 * Constructs a new QueryFeeTokensResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryFeeTokensResponse);

                /** QueryFeeTokensResponse fee_tokens. */
                public fee_tokens: osmosis.txfees.v1beta1.IFeeToken[];

                /**
                 * Encodes the specified QueryFeeTokensResponse message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryFeeTokensResponse.verify|verify} messages.
                 * @param message QueryFeeTokensResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryFeeTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryFeeTokensResponse message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryFeeTokensResponse.verify|verify} messages.
                 * @param message QueryFeeTokensResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryFeeTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryFeeTokensResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryFeeTokensResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryFeeTokensResponse;

                /**
                 * Decodes a QueryFeeTokensResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryFeeTokensResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryFeeTokensResponse;

                /**
                 * Verifies a QueryFeeTokensResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryFeeTokensResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryFeeTokensResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryFeeTokensResponse;

                /**
                 * Creates a plain object from a QueryFeeTokensResponse message. Also converts values to other types if specified.
                 * @param message QueryFeeTokensResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryFeeTokensResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryFeeTokensResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomSpotPriceRequest. */
            interface IQueryDenomSpotPriceRequest {

                /** QueryDenomSpotPriceRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryDenomSpotPriceRequest. */
            class QueryDenomSpotPriceRequest implements IQueryDenomSpotPriceRequest {

                /**
                 * Constructs a new QueryDenomSpotPriceRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryDenomSpotPriceRequest);

                /** QueryDenomSpotPriceRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryDenomSpotPriceRequest message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest.verify|verify} messages.
                 * @param message QueryDenomSpotPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryDenomSpotPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomSpotPriceRequest message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest.verify|verify} messages.
                 * @param message QueryDenomSpotPriceRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryDenomSpotPriceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomSpotPriceRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomSpotPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest;

                /**
                 * Decodes a QueryDenomSpotPriceRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomSpotPriceRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest;

                /**
                 * Verifies a QueryDenomSpotPriceRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomSpotPriceRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomSpotPriceRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest;

                /**
                 * Creates a plain object from a QueryDenomSpotPriceRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomSpotPriceRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomSpotPriceRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomSpotPriceResponse. */
            interface IQueryDenomSpotPriceResponse {

                /** QueryDenomSpotPriceResponse poolID */
                poolID?: (Long|null);

                /** QueryDenomSpotPriceResponse spot_price */
                spot_price?: (string|null);
            }

            /** Represents a QueryDenomSpotPriceResponse. */
            class QueryDenomSpotPriceResponse implements IQueryDenomSpotPriceResponse {

                /**
                 * Constructs a new QueryDenomSpotPriceResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryDenomSpotPriceResponse);

                /** QueryDenomSpotPriceResponse poolID. */
                public poolID: Long;

                /** QueryDenomSpotPriceResponse spot_price. */
                public spot_price: string;

                /**
                 * Encodes the specified QueryDenomSpotPriceResponse message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse.verify|verify} messages.
                 * @param message QueryDenomSpotPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryDenomSpotPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomSpotPriceResponse message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse.verify|verify} messages.
                 * @param message QueryDenomSpotPriceResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryDenomSpotPriceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomSpotPriceResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomSpotPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse;

                /**
                 * Decodes a QueryDenomSpotPriceResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomSpotPriceResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse;

                /**
                 * Verifies a QueryDenomSpotPriceResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomSpotPriceResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomSpotPriceResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse;

                /**
                 * Creates a plain object from a QueryDenomSpotPriceResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomSpotPriceResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomSpotPriceResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomPoolIdRequest. */
            interface IQueryDenomPoolIdRequest {

                /** QueryDenomPoolIdRequest denom */
                denom?: (string|null);
            }

            /** Represents a QueryDenomPoolIdRequest. */
            class QueryDenomPoolIdRequest implements IQueryDenomPoolIdRequest {

                /**
                 * Constructs a new QueryDenomPoolIdRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryDenomPoolIdRequest);

                /** QueryDenomPoolIdRequest denom. */
                public denom: string;

                /**
                 * Encodes the specified QueryDenomPoolIdRequest message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomPoolIdRequest.verify|verify} messages.
                 * @param message QueryDenomPoolIdRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryDenomPoolIdRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomPoolIdRequest message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomPoolIdRequest.verify|verify} messages.
                 * @param message QueryDenomPoolIdRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryDenomPoolIdRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomPoolIdRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomPoolIdRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryDenomPoolIdRequest;

                /**
                 * Decodes a QueryDenomPoolIdRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomPoolIdRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryDenomPoolIdRequest;

                /**
                 * Verifies a QueryDenomPoolIdRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomPoolIdRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomPoolIdRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryDenomPoolIdRequest;

                /**
                 * Creates a plain object from a QueryDenomPoolIdRequest message. Also converts values to other types if specified.
                 * @param message QueryDenomPoolIdRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryDenomPoolIdRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomPoolIdRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryDenomPoolIdResponse. */
            interface IQueryDenomPoolIdResponse {

                /** QueryDenomPoolIdResponse poolID */
                poolID?: (Long|null);
            }

            /** Represents a QueryDenomPoolIdResponse. */
            class QueryDenomPoolIdResponse implements IQueryDenomPoolIdResponse {

                /**
                 * Constructs a new QueryDenomPoolIdResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryDenomPoolIdResponse);

                /** QueryDenomPoolIdResponse poolID. */
                public poolID: Long;

                /**
                 * Encodes the specified QueryDenomPoolIdResponse message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomPoolIdResponse.verify|verify} messages.
                 * @param message QueryDenomPoolIdResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryDenomPoolIdResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryDenomPoolIdResponse message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryDenomPoolIdResponse.verify|verify} messages.
                 * @param message QueryDenomPoolIdResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryDenomPoolIdResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryDenomPoolIdResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryDenomPoolIdResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryDenomPoolIdResponse;

                /**
                 * Decodes a QueryDenomPoolIdResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryDenomPoolIdResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryDenomPoolIdResponse;

                /**
                 * Verifies a QueryDenomPoolIdResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryDenomPoolIdResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryDenomPoolIdResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryDenomPoolIdResponse;

                /**
                 * Creates a plain object from a QueryDenomPoolIdResponse message. Also converts values to other types if specified.
                 * @param message QueryDenomPoolIdResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryDenomPoolIdResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryDenomPoolIdResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBaseDenomRequest. */
            interface IQueryBaseDenomRequest {
            }

            /** Represents a QueryBaseDenomRequest. */
            class QueryBaseDenomRequest implements IQueryBaseDenomRequest {

                /**
                 * Constructs a new QueryBaseDenomRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryBaseDenomRequest);

                /**
                 * Encodes the specified QueryBaseDenomRequest message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryBaseDenomRequest.verify|verify} messages.
                 * @param message QueryBaseDenomRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryBaseDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBaseDenomRequest message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryBaseDenomRequest.verify|verify} messages.
                 * @param message QueryBaseDenomRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryBaseDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBaseDenomRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBaseDenomRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryBaseDenomRequest;

                /**
                 * Decodes a QueryBaseDenomRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBaseDenomRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryBaseDenomRequest;

                /**
                 * Verifies a QueryBaseDenomRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBaseDenomRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBaseDenomRequest
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryBaseDenomRequest;

                /**
                 * Creates a plain object from a QueryBaseDenomRequest message. Also converts values to other types if specified.
                 * @param message QueryBaseDenomRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryBaseDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBaseDenomRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryBaseDenomResponse. */
            interface IQueryBaseDenomResponse {

                /** QueryBaseDenomResponse base_denom */
                base_denom?: (string|null);
            }

            /** Represents a QueryBaseDenomResponse. */
            class QueryBaseDenomResponse implements IQueryBaseDenomResponse {

                /**
                 * Constructs a new QueryBaseDenomResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IQueryBaseDenomResponse);

                /** QueryBaseDenomResponse base_denom. */
                public base_denom: string;

                /**
                 * Encodes the specified QueryBaseDenomResponse message. Does not implicitly {@link osmosis.txfees.v1beta1.QueryBaseDenomResponse.verify|verify} messages.
                 * @param message QueryBaseDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IQueryBaseDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryBaseDenomResponse message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.QueryBaseDenomResponse.verify|verify} messages.
                 * @param message QueryBaseDenomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IQueryBaseDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryBaseDenomResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryBaseDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.QueryBaseDenomResponse;

                /**
                 * Decodes a QueryBaseDenomResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryBaseDenomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.QueryBaseDenomResponse;

                /**
                 * Verifies a QueryBaseDenomResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryBaseDenomResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryBaseDenomResponse
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.QueryBaseDenomResponse;

                /**
                 * Creates a plain object from a QueryBaseDenomResponse message. Also converts values to other types if specified.
                 * @param message QueryBaseDenomResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.QueryBaseDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryBaseDenomResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState basedenom */
                basedenom?: (string|null);

                /** GenesisState feetokens */
                feetokens?: (osmosis.txfees.v1beta1.IFeeToken[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: osmosis.txfees.v1beta1.IGenesisState);

                /** GenesisState basedenom. */
                public basedenom: string;

                /** GenesisState feetokens. */
                public feetokens: osmosis.txfees.v1beta1.IFeeToken[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link osmosis.txfees.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: osmosis.txfees.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link osmosis.txfees.v1beta1.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: osmosis.txfees.v1beta1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): osmosis.txfees.v1beta1.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): osmosis.txfees.v1beta1.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): osmosis.txfees.v1beta1.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: osmosis.txfees.v1beta1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace cosmos. */
export namespace cosmos {

    /** Namespace base. */
    namespace base {

        /** Namespace query. */
        namespace query {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a PageRequest. */
                interface IPageRequest {

                    /** PageRequest key */
                    key?: (Uint8Array|null);

                    /** PageRequest offset */
                    offset?: (Long|null);

                    /** PageRequest limit */
                    limit?: (Long|null);

                    /** PageRequest count_total */
                    count_total?: (boolean|null);

                    /** PageRequest reverse */
                    reverse?: (boolean|null);
                }

                /** Represents a PageRequest. */
                class PageRequest implements IPageRequest {

                    /**
                     * Constructs a new PageRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageRequest);

                    /** PageRequest key. */
                    public key: Uint8Array;

                    /** PageRequest offset. */
                    public offset: Long;

                    /** PageRequest limit. */
                    public limit: Long;

                    /** PageRequest count_total. */
                    public count_total: boolean;

                    /** PageRequest reverse. */
                    public reverse: boolean;

                    /**
                     * Encodes the specified PageRequest message. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageRequest message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Verifies a PageRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Creates a plain object from a PageRequest message. Also converts values to other types if specified.
                     * @param message PageRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PageResponse. */
                interface IPageResponse {

                    /** PageResponse next_key */
                    next_key?: (Uint8Array|null);

                    /** PageResponse total */
                    total?: (Long|null);
                }

                /** Represents a PageResponse. */
                class PageResponse implements IPageResponse {

                    /**
                     * Constructs a new PageResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageResponse);

                    /** PageResponse next_key. */
                    public next_key: Uint8Array;

                    /** PageResponse total. */
                    public total: Long;

                    /**
                     * Encodes the specified PageResponse message. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageResponse message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Verifies a PageResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Creates a plain object from a PageResponse message. Also converts values to other types if specified.
                     * @param message PageResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Coin. */
            interface ICoin {

                /** Coin denom */
                denom?: (string|null);

                /** Coin amount */
                amount?: (string|null);
            }

            /** Represents a Coin. */
            class Coin implements ICoin {

                /**
                 * Constructs a new Coin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.ICoin);

                /** Coin denom. */
                public denom: string;

                /** Coin amount. */
                public amount: string;

                /**
                 * Encodes the specified Coin message. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Coin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Coin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.Coin;

                /**
                 * Decodes a Coin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.Coin;

                /**
                 * Verifies a Coin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Coin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Coin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.Coin;

                /**
                 * Creates a plain object from a Coin message. Also converts values to other types if specified.
                 * @param message Coin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.Coin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Coin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecCoin. */
            interface IDecCoin {

                /** DecCoin denom */
                denom?: (string|null);

                /** DecCoin amount */
                amount?: (string|null);
            }

            /** Represents a DecCoin. */
            class DecCoin implements IDecCoin {

                /**
                 * Constructs a new DecCoin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecCoin);

                /** DecCoin denom. */
                public denom: string;

                /** DecCoin amount. */
                public amount: string;

                /**
                 * Encodes the specified DecCoin message. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecCoin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecCoin;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecCoin;

                /**
                 * Verifies a DecCoin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecCoin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecCoin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecCoin;

                /**
                 * Creates a plain object from a DecCoin message. Also converts values to other types if specified.
                 * @param message DecCoin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecCoin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecCoin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an IntProto. */
            interface IIntProto {

                /** IntProto int */
                int?: (string|null);
            }

            /** Represents an IntProto. */
            class IntProto implements IIntProto {

                /**
                 * Constructs a new IntProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IIntProto);

                /** IntProto int. */
                public int: string;

                /**
                 * Encodes the specified IntProto message. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IntProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IntProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.IntProto;

                /**
                 * Decodes an IntProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.IntProto;

                /**
                 * Verifies an IntProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IntProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IntProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.IntProto;

                /**
                 * Creates a plain object from an IntProto message. Also converts values to other types if specified.
                 * @param message IntProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.IntProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IntProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecProto. */
            interface IDecProto {

                /** DecProto dec */
                dec?: (string|null);
            }

            /** Represents a DecProto. */
            class DecProto implements IDecProto {

                /**
                 * Constructs a new DecProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecProto);

                /** DecProto dec. */
                public dec: string;

                /**
                 * Encodes the specified DecProto message. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecProto;

                /**
                 * Decodes a DecProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecProto;

                /**
                 * Verifies a DecProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecProto;

                /**
                 * Creates a plain object from a DecProto message. Also converts values to other types if specified.
                 * @param message DecProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace auth. */
    namespace auth {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a BaseAccount. */
            interface IBaseAccount {

                /** BaseAccount address */
                address?: (string|null);

                /** BaseAccount pub_key */
                pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number */
                account_number?: (Long|null);

                /** BaseAccount sequence */
                sequence?: (Long|null);
            }

            /** Represents a BaseAccount. */
            class BaseAccount implements IBaseAccount {

                /**
                 * Constructs a new BaseAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IBaseAccount);

                /** BaseAccount address. */
                public address: string;

                /** BaseAccount pub_key. */
                public pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number. */
                public account_number: Long;

                /** BaseAccount sequence. */
                public sequence: Long;

                /**
                 * Encodes the specified BaseAccount message. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BaseAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Verifies a BaseAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BaseAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BaseAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Creates a plain object from a BaseAccount message. Also converts values to other types if specified.
                 * @param message BaseAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.BaseAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BaseAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleAccount. */
            interface IModuleAccount {

                /** ModuleAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name */
                name?: (string|null);

                /** ModuleAccount permissions */
                permissions?: (string[]|null);
            }

            /** Represents a ModuleAccount. */
            class ModuleAccount implements IModuleAccount {

                /**
                 * Constructs a new ModuleAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IModuleAccount);

                /** ModuleAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name. */
                public name: string;

                /** ModuleAccount permissions. */
                public permissions: string[];

                /**
                 * Encodes the specified ModuleAccount message. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Verifies a ModuleAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Creates a plain object from a ModuleAccount message. Also converts values to other types if specified.
                 * @param message ModuleAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.ModuleAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params max_memo_characters */
                max_memo_characters?: (Long|null);

                /** Params tx_sig_limit */
                tx_sig_limit?: (Long|null);

                /** Params tx_size_cost_per_byte */
                tx_size_cost_per_byte?: (Long|null);

                /** Params sig_verify_cost_ed25519 */
                sig_verify_cost_ed25519?: (Long|null);

                /** Params sig_verify_cost_secp256k1 */
                sig_verify_cost_secp256k1?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IParams);

                /** Params max_memo_characters. */
                public max_memo_characters: Long;

                /** Params tx_sig_limit. */
                public tx_sig_limit: Long;

                /** Params tx_size_cost_per_byte. */
                public tx_size_cost_per_byte: Long;

                /** Params sig_verify_cost_ed25519. */
                public sig_verify_cost_ed25519: Long;

                /** Params sig_verify_cost_secp256k1. */
                public sig_verify_cost_secp256k1: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace staking. */
    namespace staking {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a HistoricalInfo. */
            interface IHistoricalInfo {

                /** HistoricalInfo header */
                header?: (tendermint.types.IHeader|null);

                /** HistoricalInfo valset */
                valset?: (cosmos.staking.v1beta1.IValidator[]|null);
            }

            /** Represents a HistoricalInfo. */
            class HistoricalInfo implements IHistoricalInfo {

                /**
                 * Constructs a new HistoricalInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IHistoricalInfo);

                /** HistoricalInfo header. */
                public header?: (tendermint.types.IHeader|null);

                /** HistoricalInfo valset. */
                public valset: cosmos.staking.v1beta1.IValidator[];

                /**
                 * Encodes the specified HistoricalInfo message. Does not implicitly {@link cosmos.staking.v1beta1.HistoricalInfo.verify|verify} messages.
                 * @param message HistoricalInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IHistoricalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified HistoricalInfo message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.HistoricalInfo.verify|verify} messages.
                 * @param message HistoricalInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IHistoricalInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a HistoricalInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns HistoricalInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.HistoricalInfo;

                /**
                 * Decodes a HistoricalInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns HistoricalInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.HistoricalInfo;

                /**
                 * Verifies a HistoricalInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a HistoricalInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns HistoricalInfo
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.HistoricalInfo;

                /**
                 * Creates a plain object from a HistoricalInfo message. Also converts values to other types if specified.
                 * @param message HistoricalInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.HistoricalInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this HistoricalInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CommissionRates. */
            interface ICommissionRates {

                /** CommissionRates rate */
                rate?: (string|null);

                /** CommissionRates max_rate */
                max_rate?: (string|null);

                /** CommissionRates max_change_rate */
                max_change_rate?: (string|null);
            }

            /** Represents a CommissionRates. */
            class CommissionRates implements ICommissionRates {

                /**
                 * Constructs a new CommissionRates.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.ICommissionRates);

                /** CommissionRates rate. */
                public rate: string;

                /** CommissionRates max_rate. */
                public max_rate: string;

                /** CommissionRates max_change_rate. */
                public max_change_rate: string;

                /**
                 * Encodes the specified CommissionRates message. Does not implicitly {@link cosmos.staking.v1beta1.CommissionRates.verify|verify} messages.
                 * @param message CommissionRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.ICommissionRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommissionRates message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.CommissionRates.verify|verify} messages.
                 * @param message CommissionRates message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.ICommissionRates, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommissionRates message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommissionRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.CommissionRates;

                /**
                 * Decodes a CommissionRates message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommissionRates
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.CommissionRates;

                /**
                 * Verifies a CommissionRates message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommissionRates message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommissionRates
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.CommissionRates;

                /**
                 * Creates a plain object from a CommissionRates message. Also converts values to other types if specified.
                 * @param message CommissionRates
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.CommissionRates, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommissionRates to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Commission. */
            interface ICommission {

                /** Commission commission_rates */
                commission_rates?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** Commission update_time */
                update_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a Commission. */
            class Commission implements ICommission {

                /**
                 * Constructs a new Commission.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.ICommission);

                /** Commission commission_rates. */
                public commission_rates?: (cosmos.staking.v1beta1.ICommissionRates|null);

                /** Commission update_time. */
                public update_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified Commission message. Does not implicitly {@link cosmos.staking.v1beta1.Commission.verify|verify} messages.
                 * @param message Commission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.ICommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Commission message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Commission.verify|verify} messages.
                 * @param message Commission message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.ICommission, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Commission message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Commission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Commission;

                /**
                 * Decodes a Commission message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Commission
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Commission;

                /**
                 * Verifies a Commission message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Commission message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Commission
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Commission;

                /**
                 * Creates a plain object from a Commission message. Also converts values to other types if specified.
                 * @param message Commission
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Commission, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Commission to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Description. */
            interface IDescription {

                /** Description moniker */
                moniker?: (string|null);

                /** Description identity */
                identity?: (string|null);

                /** Description website */
                website?: (string|null);

                /** Description security_contact */
                security_contact?: (string|null);

                /** Description details */
                details?: (string|null);
            }

            /** Represents a Description. */
            class Description implements IDescription {

                /**
                 * Constructs a new Description.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDescription);

                /** Description moniker. */
                public moniker: string;

                /** Description identity. */
                public identity: string;

                /** Description website. */
                public website: string;

                /** Description security_contact. */
                public security_contact: string;

                /** Description details. */
                public details: string;

                /**
                 * Encodes the specified Description message. Does not implicitly {@link cosmos.staking.v1beta1.Description.verify|verify} messages.
                 * @param message Description message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDescription, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Description message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Description.verify|verify} messages.
                 * @param message Description message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDescription, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Description message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Description
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Description;

                /**
                 * Decodes a Description message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Description
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Description;

                /**
                 * Verifies a Description message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Description message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Description
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Description;

                /**
                 * Creates a plain object from a Description message. Also converts values to other types if specified.
                 * @param message Description
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Description, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Description to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Validator. */
            interface IValidator {

                /** Validator operator_address */
                operator_address?: (string|null);

                /** Validator consensus_pubkey */
                consensus_pubkey?: (google.protobuf.IAny|null);

                /** Validator jailed */
                jailed?: (boolean|null);

                /** Validator status */
                status?: (cosmos.staking.v1beta1.BondStatus|null);

                /** Validator tokens */
                tokens?: (string|null);

                /** Validator delegator_shares */
                delegator_shares?: (string|null);

                /** Validator description */
                description?: (cosmos.staking.v1beta1.IDescription|null);

                /** Validator unbonding_height */
                unbonding_height?: (Long|null);

                /** Validator unbonding_time */
                unbonding_time?: (google.protobuf.ITimestamp|null);

                /** Validator commission */
                commission?: (cosmos.staking.v1beta1.ICommission|null);

                /** Validator min_self_delegation */
                min_self_delegation?: (string|null);
            }

            /** Represents a Validator. */
            class Validator implements IValidator {

                /**
                 * Constructs a new Validator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IValidator);

                /** Validator operator_address. */
                public operator_address: string;

                /** Validator consensus_pubkey. */
                public consensus_pubkey?: (google.protobuf.IAny|null);

                /** Validator jailed. */
                public jailed: boolean;

                /** Validator status. */
                public status: cosmos.staking.v1beta1.BondStatus;

                /** Validator tokens. */
                public tokens: string;

                /** Validator delegator_shares. */
                public delegator_shares: string;

                /** Validator description. */
                public description?: (cosmos.staking.v1beta1.IDescription|null);

                /** Validator unbonding_height. */
                public unbonding_height: Long;

                /** Validator unbonding_time. */
                public unbonding_time?: (google.protobuf.ITimestamp|null);

                /** Validator commission. */
                public commission?: (cosmos.staking.v1beta1.ICommission|null);

                /** Validator min_self_delegation. */
                public min_self_delegation: string;

                /**
                 * Encodes the specified Validator message. Does not implicitly {@link cosmos.staking.v1beta1.Validator.verify|verify} messages.
                 * @param message Validator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Validator message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Validator.verify|verify} messages.
                 * @param message Validator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Validator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Validator;

                /**
                 * Decodes a Validator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Validator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Validator;

                /**
                 * Verifies a Validator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Validator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Validator
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Validator;

                /**
                 * Creates a plain object from a Validator message. Also converts values to other types if specified.
                 * @param message Validator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Validator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** BondStatus enum. */
            enum BondStatus {
                BOND_STATUS_UNSPECIFIED = 0,
                BOND_STATUS_UNBONDED = 1,
                BOND_STATUS_UNBONDING = 2,
                BOND_STATUS_BONDED = 3
            }

            /** Properties of a ValAddresses. */
            interface IValAddresses {

                /** ValAddresses addresses */
                addresses?: (string[]|null);
            }

            /** Represents a ValAddresses. */
            class ValAddresses implements IValAddresses {

                /**
                 * Constructs a new ValAddresses.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IValAddresses);

                /** ValAddresses addresses. */
                public addresses: string[];

                /**
                 * Encodes the specified ValAddresses message. Does not implicitly {@link cosmos.staking.v1beta1.ValAddresses.verify|verify} messages.
                 * @param message ValAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IValAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValAddresses message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.ValAddresses.verify|verify} messages.
                 * @param message ValAddresses message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IValAddresses, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValAddresses message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.ValAddresses;

                /**
                 * Decodes a ValAddresses message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValAddresses
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.ValAddresses;

                /**
                 * Verifies a ValAddresses message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValAddresses message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValAddresses
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.ValAddresses;

                /**
                 * Creates a plain object from a ValAddresses message. Also converts values to other types if specified.
                 * @param message ValAddresses
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.ValAddresses, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValAddresses to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVPair. */
            interface IDVPair {

                /** DVPair delegator_address */
                delegator_address?: (string|null);

                /** DVPair validator_address */
                validator_address?: (string|null);
            }

            /** Represents a DVPair. */
            class DVPair implements IDVPair {

                /**
                 * Constructs a new DVPair.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVPair);

                /** DVPair delegator_address. */
                public delegator_address: string;

                /** DVPair validator_address. */
                public validator_address: string;

                /**
                 * Encodes the specified DVPair message. Does not implicitly {@link cosmos.staking.v1beta1.DVPair.verify|verify} messages.
                 * @param message DVPair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVPair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVPair message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVPair.verify|verify} messages.
                 * @param message DVPair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVPair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVPair message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVPair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVPair;

                /**
                 * Decodes a DVPair message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVPair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVPair;

                /**
                 * Verifies a DVPair message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVPair message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVPair
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVPair;

                /**
                 * Creates a plain object from a DVPair message. Also converts values to other types if specified.
                 * @param message DVPair
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVPair, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVPair to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVPairs. */
            interface IDVPairs {

                /** DVPairs pairs */
                pairs?: (cosmos.staking.v1beta1.IDVPair[]|null);
            }

            /** Represents a DVPairs. */
            class DVPairs implements IDVPairs {

                /**
                 * Constructs a new DVPairs.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVPairs);

                /** DVPairs pairs. */
                public pairs: cosmos.staking.v1beta1.IDVPair[];

                /**
                 * Encodes the specified DVPairs message. Does not implicitly {@link cosmos.staking.v1beta1.DVPairs.verify|verify} messages.
                 * @param message DVPairs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVPairs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVPairs message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVPairs.verify|verify} messages.
                 * @param message DVPairs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVPairs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVPairs message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVPairs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVPairs;

                /**
                 * Decodes a DVPairs message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVPairs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVPairs;

                /**
                 * Verifies a DVPairs message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVPairs message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVPairs
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVPairs;

                /**
                 * Creates a plain object from a DVPairs message. Also converts values to other types if specified.
                 * @param message DVPairs
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVPairs, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVPairs to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVVTriplet. */
            interface IDVVTriplet {

                /** DVVTriplet delegator_address */
                delegator_address?: (string|null);

                /** DVVTriplet validator_src_address */
                validator_src_address?: (string|null);

                /** DVVTriplet validator_dst_address */
                validator_dst_address?: (string|null);
            }

            /** Represents a DVVTriplet. */
            class DVVTriplet implements IDVVTriplet {

                /**
                 * Constructs a new DVVTriplet.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVVTriplet);

                /** DVVTriplet delegator_address. */
                public delegator_address: string;

                /** DVVTriplet validator_src_address. */
                public validator_src_address: string;

                /** DVVTriplet validator_dst_address. */
                public validator_dst_address: string;

                /**
                 * Encodes the specified DVVTriplet message. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplet.verify|verify} messages.
                 * @param message DVVTriplet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVVTriplet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVVTriplet message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplet.verify|verify} messages.
                 * @param message DVVTriplet message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVVTriplet, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVVTriplet message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVVTriplet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVVTriplet;

                /**
                 * Decodes a DVVTriplet message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVVTriplet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVVTriplet;

                /**
                 * Verifies a DVVTriplet message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVVTriplet message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVVTriplet
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVVTriplet;

                /**
                 * Creates a plain object from a DVVTriplet message. Also converts values to other types if specified.
                 * @param message DVVTriplet
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVVTriplet, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVVTriplet to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DVVTriplets. */
            interface IDVVTriplets {

                /** DVVTriplets triplets */
                triplets?: (cosmos.staking.v1beta1.IDVVTriplet[]|null);
            }

            /** Represents a DVVTriplets. */
            class DVVTriplets implements IDVVTriplets {

                /**
                 * Constructs a new DVVTriplets.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDVVTriplets);

                /** DVVTriplets triplets. */
                public triplets: cosmos.staking.v1beta1.IDVVTriplet[];

                /**
                 * Encodes the specified DVVTriplets message. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplets.verify|verify} messages.
                 * @param message DVVTriplets message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDVVTriplets, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DVVTriplets message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DVVTriplets.verify|verify} messages.
                 * @param message DVVTriplets message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDVVTriplets, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DVVTriplets message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DVVTriplets
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DVVTriplets;

                /**
                 * Decodes a DVVTriplets message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DVVTriplets
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DVVTriplets;

                /**
                 * Verifies a DVVTriplets message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DVVTriplets message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DVVTriplets
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DVVTriplets;

                /**
                 * Creates a plain object from a DVVTriplets message. Also converts values to other types if specified.
                 * @param message DVVTriplets
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DVVTriplets, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DVVTriplets to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Delegation. */
            interface IDelegation {

                /** Delegation delegator_address */
                delegator_address?: (string|null);

                /** Delegation validator_address */
                validator_address?: (string|null);

                /** Delegation shares */
                shares?: (string|null);
            }

            /** Represents a Delegation. */
            class Delegation implements IDelegation {

                /**
                 * Constructs a new Delegation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDelegation);

                /** Delegation delegator_address. */
                public delegator_address: string;

                /** Delegation validator_address. */
                public validator_address: string;

                /** Delegation shares. */
                public shares: string;

                /**
                 * Encodes the specified Delegation message. Does not implicitly {@link cosmos.staking.v1beta1.Delegation.verify|verify} messages.
                 * @param message Delegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Delegation message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Delegation.verify|verify} messages.
                 * @param message Delegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Delegation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Delegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Delegation;

                /**
                 * Decodes a Delegation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Delegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Delegation;

                /**
                 * Verifies a Delegation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Delegation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Delegation
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Delegation;

                /**
                 * Creates a plain object from a Delegation message. Also converts values to other types if specified.
                 * @param message Delegation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Delegation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Delegation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UnbondingDelegation. */
            interface IUnbondingDelegation {

                /** UnbondingDelegation delegator_address */
                delegator_address?: (string|null);

                /** UnbondingDelegation validator_address */
                validator_address?: (string|null);

                /** UnbondingDelegation entries */
                entries?: (cosmos.staking.v1beta1.IUnbondingDelegationEntry[]|null);
            }

            /** Represents an UnbondingDelegation. */
            class UnbondingDelegation implements IUnbondingDelegation {

                /**
                 * Constructs a new UnbondingDelegation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IUnbondingDelegation);

                /** UnbondingDelegation delegator_address. */
                public delegator_address: string;

                /** UnbondingDelegation validator_address. */
                public validator_address: string;

                /** UnbondingDelegation entries. */
                public entries: cosmos.staking.v1beta1.IUnbondingDelegationEntry[];

                /**
                 * Encodes the specified UnbondingDelegation message. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegation.verify|verify} messages.
                 * @param message UnbondingDelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IUnbondingDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UnbondingDelegation message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegation.verify|verify} messages.
                 * @param message UnbondingDelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IUnbondingDelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnbondingDelegation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UnbondingDelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.UnbondingDelegation;

                /**
                 * Decodes an UnbondingDelegation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UnbondingDelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.UnbondingDelegation;

                /**
                 * Verifies an UnbondingDelegation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UnbondingDelegation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UnbondingDelegation
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.UnbondingDelegation;

                /**
                 * Creates a plain object from an UnbondingDelegation message. Also converts values to other types if specified.
                 * @param message UnbondingDelegation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.UnbondingDelegation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UnbondingDelegation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an UnbondingDelegationEntry. */
            interface IUnbondingDelegationEntry {

                /** UnbondingDelegationEntry creation_height */
                creation_height?: (Long|null);

                /** UnbondingDelegationEntry completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);

                /** UnbondingDelegationEntry initial_balance */
                initial_balance?: (string|null);

                /** UnbondingDelegationEntry balance */
                balance?: (string|null);
            }

            /** Represents an UnbondingDelegationEntry. */
            class UnbondingDelegationEntry implements IUnbondingDelegationEntry {

                /**
                 * Constructs a new UnbondingDelegationEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IUnbondingDelegationEntry);

                /** UnbondingDelegationEntry creation_height. */
                public creation_height: Long;

                /** UnbondingDelegationEntry completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /** UnbondingDelegationEntry initial_balance. */
                public initial_balance: string;

                /** UnbondingDelegationEntry balance. */
                public balance: string;

                /**
                 * Encodes the specified UnbondingDelegationEntry message. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegationEntry.verify|verify} messages.
                 * @param message UnbondingDelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IUnbondingDelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UnbondingDelegationEntry message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.UnbondingDelegationEntry.verify|verify} messages.
                 * @param message UnbondingDelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IUnbondingDelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UnbondingDelegationEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UnbondingDelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.UnbondingDelegationEntry;

                /**
                 * Decodes an UnbondingDelegationEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UnbondingDelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.UnbondingDelegationEntry;

                /**
                 * Verifies an UnbondingDelegationEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UnbondingDelegationEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UnbondingDelegationEntry
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.UnbondingDelegationEntry;

                /**
                 * Creates a plain object from an UnbondingDelegationEntry message. Also converts values to other types if specified.
                 * @param message UnbondingDelegationEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.UnbondingDelegationEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UnbondingDelegationEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RedelegationEntry. */
            interface IRedelegationEntry {

                /** RedelegationEntry creation_height */
                creation_height?: (Long|null);

                /** RedelegationEntry completion_time */
                completion_time?: (google.protobuf.ITimestamp|null);

                /** RedelegationEntry initial_balance */
                initial_balance?: (string|null);

                /** RedelegationEntry shares_dst */
                shares_dst?: (string|null);
            }

            /** Represents a RedelegationEntry. */
            class RedelegationEntry implements IRedelegationEntry {

                /**
                 * Constructs a new RedelegationEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegationEntry);

                /** RedelegationEntry creation_height. */
                public creation_height: Long;

                /** RedelegationEntry completion_time. */
                public completion_time?: (google.protobuf.ITimestamp|null);

                /** RedelegationEntry initial_balance. */
                public initial_balance: string;

                /** RedelegationEntry shares_dst. */
                public shares_dst: string;

                /**
                 * Encodes the specified RedelegationEntry message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntry.verify|verify} messages.
                 * @param message RedelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RedelegationEntry message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntry.verify|verify} messages.
                 * @param message RedelegationEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegationEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RedelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.RedelegationEntry;

                /**
                 * Decodes a RedelegationEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RedelegationEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.RedelegationEntry;

                /**
                 * Verifies a RedelegationEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RedelegationEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RedelegationEntry
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.RedelegationEntry;

                /**
                 * Creates a plain object from a RedelegationEntry message. Also converts values to other types if specified.
                 * @param message RedelegationEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.RedelegationEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RedelegationEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Redelegation. */
            interface IRedelegation {

                /** Redelegation delegator_address */
                delegator_address?: (string|null);

                /** Redelegation validator_src_address */
                validator_src_address?: (string|null);

                /** Redelegation validator_dst_address */
                validator_dst_address?: (string|null);

                /** Redelegation entries */
                entries?: (cosmos.staking.v1beta1.IRedelegationEntry[]|null);
            }

            /** Represents a Redelegation. */
            class Redelegation implements IRedelegation {

                /**
                 * Constructs a new Redelegation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegation);

                /** Redelegation delegator_address. */
                public delegator_address: string;

                /** Redelegation validator_src_address. */
                public validator_src_address: string;

                /** Redelegation validator_dst_address. */
                public validator_dst_address: string;

                /** Redelegation entries. */
                public entries: cosmos.staking.v1beta1.IRedelegationEntry[];

                /**
                 * Encodes the specified Redelegation message. Does not implicitly {@link cosmos.staking.v1beta1.Redelegation.verify|verify} messages.
                 * @param message Redelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Redelegation message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Redelegation.verify|verify} messages.
                 * @param message Redelegation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Redelegation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Redelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Redelegation;

                /**
                 * Decodes a Redelegation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Redelegation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Redelegation;

                /**
                 * Verifies a Redelegation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Redelegation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Redelegation
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Redelegation;

                /**
                 * Creates a plain object from a Redelegation message. Also converts values to other types if specified.
                 * @param message Redelegation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Redelegation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Redelegation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params unbonding_time */
                unbonding_time?: (google.protobuf.IDuration|null);

                /** Params max_validators */
                max_validators?: (number|null);

                /** Params max_entries */
                max_entries?: (number|null);

                /** Params historical_entries */
                historical_entries?: (number|null);

                /** Params bond_denom */
                bond_denom?: (string|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IParams);

                /** Params unbonding_time. */
                public unbonding_time?: (google.protobuf.IDuration|null);

                /** Params max_validators. */
                public max_validators: number;

                /** Params max_entries. */
                public max_entries: number;

                /** Params historical_entries. */
                public historical_entries: number;

                /** Params bond_denom. */
                public bond_denom: string;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.staking.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DelegationResponse. */
            interface IDelegationResponse {

                /** DelegationResponse delegation */
                delegation?: (cosmos.staking.v1beta1.IDelegation|null);

                /** DelegationResponse balance */
                balance?: (cosmos.base.v1beta1.ICoin|null);
            }

            /** Represents a DelegationResponse. */
            class DelegationResponse implements IDelegationResponse {

                /**
                 * Constructs a new DelegationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IDelegationResponse);

                /** DelegationResponse delegation. */
                public delegation?: (cosmos.staking.v1beta1.IDelegation|null);

                /** DelegationResponse balance. */
                public balance?: (cosmos.base.v1beta1.ICoin|null);

                /**
                 * Encodes the specified DelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.DelegationResponse.verify|verify} messages.
                 * @param message DelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DelegationResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.DelegationResponse.verify|verify} messages.
                 * @param message DelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IDelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DelegationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.DelegationResponse;

                /**
                 * Decodes a DelegationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.DelegationResponse;

                /**
                 * Verifies a DelegationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DelegationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DelegationResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.DelegationResponse;

                /**
                 * Creates a plain object from a DelegationResponse message. Also converts values to other types if specified.
                 * @param message DelegationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.DelegationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DelegationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RedelegationEntryResponse. */
            interface IRedelegationEntryResponse {

                /** RedelegationEntryResponse redelegation_entry */
                redelegation_entry?: (cosmos.staking.v1beta1.IRedelegationEntry|null);

                /** RedelegationEntryResponse balance */
                balance?: (string|null);
            }

            /** Represents a RedelegationEntryResponse. */
            class RedelegationEntryResponse implements IRedelegationEntryResponse {

                /**
                 * Constructs a new RedelegationEntryResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegationEntryResponse);

                /** RedelegationEntryResponse redelegation_entry. */
                public redelegation_entry?: (cosmos.staking.v1beta1.IRedelegationEntry|null);

                /** RedelegationEntryResponse balance. */
                public balance: string;

                /**
                 * Encodes the specified RedelegationEntryResponse message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntryResponse.verify|verify} messages.
                 * @param message RedelegationEntryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegationEntryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RedelegationEntryResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationEntryResponse.verify|verify} messages.
                 * @param message RedelegationEntryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegationEntryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationEntryResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RedelegationEntryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.RedelegationEntryResponse;

                /**
                 * Decodes a RedelegationEntryResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RedelegationEntryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.RedelegationEntryResponse;

                /**
                 * Verifies a RedelegationEntryResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RedelegationEntryResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RedelegationEntryResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.RedelegationEntryResponse;

                /**
                 * Creates a plain object from a RedelegationEntryResponse message. Also converts values to other types if specified.
                 * @param message RedelegationEntryResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.RedelegationEntryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RedelegationEntryResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a RedelegationResponse. */
            interface IRedelegationResponse {

                /** RedelegationResponse redelegation */
                redelegation?: (cosmos.staking.v1beta1.IRedelegation|null);

                /** RedelegationResponse entries */
                entries?: (cosmos.staking.v1beta1.IRedelegationEntryResponse[]|null);
            }

            /** Represents a RedelegationResponse. */
            class RedelegationResponse implements IRedelegationResponse {

                /**
                 * Constructs a new RedelegationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IRedelegationResponse);

                /** RedelegationResponse redelegation. */
                public redelegation?: (cosmos.staking.v1beta1.IRedelegation|null);

                /** RedelegationResponse entries. */
                public entries: cosmos.staking.v1beta1.IRedelegationEntryResponse[];

                /**
                 * Encodes the specified RedelegationResponse message. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationResponse.verify|verify} messages.
                 * @param message RedelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IRedelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RedelegationResponse message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.RedelegationResponse.verify|verify} messages.
                 * @param message RedelegationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IRedelegationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RedelegationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RedelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.RedelegationResponse;

                /**
                 * Decodes a RedelegationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RedelegationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.RedelegationResponse;

                /**
                 * Verifies a RedelegationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RedelegationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RedelegationResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.RedelegationResponse;

                /**
                 * Creates a plain object from a RedelegationResponse message. Also converts values to other types if specified.
                 * @param message RedelegationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.RedelegationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RedelegationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Pool. */
            interface IPool {

                /** Pool not_bonded_tokens */
                not_bonded_tokens?: (string|null);

                /** Pool bonded_tokens */
                bonded_tokens?: (string|null);
            }

            /** Represents a Pool. */
            class Pool implements IPool {

                /**
                 * Constructs a new Pool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.staking.v1beta1.IPool);

                /** Pool not_bonded_tokens. */
                public not_bonded_tokens: string;

                /** Pool bonded_tokens. */
                public bonded_tokens: string;

                /**
                 * Encodes the specified Pool message. Does not implicitly {@link cosmos.staking.v1beta1.Pool.verify|verify} messages.
                 * @param message Pool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.staking.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Pool message, length delimited. Does not implicitly {@link cosmos.staking.v1beta1.Pool.verify|verify} messages.
                 * @param message Pool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.staking.v1beta1.IPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Pool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Pool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.staking.v1beta1.Pool;

                /**
                 * Decodes a Pool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Pool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.staking.v1beta1.Pool;

                /**
                 * Verifies a Pool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Pool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Pool
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.staking.v1beta1.Pool;

                /**
                 * Creates a plain object from a Pool message. Also converts values to other types if specified.
                 * @param message Pool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.staking.v1beta1.Pool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Pool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace bank. */
    namespace bank {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Params. */
            interface IParams {

                /** Params send_enabled */
                send_enabled?: (cosmos.bank.v1beta1.ISendEnabled[]|null);

                /** Params default_send_enabled */
                default_send_enabled?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IParams);

                /** Params send_enabled. */
                public send_enabled: cosmos.bank.v1beta1.ISendEnabled[];

                /** Params default_send_enabled. */
                public default_send_enabled: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.bank.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SendEnabled. */
            interface ISendEnabled {

                /** SendEnabled denom */
                denom?: (string|null);

                /** SendEnabled enabled */
                enabled?: (boolean|null);
            }

            /** Represents a SendEnabled. */
            class SendEnabled implements ISendEnabled {

                /**
                 * Constructs a new SendEnabled.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.ISendEnabled);

                /** SendEnabled denom. */
                public denom: string;

                /** SendEnabled enabled. */
                public enabled: boolean;

                /**
                 * Encodes the specified SendEnabled message. Does not implicitly {@link cosmos.bank.v1beta1.SendEnabled.verify|verify} messages.
                 * @param message SendEnabled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.ISendEnabled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SendEnabled message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.SendEnabled.verify|verify} messages.
                 * @param message SendEnabled message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.ISendEnabled, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SendEnabled message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SendEnabled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Decodes a SendEnabled message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SendEnabled
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Verifies a SendEnabled message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SendEnabled message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SendEnabled
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.SendEnabled;

                /**
                 * Creates a plain object from a SendEnabled message. Also converts values to other types if specified.
                 * @param message SendEnabled
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.SendEnabled, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SendEnabled to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Input. */
            interface IInput {

                /** Input address */
                address?: (string|null);

                /** Input coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Input. */
            class Input implements IInput {

                /**
                 * Constructs a new Input.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IInput);

                /** Input address. */
                public address: string;

                /** Input coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Input message. Does not implicitly {@link cosmos.bank.v1beta1.Input.verify|verify} messages.
                 * @param message Input message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Input message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Input.verify|verify} messages.
                 * @param message Input message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IInput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Input message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Input
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Input;

                /**
                 * Decodes an Input message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Input
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Input;

                /**
                 * Verifies an Input message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Input message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Input
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Input;

                /**
                 * Creates a plain object from an Input message. Also converts values to other types if specified.
                 * @param message Input
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Input, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Input to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an Output. */
            interface IOutput {

                /** Output address */
                address?: (string|null);

                /** Output coins */
                coins?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents an Output. */
            class Output implements IOutput {

                /**
                 * Constructs a new Output.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IOutput);

                /** Output address. */
                public address: string;

                /** Output coins. */
                public coins: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Output message. Does not implicitly {@link cosmos.bank.v1beta1.Output.verify|verify} messages.
                 * @param message Output message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Output message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Output.verify|verify} messages.
                 * @param message Output message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IOutput, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Output message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Output
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Output;

                /**
                 * Decodes an Output message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Output
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Output;

                /**
                 * Verifies an Output message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Output message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Output
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Output;

                /**
                 * Creates a plain object from an Output message. Also converts values to other types if specified.
                 * @param message Output
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Output, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Output to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Supply. */
            interface ISupply {

                /** Supply total */
                total?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Supply. */
            class Supply implements ISupply {

                /**
                 * Constructs a new Supply.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.ISupply);

                /** Supply total. */
                public total: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Supply message. Does not implicitly {@link cosmos.bank.v1beta1.Supply.verify|verify} messages.
                 * @param message Supply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.ISupply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Supply message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Supply.verify|verify} messages.
                 * @param message Supply message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.ISupply, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Supply message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Supply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Supply;

                /**
                 * Decodes a Supply message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Supply
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Supply;

                /**
                 * Verifies a Supply message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Supply message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Supply
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Supply;

                /**
                 * Creates a plain object from a Supply message. Also converts values to other types if specified.
                 * @param message Supply
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Supply, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Supply to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DenomUnit. */
            interface IDenomUnit {

                /** DenomUnit denom */
                denom?: (string|null);

                /** DenomUnit exponent */
                exponent?: (number|null);

                /** DenomUnit aliases */
                aliases?: (string[]|null);
            }

            /** Represents a DenomUnit. */
            class DenomUnit implements IDenomUnit {

                /**
                 * Constructs a new DenomUnit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IDenomUnit);

                /** DenomUnit denom. */
                public denom: string;

                /** DenomUnit exponent. */
                public exponent: number;

                /** DenomUnit aliases. */
                public aliases: string[];

                /**
                 * Encodes the specified DenomUnit message. Does not implicitly {@link cosmos.bank.v1beta1.DenomUnit.verify|verify} messages.
                 * @param message DenomUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IDenomUnit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenomUnit message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.DenomUnit.verify|verify} messages.
                 * @param message DenomUnit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IDenomUnit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenomUnit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenomUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Decodes a DenomUnit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenomUnit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Verifies a DenomUnit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenomUnit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenomUnit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.DenomUnit;

                /**
                 * Creates a plain object from a DenomUnit message. Also converts values to other types if specified.
                 * @param message DenomUnit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.DenomUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenomUnit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Metadata. */
            interface IMetadata {

                /** Metadata description */
                description?: (string|null);

                /** Metadata denom_units */
                denom_units?: (cosmos.bank.v1beta1.IDenomUnit[]|null);

                /** Metadata base */
                base?: (string|null);

                /** Metadata display */
                display?: (string|null);

                /** Metadata name */
                name?: (string|null);

                /** Metadata symbol */
                symbol?: (string|null);
            }

            /** Represents a Metadata. */
            class Metadata implements IMetadata {

                /**
                 * Constructs a new Metadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.bank.v1beta1.IMetadata);

                /** Metadata description. */
                public description: string;

                /** Metadata denom_units. */
                public denom_units: cosmos.bank.v1beta1.IDenomUnit[];

                /** Metadata base. */
                public base: string;

                /** Metadata display. */
                public display: string;

                /** Metadata name. */
                public name: string;

                /** Metadata symbol. */
                public symbol: string;

                /**
                 * Encodes the specified Metadata message. Does not implicitly {@link cosmos.bank.v1beta1.Metadata.verify|verify} messages.
                 * @param message Metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.bank.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Metadata message, length delimited. Does not implicitly {@link cosmos.bank.v1beta1.Metadata.verify|verify} messages.
                 * @param message Metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.bank.v1beta1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Metadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.bank.v1beta1.Metadata;

                /**
                 * Decodes a Metadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.bank.v1beta1.Metadata;

                /**
                 * Verifies a Metadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Metadata
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.bank.v1beta1.Metadata;

                /**
                 * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                 * @param message Metadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.bank.v1beta1.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Metadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of a FileDescriptorSet. */
        interface IFileDescriptorSet {

            /** FileDescriptorSet file */
            file?: (google.protobuf.IFileDescriptorProto[]|null);
        }

        /** Represents a FileDescriptorSet. */
        class FileDescriptorSet implements IFileDescriptorSet {

            /**
             * Constructs a new FileDescriptorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorSet);

            /** FileDescriptorSet file. */
            public file: google.protobuf.IFileDescriptorProto[];

            /**
             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorSet;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorSet;

            /**
             * Verifies a FileDescriptorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorSet
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorSet;

            /**
             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
             * @param message FileDescriptorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileDescriptorProto. */
        interface IFileDescriptorProto {

            /** FileDescriptorProto name */
            name?: (string|null);

            /** FileDescriptorProto package */
            "package"?: (string|null);

            /** FileDescriptorProto dependency */
            dependency?: (string[]|null);

            /** FileDescriptorProto public_dependency */
            public_dependency?: (number[]|null);

            /** FileDescriptorProto weak_dependency */
            weak_dependency?: (number[]|null);

            /** FileDescriptorProto message_type */
            message_type?: (google.protobuf.IDescriptorProto[]|null);

            /** FileDescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** FileDescriptorProto service */
            service?: (google.protobuf.IServiceDescriptorProto[]|null);

            /** FileDescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** FileDescriptorProto options */
            options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info */
            source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax */
            syntax?: (string|null);
        }

        /** Represents a FileDescriptorProto. */
        class FileDescriptorProto implements IFileDescriptorProto {

            /**
             * Constructs a new FileDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorProto);

            /** FileDescriptorProto name. */
            public name: string;

            /** FileDescriptorProto package. */
            public package: string;

            /** FileDescriptorProto dependency. */
            public dependency: string[];

            /** FileDescriptorProto public_dependency. */
            public public_dependency: number[];

            /** FileDescriptorProto weak_dependency. */
            public weak_dependency: number[];

            /** FileDescriptorProto message_type. */
            public message_type: google.protobuf.IDescriptorProto[];

            /** FileDescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** FileDescriptorProto service. */
            public service: google.protobuf.IServiceDescriptorProto[];

            /** FileDescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** FileDescriptorProto options. */
            public options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info. */
            public source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax. */
            public syntax: string;

            /**
             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorProto;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorProto;

            /**
             * Verifies a FileDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorProto;

            /**
             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
             * @param message FileDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DescriptorProto. */
        interface IDescriptorProto {

            /** DescriptorProto name */
            name?: (string|null);

            /** DescriptorProto field */
            field?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto nested_type */
            nested_type?: (google.protobuf.IDescriptorProto[]|null);

            /** DescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** DescriptorProto extension_range */
            extension_range?: (google.protobuf.DescriptorProto.IExtensionRange[]|null);

            /** DescriptorProto oneof_decl */
            oneof_decl?: (google.protobuf.IOneofDescriptorProto[]|null);

            /** DescriptorProto options */
            options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range */
            reserved_range?: (google.protobuf.DescriptorProto.IReservedRange[]|null);

            /** DescriptorProto reserved_name */
            reserved_name?: (string[]|null);
        }

        /** Represents a DescriptorProto. */
        class DescriptorProto implements IDescriptorProto {

            /**
             * Constructs a new DescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDescriptorProto);

            /** DescriptorProto name. */
            public name: string;

            /** DescriptorProto field. */
            public field: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto nested_type. */
            public nested_type: google.protobuf.IDescriptorProto[];

            /** DescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** DescriptorProto extension_range. */
            public extension_range: google.protobuf.DescriptorProto.IExtensionRange[];

            /** DescriptorProto oneof_decl. */
            public oneof_decl: google.protobuf.IOneofDescriptorProto[];

            /** DescriptorProto options. */
            public options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range. */
            public reserved_range: google.protobuf.DescriptorProto.IReservedRange[];

            /** DescriptorProto reserved_name. */
            public reserved_name: string[];

            /**
             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto;

            /**
             * Verifies a DescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto;

            /**
             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
             * @param message DescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.DescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace DescriptorProto {

            /** Properties of an ExtensionRange. */
            interface IExtensionRange {

                /** ExtensionRange start */
                start?: (number|null);

                /** ExtensionRange end */
                end?: (number|null);
            }

            /** Represents an ExtensionRange. */
            class ExtensionRange implements IExtensionRange {

                /**
                 * Constructs a new ExtensionRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IExtensionRange);

                /** ExtensionRange start. */
                public start: number;

                /** ExtensionRange end. */
                public end: number;

                /**
                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Verifies an ExtensionRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtensionRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                 * @param message ExtensionRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ExtensionRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtensionRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReservedRange. */
            interface IReservedRange {

                /** ReservedRange start */
                start?: (number|null);

                /** ReservedRange end */
                end?: (number|null);
            }

            /** Represents a ReservedRange. */
            class ReservedRange implements IReservedRange {

                /**
                 * Constructs a new ReservedRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IReservedRange);

                /** ReservedRange start. */
                public start: number;

                /** ReservedRange end. */
                public end: number;

                /**
                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Verifies a ReservedRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReservedRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                 * @param message ReservedRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ReservedRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReservedRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a FieldDescriptorProto. */
        interface IFieldDescriptorProto {

            /** FieldDescriptorProto name */
            name?: (string|null);

            /** FieldDescriptorProto number */
            number?: (number|null);

            /** FieldDescriptorProto label */
            label?: (google.protobuf.FieldDescriptorProto.Label|null);

            /** FieldDescriptorProto type */
            type?: (google.protobuf.FieldDescriptorProto.Type|null);

            /** FieldDescriptorProto type_name */
            type_name?: (string|null);

            /** FieldDescriptorProto extendee */
            extendee?: (string|null);

            /** FieldDescriptorProto default_value */
            default_value?: (string|null);

            /** FieldDescriptorProto oneof_index */
            oneof_index?: (number|null);

            /** FieldDescriptorProto json_name */
            json_name?: (string|null);

            /** FieldDescriptorProto options */
            options?: (google.protobuf.IFieldOptions|null);
        }

        /** Represents a FieldDescriptorProto. */
        class FieldDescriptorProto implements IFieldDescriptorProto {

            /**
             * Constructs a new FieldDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldDescriptorProto);

            /** FieldDescriptorProto name. */
            public name: string;

            /** FieldDescriptorProto number. */
            public number: number;

            /** FieldDescriptorProto label. */
            public label: google.protobuf.FieldDescriptorProto.Label;

            /** FieldDescriptorProto type. */
            public type: google.protobuf.FieldDescriptorProto.Type;

            /** FieldDescriptorProto type_name. */
            public type_name: string;

            /** FieldDescriptorProto extendee. */
            public extendee: string;

            /** FieldDescriptorProto default_value. */
            public default_value: string;

            /** FieldDescriptorProto oneof_index. */
            public oneof_index: number;

            /** FieldDescriptorProto json_name. */
            public json_name: string;

            /** FieldDescriptorProto options. */
            public options?: (google.protobuf.IFieldOptions|null);

            /**
             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldDescriptorProto;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldDescriptorProto;

            /**
             * Verifies a FieldDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldDescriptorProto;

            /**
             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
             * @param message FieldDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldDescriptorProto {

            /** Type enum. */
            enum Type {
                TYPE_DOUBLE = 1,
                TYPE_FLOAT = 2,
                TYPE_INT64 = 3,
                TYPE_UINT64 = 4,
                TYPE_INT32 = 5,
                TYPE_FIXED64 = 6,
                TYPE_FIXED32 = 7,
                TYPE_BOOL = 8,
                TYPE_STRING = 9,
                TYPE_GROUP = 10,
                TYPE_MESSAGE = 11,
                TYPE_BYTES = 12,
                TYPE_UINT32 = 13,
                TYPE_ENUM = 14,
                TYPE_SFIXED32 = 15,
                TYPE_SFIXED64 = 16,
                TYPE_SINT32 = 17,
                TYPE_SINT64 = 18
            }

            /** Label enum. */
            enum Label {
                LABEL_OPTIONAL = 1,
                LABEL_REQUIRED = 2,
                LABEL_REPEATED = 3
            }
        }

        /** Properties of an OneofDescriptorProto. */
        interface IOneofDescriptorProto {

            /** OneofDescriptorProto name */
            name?: (string|null);

            /** OneofDescriptorProto options */
            options?: (google.protobuf.IOneofOptions|null);
        }

        /** Represents an OneofDescriptorProto. */
        class OneofDescriptorProto implements IOneofDescriptorProto {

            /**
             * Constructs a new OneofDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofDescriptorProto);

            /** OneofDescriptorProto name. */
            public name: string;

            /** OneofDescriptorProto options. */
            public options?: (google.protobuf.IOneofOptions|null);

            /**
             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofDescriptorProto;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofDescriptorProto;

            /**
             * Verifies an OneofDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofDescriptorProto;

            /**
             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
             * @param message OneofDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumDescriptorProto. */
        interface IEnumDescriptorProto {

            /** EnumDescriptorProto name */
            name?: (string|null);

            /** EnumDescriptorProto value */
            value?: (google.protobuf.IEnumValueDescriptorProto[]|null);

            /** EnumDescriptorProto options */
            options?: (google.protobuf.IEnumOptions|null);
        }

        /** Represents an EnumDescriptorProto. */
        class EnumDescriptorProto implements IEnumDescriptorProto {

            /**
             * Constructs a new EnumDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumDescriptorProto);

            /** EnumDescriptorProto name. */
            public name: string;

            /** EnumDescriptorProto value. */
            public value: google.protobuf.IEnumValueDescriptorProto[];

            /** EnumDescriptorProto options. */
            public options?: (google.protobuf.IEnumOptions|null);

            /**
             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumDescriptorProto;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumDescriptorProto;

            /**
             * Verifies an EnumDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumDescriptorProto;

            /**
             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueDescriptorProto. */
        interface IEnumValueDescriptorProto {

            /** EnumValueDescriptorProto name */
            name?: (string|null);

            /** EnumValueDescriptorProto number */
            number?: (number|null);

            /** EnumValueDescriptorProto options */
            options?: (google.protobuf.IEnumValueOptions|null);
        }

        /** Represents an EnumValueDescriptorProto. */
        class EnumValueDescriptorProto implements IEnumValueDescriptorProto {

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueDescriptorProto);

            /** EnumValueDescriptorProto name. */
            public name: string;

            /** EnumValueDescriptorProto number. */
            public number: number;

            /** EnumValueDescriptorProto options. */
            public options?: (google.protobuf.IEnumValueOptions|null);

            /**
             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueDescriptorProto;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueDescriptorProto;

            /**
             * Verifies an EnumValueDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueDescriptorProto;

            /**
             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumValueDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceDescriptorProto. */
        interface IServiceDescriptorProto {

            /** ServiceDescriptorProto name */
            name?: (string|null);

            /** ServiceDescriptorProto method */
            method?: (google.protobuf.IMethodDescriptorProto[]|null);

            /** ServiceDescriptorProto options */
            options?: (google.protobuf.IServiceOptions|null);
        }

        /** Represents a ServiceDescriptorProto. */
        class ServiceDescriptorProto implements IServiceDescriptorProto {

            /**
             * Constructs a new ServiceDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceDescriptorProto);

            /** ServiceDescriptorProto name. */
            public name: string;

            /** ServiceDescriptorProto method. */
            public method: google.protobuf.IMethodDescriptorProto[];

            /** ServiceDescriptorProto options. */
            public options?: (google.protobuf.IServiceOptions|null);

            /**
             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceDescriptorProto;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceDescriptorProto;

            /**
             * Verifies a ServiceDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceDescriptorProto;

            /**
             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
             * @param message ServiceDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodDescriptorProto. */
        interface IMethodDescriptorProto {

            /** MethodDescriptorProto name */
            name?: (string|null);

            /** MethodDescriptorProto input_type */
            input_type?: (string|null);

            /** MethodDescriptorProto output_type */
            output_type?: (string|null);

            /** MethodDescriptorProto options */
            options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming */
            client_streaming?: (boolean|null);

            /** MethodDescriptorProto server_streaming */
            server_streaming?: (boolean|null);
        }

        /** Represents a MethodDescriptorProto. */
        class MethodDescriptorProto implements IMethodDescriptorProto {

            /**
             * Constructs a new MethodDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodDescriptorProto);

            /** MethodDescriptorProto name. */
            public name: string;

            /** MethodDescriptorProto input_type. */
            public input_type: string;

            /** MethodDescriptorProto output_type. */
            public output_type: string;

            /** MethodDescriptorProto options. */
            public options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming. */
            public client_streaming: boolean;

            /** MethodDescriptorProto server_streaming. */
            public server_streaming: boolean;

            /**
             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodDescriptorProto;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodDescriptorProto;

            /**
             * Verifies a MethodDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodDescriptorProto;

            /**
             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
             * @param message MethodDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileOptions. */
        interface IFileOptions {

            /** FileOptions java_package */
            java_package?: (string|null);

            /** FileOptions java_outer_classname */
            java_outer_classname?: (string|null);

            /** FileOptions java_multiple_files */
            java_multiple_files?: (boolean|null);

            /** FileOptions java_generate_equals_and_hash */
            java_generate_equals_and_hash?: (boolean|null);

            /** FileOptions java_string_check_utf8 */
            java_string_check_utf8?: (boolean|null);

            /** FileOptions optimize_for */
            optimize_for?: (google.protobuf.FileOptions.OptimizeMode|null);

            /** FileOptions go_package */
            go_package?: (string|null);

            /** FileOptions cc_generic_services */
            cc_generic_services?: (boolean|null);

            /** FileOptions java_generic_services */
            java_generic_services?: (boolean|null);

            /** FileOptions py_generic_services */
            py_generic_services?: (boolean|null);

            /** FileOptions deprecated */
            deprecated?: (boolean|null);

            /** FileOptions cc_enable_arenas */
            cc_enable_arenas?: (boolean|null);

            /** FileOptions objc_class_prefix */
            objc_class_prefix?: (string|null);

            /** FileOptions csharp_namespace */
            csharp_namespace?: (string|null);

            /** FileOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FileOptions .gogoproto.goproto_getters_all */
            ".gogoproto.goproto_getters_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_prefix_all */
            ".gogoproto.goproto_enum_prefix_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_stringer_all */
            ".gogoproto.goproto_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.verbose_equal_all */
            ".gogoproto.verbose_equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.face_all */
            ".gogoproto.face_all"?: (boolean|null);

            /** FileOptions .gogoproto.gostring_all */
            ".gogoproto.gostring_all"?: (boolean|null);

            /** FileOptions .gogoproto.populate_all */
            ".gogoproto.populate_all"?: (boolean|null);

            /** FileOptions .gogoproto.stringer_all */
            ".gogoproto.stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.onlyone_all */
            ".gogoproto.onlyone_all"?: (boolean|null);

            /** FileOptions .gogoproto.equal_all */
            ".gogoproto.equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.description_all */
            ".gogoproto.description_all"?: (boolean|null);

            /** FileOptions .gogoproto.testgen_all */
            ".gogoproto.testgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.benchgen_all */
            ".gogoproto.benchgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.marshaler_all */
            ".gogoproto.marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unmarshaler_all */
            ".gogoproto.unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.stable_marshaler_all */
            ".gogoproto.stable_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.sizer_all */
            ".gogoproto.sizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_stringer_all */
            ".gogoproto.goproto_enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.enum_stringer_all */
            ".gogoproto.enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_marshaler_all */
            ".gogoproto.unsafe_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_unmarshaler_all */
            ".gogoproto.unsafe_unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_extensions_map_all */
            ".gogoproto.goproto_extensions_map_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unrecognized_all */
            ".gogoproto.goproto_unrecognized_all"?: (boolean|null);

            /** FileOptions .gogoproto.gogoproto_import */
            ".gogoproto.gogoproto_import"?: (boolean|null);

            /** FileOptions .gogoproto.protosizer_all */
            ".gogoproto.protosizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.compare_all */
            ".gogoproto.compare_all"?: (boolean|null);

            /** FileOptions .gogoproto.typedecl_all */
            ".gogoproto.typedecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.enumdecl_all */
            ".gogoproto.enumdecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_registration */
            ".gogoproto.goproto_registration"?: (boolean|null);

            /** FileOptions .gogoproto.messagename_all */
            ".gogoproto.messagename_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_sizecache_all */
            ".gogoproto.goproto_sizecache_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unkeyed_all */
            ".gogoproto.goproto_unkeyed_all"?: (boolean|null);
        }

        /** Represents a FileOptions. */
        class FileOptions implements IFileOptions {

            /**
             * Constructs a new FileOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileOptions);

            /** FileOptions java_package. */
            public java_package: string;

            /** FileOptions java_outer_classname. */
            public java_outer_classname: string;

            /** FileOptions java_multiple_files. */
            public java_multiple_files: boolean;

            /** FileOptions java_generate_equals_and_hash. */
            public java_generate_equals_and_hash: boolean;

            /** FileOptions java_string_check_utf8. */
            public java_string_check_utf8: boolean;

            /** FileOptions optimize_for. */
            public optimize_for: google.protobuf.FileOptions.OptimizeMode;

            /** FileOptions go_package. */
            public go_package: string;

            /** FileOptions cc_generic_services. */
            public cc_generic_services: boolean;

            /** FileOptions java_generic_services. */
            public java_generic_services: boolean;

            /** FileOptions py_generic_services. */
            public py_generic_services: boolean;

            /** FileOptions deprecated. */
            public deprecated: boolean;

            /** FileOptions cc_enable_arenas. */
            public cc_enable_arenas: boolean;

            /** FileOptions objc_class_prefix. */
            public objc_class_prefix: string;

            /** FileOptions csharp_namespace. */
            public csharp_namespace: string;

            /** FileOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileOptions;

            /**
             * Decodes a FileOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileOptions;

            /**
             * Verifies a FileOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileOptions;

            /**
             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
             * @param message FileOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FileOptions {

            /** OptimizeMode enum. */
            enum OptimizeMode {
                SPEED = 1,
                CODE_SIZE = 2,
                LITE_RUNTIME = 3
            }
        }

        /** Properties of a MessageOptions. */
        interface IMessageOptions {

            /** MessageOptions message_set_wire_format */
            message_set_wire_format?: (boolean|null);

            /** MessageOptions no_standard_descriptor_accessor */
            no_standard_descriptor_accessor?: (boolean|null);

            /** MessageOptions deprecated */
            deprecated?: (boolean|null);

            /** MessageOptions map_entry */
            map_entry?: (boolean|null);

            /** MessageOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MessageOptions .gogoproto.goproto_getters */
            ".gogoproto.goproto_getters"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_stringer */
            ".gogoproto.goproto_stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.verbose_equal */
            ".gogoproto.verbose_equal"?: (boolean|null);

            /** MessageOptions .gogoproto.face */
            ".gogoproto.face"?: (boolean|null);

            /** MessageOptions .gogoproto.gostring */
            ".gogoproto.gostring"?: (boolean|null);

            /** MessageOptions .gogoproto.populate */
            ".gogoproto.populate"?: (boolean|null);

            /** MessageOptions .gogoproto.stringer */
            ".gogoproto.stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.onlyone */
            ".gogoproto.onlyone"?: (boolean|null);

            /** MessageOptions .gogoproto.equal */
            ".gogoproto.equal"?: (boolean|null);

            /** MessageOptions .gogoproto.description */
            ".gogoproto.description"?: (boolean|null);

            /** MessageOptions .gogoproto.testgen */
            ".gogoproto.testgen"?: (boolean|null);

            /** MessageOptions .gogoproto.benchgen */
            ".gogoproto.benchgen"?: (boolean|null);

            /** MessageOptions .gogoproto.marshaler */
            ".gogoproto.marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unmarshaler */
            ".gogoproto.unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.stable_marshaler */
            ".gogoproto.stable_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.sizer */
            ".gogoproto.sizer"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_marshaler */
            ".gogoproto.unsafe_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_unmarshaler */
            ".gogoproto.unsafe_unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_extensions_map */
            ".gogoproto.goproto_extensions_map"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unrecognized */
            ".gogoproto.goproto_unrecognized"?: (boolean|null);

            /** MessageOptions .gogoproto.protosizer */
            ".gogoproto.protosizer"?: (boolean|null);

            /** MessageOptions .gogoproto.compare */
            ".gogoproto.compare"?: (boolean|null);

            /** MessageOptions .gogoproto.typedecl */
            ".gogoproto.typedecl"?: (boolean|null);

            /** MessageOptions .gogoproto.messagename */
            ".gogoproto.messagename"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_sizecache */
            ".gogoproto.goproto_sizecache"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unkeyed */
            ".gogoproto.goproto_unkeyed"?: (boolean|null);

            /** MessageOptions .cosmos_proto.interface_type */
            ".cosmos_proto.interface_type"?: (string|null);

            /** MessageOptions .cosmos_proto.implements_interface */
            ".cosmos_proto.implements_interface"?: (string|null);
        }

        /** Represents a MessageOptions. */
        class MessageOptions implements IMessageOptions {

            /**
             * Constructs a new MessageOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMessageOptions);

            /** MessageOptions message_set_wire_format. */
            public message_set_wire_format: boolean;

            /** MessageOptions no_standard_descriptor_accessor. */
            public no_standard_descriptor_accessor: boolean;

            /** MessageOptions deprecated. */
            public deprecated: boolean;

            /** MessageOptions map_entry. */
            public map_entry: boolean;

            /** MessageOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MessageOptions;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MessageOptions;

            /**
             * Verifies a MessageOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MessageOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MessageOptions;

            /**
             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
             * @param message MessageOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MessageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MessageOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldOptions. */
        interface IFieldOptions {

            /** FieldOptions ctype */
            ctype?: (google.protobuf.FieldOptions.CType|null);

            /** FieldOptions packed */
            packed?: (boolean|null);

            /** FieldOptions jstype */
            jstype?: (google.protobuf.FieldOptions.JSType|null);

            /** FieldOptions lazy */
            lazy?: (boolean|null);

            /** FieldOptions deprecated */
            deprecated?: (boolean|null);

            /** FieldOptions weak */
            weak?: (boolean|null);

            /** FieldOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FieldOptions .gogoproto.nullable */
            ".gogoproto.nullable"?: (boolean|null);

            /** FieldOptions .gogoproto.embed */
            ".gogoproto.embed"?: (boolean|null);

            /** FieldOptions .gogoproto.customtype */
            ".gogoproto.customtype"?: (string|null);

            /** FieldOptions .gogoproto.customname */
            ".gogoproto.customname"?: (string|null);

            /** FieldOptions .gogoproto.jsontag */
            ".gogoproto.jsontag"?: (string|null);

            /** FieldOptions .gogoproto.moretags */
            ".gogoproto.moretags"?: (string|null);

            /** FieldOptions .gogoproto.casttype */
            ".gogoproto.casttype"?: (string|null);

            /** FieldOptions .gogoproto.castkey */
            ".gogoproto.castkey"?: (string|null);

            /** FieldOptions .gogoproto.castvalue */
            ".gogoproto.castvalue"?: (string|null);

            /** FieldOptions .gogoproto.stdtime */
            ".gogoproto.stdtime"?: (boolean|null);

            /** FieldOptions .gogoproto.stdduration */
            ".gogoproto.stdduration"?: (boolean|null);

            /** FieldOptions .gogoproto.wktpointer */
            ".gogoproto.wktpointer"?: (boolean|null);

            /** FieldOptions .gogoproto.castrepeated */
            ".gogoproto.castrepeated"?: (string|null);

            /** FieldOptions .cosmos_proto.accepts_interface */
            ".cosmos_proto.accepts_interface"?: (string|null);
        }

        /** Represents a FieldOptions. */
        class FieldOptions implements IFieldOptions {

            /**
             * Constructs a new FieldOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldOptions);

            /** FieldOptions ctype. */
            public ctype: google.protobuf.FieldOptions.CType;

            /** FieldOptions packed. */
            public packed: boolean;

            /** FieldOptions jstype. */
            public jstype: google.protobuf.FieldOptions.JSType;

            /** FieldOptions lazy. */
            public lazy: boolean;

            /** FieldOptions deprecated. */
            public deprecated: boolean;

            /** FieldOptions weak. */
            public weak: boolean;

            /** FieldOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldOptions;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldOptions;

            /**
             * Verifies a FieldOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldOptions;

            /**
             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
             * @param message FieldOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldOptions {

            /** CType enum. */
            enum CType {
                STRING = 0,
                CORD = 1,
                STRING_PIECE = 2
            }

            /** JSType enum. */
            enum JSType {
                JS_NORMAL = 0,
                JS_STRING = 1,
                JS_NUMBER = 2
            }
        }

        /** Properties of an OneofOptions. */
        interface IOneofOptions {

            /** OneofOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an OneofOptions. */
        class OneofOptions implements IOneofOptions {

            /**
             * Constructs a new OneofOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofOptions);

            /** OneofOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofOptions;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofOptions;

            /**
             * Verifies an OneofOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofOptions;

            /**
             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
             * @param message OneofOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumOptions. */
        interface IEnumOptions {

            /** EnumOptions allow_alias */
            allow_alias?: (boolean|null);

            /** EnumOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumOptions .gogoproto.goproto_enum_prefix */
            ".gogoproto.goproto_enum_prefix"?: (boolean|null);

            /** EnumOptions .gogoproto.goproto_enum_stringer */
            ".gogoproto.goproto_enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_stringer */
            ".gogoproto.enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_customname */
            ".gogoproto.enum_customname"?: (string|null);

            /** EnumOptions .gogoproto.enumdecl */
            ".gogoproto.enumdecl"?: (boolean|null);
        }

        /** Represents an EnumOptions. */
        class EnumOptions implements IEnumOptions {

            /**
             * Constructs a new EnumOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumOptions);

            /** EnumOptions allow_alias. */
            public allow_alias: boolean;

            /** EnumOptions deprecated. */
            public deprecated: boolean;

            /** EnumOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumOptions;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumOptions;

            /**
             * Verifies an EnumOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumOptions;

            /**
             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
             * @param message EnumOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueOptions. */
        interface IEnumValueOptions {

            /** EnumValueOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumValueOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumValueOptions .gogoproto.enumvalue_customname */
            ".gogoproto.enumvalue_customname"?: (string|null);
        }

        /** Represents an EnumValueOptions. */
        class EnumValueOptions implements IEnumValueOptions {

            /**
             * Constructs a new EnumValueOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueOptions);

            /** EnumValueOptions deprecated. */
            public deprecated: boolean;

            /** EnumValueOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueOptions;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueOptions;

            /**
             * Verifies an EnumValueOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueOptions;

            /**
             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
             * @param message EnumValueOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceOptions. */
        interface IServiceOptions {

            /** ServiceOptions deprecated */
            deprecated?: (boolean|null);

            /** ServiceOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents a ServiceOptions. */
        class ServiceOptions implements IServiceOptions {

            /**
             * Constructs a new ServiceOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceOptions);

            /** ServiceOptions deprecated. */
            public deprecated: boolean;

            /** ServiceOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceOptions;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceOptions;

            /**
             * Verifies a ServiceOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceOptions;

            /**
             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
             * @param message ServiceOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodOptions. */
        interface IMethodOptions {

            /** MethodOptions deprecated */
            deprecated?: (boolean|null);

            /** MethodOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MethodOptions .google.api.http */
            ".google.api.http"?: (google.api.IHttpRule|null);
        }

        /** Represents a MethodOptions. */
        class MethodOptions implements IMethodOptions {

            /**
             * Constructs a new MethodOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodOptions);

            /** MethodOptions deprecated. */
            public deprecated: boolean;

            /** MethodOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodOptions;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodOptions;

            /**
             * Verifies a MethodOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodOptions;

            /**
             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
             * @param message MethodOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UninterpretedOption. */
        interface IUninterpretedOption {

            /** UninterpretedOption name */
            name?: (google.protobuf.UninterpretedOption.INamePart[]|null);

            /** UninterpretedOption identifier_value */
            identifier_value?: (string|null);

            /** UninterpretedOption positive_int_value */
            positive_int_value?: (Long|null);

            /** UninterpretedOption negative_int_value */
            negative_int_value?: (Long|null);

            /** UninterpretedOption double_value */
            double_value?: (number|null);

            /** UninterpretedOption string_value */
            string_value?: (Uint8Array|null);

            /** UninterpretedOption aggregate_value */
            aggregate_value?: (string|null);
        }

        /** Represents an UninterpretedOption. */
        class UninterpretedOption implements IUninterpretedOption {

            /**
             * Constructs a new UninterpretedOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IUninterpretedOption);

            /** UninterpretedOption name. */
            public name: google.protobuf.UninterpretedOption.INamePart[];

            /** UninterpretedOption identifier_value. */
            public identifier_value: string;

            /** UninterpretedOption positive_int_value. */
            public positive_int_value: Long;

            /** UninterpretedOption negative_int_value. */
            public negative_int_value: Long;

            /** UninterpretedOption double_value. */
            public double_value: number;

            /** UninterpretedOption string_value. */
            public string_value: Uint8Array;

            /** UninterpretedOption aggregate_value. */
            public aggregate_value: string;

            /**
             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption;

            /**
             * Verifies an UninterpretedOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UninterpretedOption
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption;

            /**
             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
             * @param message UninterpretedOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.UninterpretedOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UninterpretedOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UninterpretedOption {

            /** Properties of a NamePart. */
            interface INamePart {

                /** NamePart name_part */
                name_part: string;

                /** NamePart is_extension */
                is_extension: boolean;
            }

            /** Represents a NamePart. */
            class NamePart implements INamePart {

                /**
                 * Constructs a new NamePart.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.UninterpretedOption.INamePart);

                /** NamePart name_part. */
                public name_part: string;

                /** NamePart is_extension. */
                public is_extension: boolean;

                /**
                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NamePart message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Decodes a NamePart message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Verifies a NamePart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NamePart
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                 * @param message NamePart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.UninterpretedOption.NamePart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NamePart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SourceCodeInfo. */
        interface ISourceCodeInfo {

            /** SourceCodeInfo location */
            location?: (google.protobuf.SourceCodeInfo.ILocation[]|null);
        }

        /** Represents a SourceCodeInfo. */
        class SourceCodeInfo implements ISourceCodeInfo {

            /**
             * Constructs a new SourceCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ISourceCodeInfo);

            /** SourceCodeInfo location. */
            public location: google.protobuf.SourceCodeInfo.ILocation[];

            /**
             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo;

            /**
             * Verifies a SourceCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SourceCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo;

            /**
             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
             * @param message SourceCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.SourceCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SourceCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace SourceCodeInfo {

            /** Properties of a Location. */
            interface ILocation {

                /** Location path */
                path?: (number[]|null);

                /** Location span */
                span?: (number[]|null);

                /** Location leading_comments */
                leading_comments?: (string|null);

                /** Location trailing_comments */
                trailing_comments?: (string|null);

                /** Location leading_detached_comments */
                leading_detached_comments?: (string[]|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.SourceCodeInfo.ILocation);

                /** Location path. */
                public path: number[];

                /** Location span. */
                public span: number[];

                /** Location leading_comments. */
                public leading_comments: string;

                /** Location trailing_comments. */
                public trailing_comments: string;

                /** Location leading_detached_comments. */
                public leading_detached_comments: string[];

                /**
                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Decodes a Location message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Verifies a Location message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Location
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @param message Location
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.SourceCodeInfo.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Location to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GeneratedCodeInfo. */
        interface IGeneratedCodeInfo {

            /** GeneratedCodeInfo annotation */
            annotation?: (google.protobuf.GeneratedCodeInfo.IAnnotation[]|null);
        }

        /** Represents a GeneratedCodeInfo. */
        class GeneratedCodeInfo implements IGeneratedCodeInfo {

            /**
             * Constructs a new GeneratedCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IGeneratedCodeInfo);

            /** GeneratedCodeInfo annotation. */
            public annotation: google.protobuf.GeneratedCodeInfo.IAnnotation[];

            /**
             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo;

            /**
             * Verifies a GeneratedCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneratedCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo;

            /**
             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
             * @param message GeneratedCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.GeneratedCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneratedCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GeneratedCodeInfo {

            /** Properties of an Annotation. */
            interface IAnnotation {

                /** Annotation path */
                path?: (number[]|null);

                /** Annotation source_file */
                source_file?: (string|null);

                /** Annotation begin */
                begin?: (number|null);

                /** Annotation end */
                end?: (number|null);
            }

            /** Represents an Annotation. */
            class Annotation implements IAnnotation {

                /**
                 * Constructs a new Annotation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.GeneratedCodeInfo.IAnnotation);

                /** Annotation path. */
                public path: number[];

                /** Annotation source_file. */
                public source_file: string;

                /** Annotation begin. */
                public begin: number;

                /** Annotation end. */
                public end: number;

                /**
                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Annotation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Decodes an Annotation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Verifies an Annotation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Annotation
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                 * @param message Annotation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.GeneratedCodeInfo.Annotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Annotation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a Duration. */
        interface IDuration {

            /** Duration seconds */
            seconds?: (Long|null);

            /** Duration nanos */
            nanos?: (number|null);
        }

        /** Represents a Duration. */
        class Duration implements IDuration {

            /**
             * Constructs a new Duration.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDuration);

            /** Duration seconds. */
            public seconds: Long;

            /** Duration nanos. */
            public nanos: number;

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Duration;

            /**
             * Decodes a Duration message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Duration;

            /**
             * Verifies a Duration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Duration
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Duration;

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @param message Duration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Duration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Duration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (Long|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: Long;

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Timestamp;

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Timestamp;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace api. */
    namespace api {

        /** Properties of a Http. */
        interface IHttp {

            /** Http rules */
            rules?: (google.api.IHttpRule[]|null);

            /** Http fully_decode_reserved_expansion */
            fully_decode_reserved_expansion?: (boolean|null);
        }

        /** Represents a Http. */
        class Http implements IHttp {

            /**
             * Constructs a new Http.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttp);

            /** Http rules. */
            public rules: google.api.IHttpRule[];

            /** Http fully_decode_reserved_expansion. */
            public fully_decode_reserved_expansion: boolean;

            /**
             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Http message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.Http;

            /**
             * Decodes a Http message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.Http;

            /**
             * Verifies a Http message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Http message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Http
             */
            public static fromObject(object: { [k: string]: any }): google.api.Http;

            /**
             * Creates a plain object from a Http message. Also converts values to other types if specified.
             * @param message Http
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.Http, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Http to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HttpRule. */
        interface IHttpRule {

            /** HttpRule selector */
            selector?: (string|null);

            /** HttpRule get */
            get?: (string|null);

            /** HttpRule put */
            put?: (string|null);

            /** HttpRule post */
            post?: (string|null);

            /** HttpRule delete */
            "delete"?: (string|null);

            /** HttpRule patch */
            patch?: (string|null);

            /** HttpRule custom */
            custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body */
            body?: (string|null);

            /** HttpRule response_body */
            response_body?: (string|null);

            /** HttpRule additional_bindings */
            additional_bindings?: (google.api.IHttpRule[]|null);
        }

        /** Represents a HttpRule. */
        class HttpRule implements IHttpRule {

            /**
             * Constructs a new HttpRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpRule);

            /** HttpRule selector. */
            public selector: string;

            /** HttpRule get. */
            public get?: (string|null);

            /** HttpRule put. */
            public put?: (string|null);

            /** HttpRule post. */
            public post?: (string|null);

            /** HttpRule delete. */
            public delete?: (string|null);

            /** HttpRule patch. */
            public patch?: (string|null);

            /** HttpRule custom. */
            public custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body. */
            public body: string;

            /** HttpRule response_body. */
            public response_body: string;

            /** HttpRule additional_bindings. */
            public additional_bindings: google.api.IHttpRule[];

            /** HttpRule pattern. */
            public pattern?: ("get"|"put"|"post"|"delete"|"patch"|"custom");

            /**
             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.HttpRule;

            /**
             * Decodes a HttpRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.HttpRule;

            /**
             * Verifies a HttpRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpRule
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpRule;

            /**
             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
             * @param message HttpRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CustomHttpPattern. */
        interface ICustomHttpPattern {

            /** CustomHttpPattern kind */
            kind?: (string|null);

            /** CustomHttpPattern path */
            path?: (string|null);
        }

        /** Represents a CustomHttpPattern. */
        class CustomHttpPattern implements ICustomHttpPattern {

            /**
             * Constructs a new CustomHttpPattern.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.ICustomHttpPattern);

            /** CustomHttpPattern kind. */
            public kind: string;

            /** CustomHttpPattern path. */
            public path: string;

            /**
             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.CustomHttpPattern;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.CustomHttpPattern;

            /**
             * Verifies a CustomHttpPattern message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CustomHttpPattern
             */
            public static fromObject(object: { [k: string]: any }): google.api.CustomHttpPattern;

            /**
             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
             * @param message CustomHttpPattern
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.CustomHttpPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CustomHttpPattern to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace tendermint. */
export namespace tendermint {

    /** Namespace types. */
    namespace types {

        /** BlockIDFlag enum. */
        enum BlockIDFlag {
            BLOCK_ID_FLAG_UNKNOWN = 0,
            BLOCK_ID_FLAG_ABSENT = 1,
            BLOCK_ID_FLAG_COMMIT = 2,
            BLOCK_ID_FLAG_NIL = 3
        }

        /** SignedMsgType enum. */
        enum SignedMsgType {
            SIGNED_MSG_TYPE_UNKNOWN = 0,
            SIGNED_MSG_TYPE_PREVOTE = 1,
            SIGNED_MSG_TYPE_PRECOMMIT = 2,
            SIGNED_MSG_TYPE_PROPOSAL = 32
        }

        /** Properties of a PartSetHeader. */
        interface IPartSetHeader {

            /** PartSetHeader total */
            total?: (number|null);

            /** PartSetHeader hash */
            hash?: (Uint8Array|null);
        }

        /** Represents a PartSetHeader. */
        class PartSetHeader implements IPartSetHeader {

            /**
             * Constructs a new PartSetHeader.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IPartSetHeader);

            /** PartSetHeader total. */
            public total: number;

            /** PartSetHeader hash. */
            public hash: Uint8Array;

            /**
             * Encodes the specified PartSetHeader message. Does not implicitly {@link tendermint.types.PartSetHeader.verify|verify} messages.
             * @param message PartSetHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IPartSetHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PartSetHeader message, length delimited. Does not implicitly {@link tendermint.types.PartSetHeader.verify|verify} messages.
             * @param message PartSetHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IPartSetHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PartSetHeader message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PartSetHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.PartSetHeader;

            /**
             * Decodes a PartSetHeader message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PartSetHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.PartSetHeader;

            /**
             * Verifies a PartSetHeader message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PartSetHeader message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PartSetHeader
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.PartSetHeader;

            /**
             * Creates a plain object from a PartSetHeader message. Also converts values to other types if specified.
             * @param message PartSetHeader
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.PartSetHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PartSetHeader to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Part. */
        interface IPart {

            /** Part index */
            index?: (number|null);

            /** Part bytes */
            bytes?: (Uint8Array|null);

            /** Part proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a Part. */
        class Part implements IPart {

            /**
             * Constructs a new Part.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IPart);

            /** Part index. */
            public index: number;

            /** Part bytes. */
            public bytes: Uint8Array;

            /** Part proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified Part message. Does not implicitly {@link tendermint.types.Part.verify|verify} messages.
             * @param message Part message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IPart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Part message, length delimited. Does not implicitly {@link tendermint.types.Part.verify|verify} messages.
             * @param message Part message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IPart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Part message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Part
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Part;

            /**
             * Decodes a Part message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Part
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Part;

            /**
             * Verifies a Part message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Part message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Part
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Part;

            /**
             * Creates a plain object from a Part message. Also converts values to other types if specified.
             * @param message Part
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Part, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Part to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockID. */
        interface IBlockID {

            /** BlockID hash */
            hash?: (Uint8Array|null);

            /** BlockID part_set_header */
            part_set_header?: (tendermint.types.IPartSetHeader|null);
        }

        /** Represents a BlockID. */
        class BlockID implements IBlockID {

            /**
             * Constructs a new BlockID.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlockID);

            /** BlockID hash. */
            public hash: Uint8Array;

            /** BlockID part_set_header. */
            public part_set_header?: (tendermint.types.IPartSetHeader|null);

            /**
             * Encodes the specified BlockID message. Does not implicitly {@link tendermint.types.BlockID.verify|verify} messages.
             * @param message BlockID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlockID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockID message, length delimited. Does not implicitly {@link tendermint.types.BlockID.verify|verify} messages.
             * @param message BlockID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlockID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.BlockID;

            /**
             * Decodes a BlockID message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.BlockID;

            /**
             * Verifies a BlockID message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockID message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockID
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.BlockID;

            /**
             * Creates a plain object from a BlockID message. Also converts values to other types if specified.
             * @param message BlockID
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.BlockID, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockID to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Header. */
        interface IHeader {

            /** Header version */
            version?: (tendermint.version.IConsensus|null);

            /** Header chain_id */
            chain_id?: (string|null);

            /** Header height */
            height?: (Long|null);

            /** Header time */
            time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id */
            last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash */
            last_commit_hash?: (Uint8Array|null);

            /** Header data_hash */
            data_hash?: (Uint8Array|null);

            /** Header validators_hash */
            validators_hash?: (Uint8Array|null);

            /** Header next_validators_hash */
            next_validators_hash?: (Uint8Array|null);

            /** Header consensus_hash */
            consensus_hash?: (Uint8Array|null);

            /** Header app_hash */
            app_hash?: (Uint8Array|null);

            /** Header last_results_hash */
            last_results_hash?: (Uint8Array|null);

            /** Header evidence_hash */
            evidence_hash?: (Uint8Array|null);

            /** Header proposer_address */
            proposer_address?: (Uint8Array|null);
        }

        /** Represents a Header. */
        class Header implements IHeader {

            /**
             * Constructs a new Header.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IHeader);

            /** Header version. */
            public version?: (tendermint.version.IConsensus|null);

            /** Header chain_id. */
            public chain_id: string;

            /** Header height. */
            public height: Long;

            /** Header time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id. */
            public last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash. */
            public last_commit_hash: Uint8Array;

            /** Header data_hash. */
            public data_hash: Uint8Array;

            /** Header validators_hash. */
            public validators_hash: Uint8Array;

            /** Header next_validators_hash. */
            public next_validators_hash: Uint8Array;

            /** Header consensus_hash. */
            public consensus_hash: Uint8Array;

            /** Header app_hash. */
            public app_hash: Uint8Array;

            /** Header last_results_hash. */
            public last_results_hash: Uint8Array;

            /** Header evidence_hash. */
            public evidence_hash: Uint8Array;

            /** Header proposer_address. */
            public proposer_address: Uint8Array;

            /**
             * Encodes the specified Header message. Does not implicitly {@link tendermint.types.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Header message, length delimited. Does not implicitly {@link tendermint.types.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Header message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Header;

            /**
             * Decodes a Header message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Header;

            /**
             * Verifies a Header message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Header message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Header
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Header;

            /**
             * Creates a plain object from a Header message. Also converts values to other types if specified.
             * @param message Header
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Header to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Data. */
        interface IData {

            /** Data txs */
            txs?: (Uint8Array[]|null);
        }

        /** Represents a Data. */
        class Data implements IData {

            /**
             * Constructs a new Data.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IData);

            /** Data txs. */
            public txs: Uint8Array[];

            /**
             * Encodes the specified Data message. Does not implicitly {@link tendermint.types.Data.verify|verify} messages.
             * @param message Data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Data message, length delimited. Does not implicitly {@link tendermint.types.Data.verify|verify} messages.
             * @param message Data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Data;

            /**
             * Decodes a Data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Data;

            /**
             * Verifies a Data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Data
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Data;

            /**
             * Creates a plain object from a Data message. Also converts values to other types if specified.
             * @param message Data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Vote. */
        interface IVote {

            /** Vote type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Vote height */
            height?: (Long|null);

            /** Vote round */
            round?: (number|null);

            /** Vote block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address */
            validator_address?: (Uint8Array|null);

            /** Vote validator_index */
            validator_index?: (number|null);

            /** Vote signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Vote. */
        class Vote implements IVote {

            /**
             * Constructs a new Vote.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IVote);

            /** Vote type. */
            public type: tendermint.types.SignedMsgType;

            /** Vote height. */
            public height: Long;

            /** Vote round. */
            public round: number;

            /** Vote block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address. */
            public validator_address: Uint8Array;

            /** Vote validator_index. */
            public validator_index: number;

            /** Vote signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Vote message. Does not implicitly {@link tendermint.types.Vote.verify|verify} messages.
             * @param message Vote message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vote message, length delimited. Does not implicitly {@link tendermint.types.Vote.verify|verify} messages.
             * @param message Vote message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vote message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vote
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Vote;

            /**
             * Decodes a Vote message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vote
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Vote;

            /**
             * Verifies a Vote message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vote message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vote
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Vote;

            /**
             * Creates a plain object from a Vote message. Also converts values to other types if specified.
             * @param message Vote
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Vote, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vote to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Commit. */
        interface ICommit {

            /** Commit height */
            height?: (Long|null);

            /** Commit round */
            round?: (number|null);

            /** Commit block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures */
            signatures?: (tendermint.types.ICommitSig[]|null);
        }

        /** Represents a Commit. */
        class Commit implements ICommit {

            /**
             * Constructs a new Commit.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ICommit);

            /** Commit height. */
            public height: Long;

            /** Commit round. */
            public round: number;

            /** Commit block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures. */
            public signatures: tendermint.types.ICommitSig[];

            /**
             * Encodes the specified Commit message. Does not implicitly {@link tendermint.types.Commit.verify|verify} messages.
             * @param message Commit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ICommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Commit message, length delimited. Does not implicitly {@link tendermint.types.Commit.verify|verify} messages.
             * @param message Commit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ICommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Commit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Commit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Commit;

            /**
             * Decodes a Commit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Commit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Commit;

            /**
             * Verifies a Commit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Commit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Commit
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Commit;

            /**
             * Creates a plain object from a Commit message. Also converts values to other types if specified.
             * @param message Commit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Commit, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Commit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CommitSig. */
        interface ICommitSig {

            /** CommitSig block_id_flag */
            block_id_flag?: (tendermint.types.BlockIDFlag|null);

            /** CommitSig validator_address */
            validator_address?: (Uint8Array|null);

            /** CommitSig timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a CommitSig. */
        class CommitSig implements ICommitSig {

            /**
             * Constructs a new CommitSig.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ICommitSig);

            /** CommitSig block_id_flag. */
            public block_id_flag: tendermint.types.BlockIDFlag;

            /** CommitSig validator_address. */
            public validator_address: Uint8Array;

            /** CommitSig timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified CommitSig message. Does not implicitly {@link tendermint.types.CommitSig.verify|verify} messages.
             * @param message CommitSig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ICommitSig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CommitSig message, length delimited. Does not implicitly {@link tendermint.types.CommitSig.verify|verify} messages.
             * @param message CommitSig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ICommitSig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommitSig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommitSig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.CommitSig;

            /**
             * Decodes a CommitSig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommitSig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.CommitSig;

            /**
             * Verifies a CommitSig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommitSig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommitSig
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.CommitSig;

            /**
             * Creates a plain object from a CommitSig message. Also converts values to other types if specified.
             * @param message CommitSig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.CommitSig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommitSig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Proposal. */
        interface IProposal {

            /** Proposal type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Proposal height */
            height?: (Long|null);

            /** Proposal round */
            round?: (number|null);

            /** Proposal pol_round */
            pol_round?: (number|null);

            /** Proposal block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Proposal. */
        class Proposal implements IProposal {

            /**
             * Constructs a new Proposal.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IProposal);

            /** Proposal type. */
            public type: tendermint.types.SignedMsgType;

            /** Proposal height. */
            public height: Long;

            /** Proposal round. */
            public round: number;

            /** Proposal pol_round. */
            public pol_round: number;

            /** Proposal block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Proposal message. Does not implicitly {@link tendermint.types.Proposal.verify|verify} messages.
             * @param message Proposal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Proposal message, length delimited. Does not implicitly {@link tendermint.types.Proposal.verify|verify} messages.
             * @param message Proposal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proposal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Proposal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Proposal;

            /**
             * Decodes a Proposal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Proposal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Proposal;

            /**
             * Verifies a Proposal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Proposal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Proposal
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Proposal;

            /**
             * Creates a plain object from a Proposal message. Also converts values to other types if specified.
             * @param message Proposal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Proposal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SignedHeader. */
        interface ISignedHeader {

            /** SignedHeader header */
            header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit */
            commit?: (tendermint.types.ICommit|null);
        }

        /** Represents a SignedHeader. */
        class SignedHeader implements ISignedHeader {

            /**
             * Constructs a new SignedHeader.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ISignedHeader);

            /** SignedHeader header. */
            public header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit. */
            public commit?: (tendermint.types.ICommit|null);

            /**
             * Encodes the specified SignedHeader message. Does not implicitly {@link tendermint.types.SignedHeader.verify|verify} messages.
             * @param message SignedHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ISignedHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SignedHeader message, length delimited. Does not implicitly {@link tendermint.types.SignedHeader.verify|verify} messages.
             * @param message SignedHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ISignedHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SignedHeader message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SignedHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.SignedHeader;

            /**
             * Decodes a SignedHeader message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SignedHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.SignedHeader;

            /**
             * Verifies a SignedHeader message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SignedHeader message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SignedHeader
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.SignedHeader;

            /**
             * Creates a plain object from a SignedHeader message. Also converts values to other types if specified.
             * @param message SignedHeader
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.SignedHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SignedHeader to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LightBlock. */
        interface ILightBlock {

            /** LightBlock signed_header */
            signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set */
            validator_set?: (tendermint.types.IValidatorSet|null);
        }

        /** Represents a LightBlock. */
        class LightBlock implements ILightBlock {

            /**
             * Constructs a new LightBlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ILightBlock);

            /** LightBlock signed_header. */
            public signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set. */
            public validator_set?: (tendermint.types.IValidatorSet|null);

            /**
             * Encodes the specified LightBlock message. Does not implicitly {@link tendermint.types.LightBlock.verify|verify} messages.
             * @param message LightBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ILightBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LightBlock message, length delimited. Does not implicitly {@link tendermint.types.LightBlock.verify|verify} messages.
             * @param message LightBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ILightBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LightBlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LightBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.LightBlock;

            /**
             * Decodes a LightBlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LightBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.LightBlock;

            /**
             * Verifies a LightBlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LightBlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LightBlock
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.LightBlock;

            /**
             * Creates a plain object from a LightBlock message. Also converts values to other types if specified.
             * @param message LightBlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.LightBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LightBlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockMeta. */
        interface IBlockMeta {

            /** BlockMeta block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size */
            block_size?: (Long|null);

            /** BlockMeta header */
            header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs */
            num_txs?: (Long|null);
        }

        /** Represents a BlockMeta. */
        class BlockMeta implements IBlockMeta {

            /**
             * Constructs a new BlockMeta.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlockMeta);

            /** BlockMeta block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size. */
            public block_size: Long;

            /** BlockMeta header. */
            public header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs. */
            public num_txs: Long;

            /**
             * Encodes the specified BlockMeta message. Does not implicitly {@link tendermint.types.BlockMeta.verify|verify} messages.
             * @param message BlockMeta message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlockMeta, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockMeta message, length delimited. Does not implicitly {@link tendermint.types.BlockMeta.verify|verify} messages.
             * @param message BlockMeta message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlockMeta, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockMeta message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockMeta
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.BlockMeta;

            /**
             * Decodes a BlockMeta message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockMeta
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.BlockMeta;

            /**
             * Verifies a BlockMeta message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockMeta message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockMeta
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.BlockMeta;

            /**
             * Creates a plain object from a BlockMeta message. Also converts values to other types if specified.
             * @param message BlockMeta
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.BlockMeta, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockMeta to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TxProof. */
        interface ITxProof {

            /** TxProof root_hash */
            root_hash?: (Uint8Array|null);

            /** TxProof data */
            data?: (Uint8Array|null);

            /** TxProof proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a TxProof. */
        class TxProof implements ITxProof {

            /**
             * Constructs a new TxProof.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ITxProof);

            /** TxProof root_hash. */
            public root_hash: Uint8Array;

            /** TxProof data. */
            public data: Uint8Array;

            /** TxProof proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified TxProof message. Does not implicitly {@link tendermint.types.TxProof.verify|verify} messages.
             * @param message TxProof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ITxProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TxProof message, length delimited. Does not implicitly {@link tendermint.types.TxProof.verify|verify} messages.
             * @param message TxProof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ITxProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TxProof message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TxProof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.TxProof;

            /**
             * Decodes a TxProof message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TxProof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.TxProof;

            /**
             * Verifies a TxProof message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TxProof message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TxProof
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.TxProof;

            /**
             * Creates a plain object from a TxProof message. Also converts values to other types if specified.
             * @param message TxProof
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.TxProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TxProof to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ValidatorSet. */
        interface IValidatorSet {

            /** ValidatorSet validators */
            validators?: (tendermint.types.IValidator[]|null);

            /** ValidatorSet proposer */
            proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power */
            total_voting_power?: (Long|null);
        }

        /** Represents a ValidatorSet. */
        class ValidatorSet implements IValidatorSet {

            /**
             * Constructs a new ValidatorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IValidatorSet);

            /** ValidatorSet validators. */
            public validators: tendermint.types.IValidator[];

            /** ValidatorSet proposer. */
            public proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power. */
            public total_voting_power: Long;

            /**
             * Encodes the specified ValidatorSet message. Does not implicitly {@link tendermint.types.ValidatorSet.verify|verify} messages.
             * @param message ValidatorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IValidatorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValidatorSet message, length delimited. Does not implicitly {@link tendermint.types.ValidatorSet.verify|verify} messages.
             * @param message ValidatorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IValidatorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValidatorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.ValidatorSet;

            /**
             * Decodes a ValidatorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValidatorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.ValidatorSet;

            /**
             * Verifies a ValidatorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValidatorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValidatorSet
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.ValidatorSet;

            /**
             * Creates a plain object from a ValidatorSet message. Also converts values to other types if specified.
             * @param message ValidatorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.ValidatorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValidatorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Validator. */
        interface IValidator {

            /** Validator address */
            address?: (Uint8Array|null);

            /** Validator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power */
            voting_power?: (Long|null);

            /** Validator proposer_priority */
            proposer_priority?: (Long|null);
        }

        /** Represents a Validator. */
        class Validator implements IValidator {

            /**
             * Constructs a new Validator.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IValidator);

            /** Validator address. */
            public address: Uint8Array;

            /** Validator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power. */
            public voting_power: Long;

            /** Validator proposer_priority. */
            public proposer_priority: Long;

            /**
             * Encodes the specified Validator message. Does not implicitly {@link tendermint.types.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Validator message, length delimited. Does not implicitly {@link tendermint.types.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Validator message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Validator;

            /**
             * Decodes a Validator message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Validator;

            /**
             * Verifies a Validator message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Validator message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Validator
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Validator;

            /**
             * Creates a plain object from a Validator message. Also converts values to other types if specified.
             * @param message Validator
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Validator to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SimpleValidator. */
        interface ISimpleValidator {

            /** SimpleValidator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power */
            voting_power?: (Long|null);
        }

        /** Represents a SimpleValidator. */
        class SimpleValidator implements ISimpleValidator {

            /**
             * Constructs a new SimpleValidator.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ISimpleValidator);

            /** SimpleValidator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power. */
            public voting_power: Long;

            /**
             * Encodes the specified SimpleValidator message. Does not implicitly {@link tendermint.types.SimpleValidator.verify|verify} messages.
             * @param message SimpleValidator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ISimpleValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SimpleValidator message, length delimited. Does not implicitly {@link tendermint.types.SimpleValidator.verify|verify} messages.
             * @param message SimpleValidator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ISimpleValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimpleValidator message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SimpleValidator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.SimpleValidator;

            /**
             * Decodes a SimpleValidator message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SimpleValidator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.SimpleValidator;

            /**
             * Verifies a SimpleValidator message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SimpleValidator message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SimpleValidator
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.SimpleValidator;

            /**
             * Creates a plain object from a SimpleValidator message. Also converts values to other types if specified.
             * @param message SimpleValidator
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.SimpleValidator, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SimpleValidator to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace crypto. */
    namespace crypto {

        /** Properties of a Proof. */
        interface IProof {

            /** Proof total */
            total?: (Long|null);

            /** Proof index */
            index?: (Long|null);

            /** Proof leaf_hash */
            leaf_hash?: (Uint8Array|null);

            /** Proof aunts */
            aunts?: (Uint8Array[]|null);
        }

        /** Represents a Proof. */
        class Proof implements IProof {

            /**
             * Constructs a new Proof.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProof);

            /** Proof total. */
            public total: Long;

            /** Proof index. */
            public index: Long;

            /** Proof leaf_hash. */
            public leaf_hash: Uint8Array;

            /** Proof aunts. */
            public aunts: Uint8Array[];

            /**
             * Encodes the specified Proof message. Does not implicitly {@link tendermint.crypto.Proof.verify|verify} messages.
             * @param message Proof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Proof message, length delimited. Does not implicitly {@link tendermint.crypto.Proof.verify|verify} messages.
             * @param message Proof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proof message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Proof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.Proof;

            /**
             * Decodes a Proof message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Proof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.Proof;

            /**
             * Verifies a Proof message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Proof message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Proof
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.Proof;

            /**
             * Creates a plain object from a Proof message. Also converts values to other types if specified.
             * @param message Proof
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.Proof, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Proof to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ValueOp. */
        interface IValueOp {

            /** ValueOp key */
            key?: (Uint8Array|null);

            /** ValueOp proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a ValueOp. */
        class ValueOp implements IValueOp {

            /**
             * Constructs a new ValueOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IValueOp);

            /** ValueOp key. */
            public key: Uint8Array;

            /** ValueOp proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified ValueOp message. Does not implicitly {@link tendermint.crypto.ValueOp.verify|verify} messages.
             * @param message ValueOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IValueOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValueOp message, length delimited. Does not implicitly {@link tendermint.crypto.ValueOp.verify|verify} messages.
             * @param message ValueOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IValueOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValueOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValueOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ValueOp;

            /**
             * Decodes a ValueOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValueOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ValueOp;

            /**
             * Verifies a ValueOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValueOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValueOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ValueOp;

            /**
             * Creates a plain object from a ValueOp message. Also converts values to other types if specified.
             * @param message ValueOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ValueOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValueOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DominoOp. */
        interface IDominoOp {

            /** DominoOp key */
            key?: (string|null);

            /** DominoOp input */
            input?: (string|null);

            /** DominoOp output */
            output?: (string|null);
        }

        /** Represents a DominoOp. */
        class DominoOp implements IDominoOp {

            /**
             * Constructs a new DominoOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IDominoOp);

            /** DominoOp key. */
            public key: string;

            /** DominoOp input. */
            public input: string;

            /** DominoOp output. */
            public output: string;

            /**
             * Encodes the specified DominoOp message. Does not implicitly {@link tendermint.crypto.DominoOp.verify|verify} messages.
             * @param message DominoOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IDominoOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DominoOp message, length delimited. Does not implicitly {@link tendermint.crypto.DominoOp.verify|verify} messages.
             * @param message DominoOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IDominoOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DominoOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DominoOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.DominoOp;

            /**
             * Decodes a DominoOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DominoOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.DominoOp;

            /**
             * Verifies a DominoOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DominoOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DominoOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.DominoOp;

            /**
             * Creates a plain object from a DominoOp message. Also converts values to other types if specified.
             * @param message DominoOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.DominoOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DominoOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ProofOp. */
        interface IProofOp {

            /** ProofOp type */
            type?: (string|null);

            /** ProofOp key */
            key?: (Uint8Array|null);

            /** ProofOp data */
            data?: (Uint8Array|null);
        }

        /** Represents a ProofOp. */
        class ProofOp implements IProofOp {

            /**
             * Constructs a new ProofOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProofOp);

            /** ProofOp type. */
            public type: string;

            /** ProofOp key. */
            public key: Uint8Array;

            /** ProofOp data. */
            public data: Uint8Array;

            /**
             * Encodes the specified ProofOp message. Does not implicitly {@link tendermint.crypto.ProofOp.verify|verify} messages.
             * @param message ProofOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProofOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProofOp message, length delimited. Does not implicitly {@link tendermint.crypto.ProofOp.verify|verify} messages.
             * @param message ProofOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProofOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProofOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ProofOp;

            /**
             * Decodes a ProofOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProofOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ProofOp;

            /**
             * Verifies a ProofOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProofOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProofOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ProofOp;

            /**
             * Creates a plain object from a ProofOp message. Also converts values to other types if specified.
             * @param message ProofOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ProofOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProofOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ProofOps. */
        interface IProofOps {

            /** ProofOps ops */
            ops?: (tendermint.crypto.IProofOp[]|null);
        }

        /** Represents a ProofOps. */
        class ProofOps implements IProofOps {

            /**
             * Constructs a new ProofOps.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProofOps);

            /** ProofOps ops. */
            public ops: tendermint.crypto.IProofOp[];

            /**
             * Encodes the specified ProofOps message. Does not implicitly {@link tendermint.crypto.ProofOps.verify|verify} messages.
             * @param message ProofOps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProofOps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProofOps message, length delimited. Does not implicitly {@link tendermint.crypto.ProofOps.verify|verify} messages.
             * @param message ProofOps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProofOps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOps message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProofOps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ProofOps;

            /**
             * Decodes a ProofOps message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProofOps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ProofOps;

            /**
             * Verifies a ProofOps message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProofOps message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProofOps
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ProofOps;

            /**
             * Creates a plain object from a ProofOps message. Also converts values to other types if specified.
             * @param message ProofOps
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ProofOps, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProofOps to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PublicKey. */
        interface IPublicKey {

            /** PublicKey ed25519 */
            ed25519?: (Uint8Array|null);

            /** PublicKey secp256k1 */
            secp256k1?: (Uint8Array|null);
        }

        /** Represents a PublicKey. */
        class PublicKey implements IPublicKey {

            /**
             * Constructs a new PublicKey.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IPublicKey);

            /** PublicKey ed25519. */
            public ed25519?: (Uint8Array|null);

            /** PublicKey secp256k1. */
            public secp256k1?: (Uint8Array|null);

            /** PublicKey sum. */
            public sum?: ("ed25519"|"secp256k1");

            /**
             * Encodes the specified PublicKey message. Does not implicitly {@link tendermint.crypto.PublicKey.verify|verify} messages.
             * @param message PublicKey message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PublicKey message, length delimited. Does not implicitly {@link tendermint.crypto.PublicKey.verify|verify} messages.
             * @param message PublicKey message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PublicKey message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PublicKey
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.PublicKey;

            /**
             * Decodes a PublicKey message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PublicKey
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.PublicKey;

            /**
             * Verifies a PublicKey message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PublicKey message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PublicKey
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.PublicKey;

            /**
             * Creates a plain object from a PublicKey message. Also converts values to other types if specified.
             * @param message PublicKey
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.PublicKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PublicKey to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace version. */
    namespace version {

        /** Properties of an App. */
        interface IApp {

            /** App protocol */
            protocol?: (Long|null);

            /** App software */
            software?: (string|null);
        }

        /** Represents an App. */
        class App implements IApp {

            /**
             * Constructs a new App.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.version.IApp);

            /** App protocol. */
            public protocol: Long;

            /** App software. */
            public software: string;

            /**
             * Encodes the specified App message. Does not implicitly {@link tendermint.version.App.verify|verify} messages.
             * @param message App message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.version.IApp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified App message, length delimited. Does not implicitly {@link tendermint.version.App.verify|verify} messages.
             * @param message App message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.version.IApp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an App message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.version.App;

            /**
             * Decodes an App message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.version.App;

            /**
             * Verifies an App message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an App message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns App
             */
            public static fromObject(object: { [k: string]: any }): tendermint.version.App;

            /**
             * Creates a plain object from an App message. Also converts values to other types if specified.
             * @param message App
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.version.App, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this App to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Consensus. */
        interface IConsensus {

            /** Consensus block */
            block?: (Long|null);

            /** Consensus app */
            app?: (Long|null);
        }

        /** Represents a Consensus. */
        class Consensus implements IConsensus {

            /**
             * Constructs a new Consensus.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.version.IConsensus);

            /** Consensus block. */
            public block: Long;

            /** Consensus app. */
            public app: Long;

            /**
             * Encodes the specified Consensus message. Does not implicitly {@link tendermint.version.Consensus.verify|verify} messages.
             * @param message Consensus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.version.IConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Consensus message, length delimited. Does not implicitly {@link tendermint.version.Consensus.verify|verify} messages.
             * @param message Consensus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.version.IConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Consensus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Consensus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.version.Consensus;

            /**
             * Decodes a Consensus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Consensus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.version.Consensus;

            /**
             * Verifies a Consensus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Consensus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Consensus
             */
            public static fromObject(object: { [k: string]: any }): tendermint.version.Consensus;

            /**
             * Creates a plain object from a Consensus message. Also converts values to other types if specified.
             * @param message Consensus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.version.Consensus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Consensus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
